{"remainingRequest":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\apiAutomation\\apiModule\\ApiModule.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\apiAutomation\\apiModule\\ApiModule.vue","mtime":1652877133452},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ApiModule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;;AAIA","file":"ApiModule.vue","sourceRoot":"src/components/page/apiAutomation/apiModule","sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"crumbs\">\r\n        <el-breadcrumb separator=\"/\">\r\n          <el-breadcrumb-item>\r\n            <i class=\"el-icon-lx-calendar\"></i> API项目\r\n          </el-breadcrumb-item>\r\n          <el-breadcrumb-item>API模块</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n      </div>\r\n        <el-row>\r\n          <el-button @click=\"returnProjectList\" >返回</el-button>\r\n\r\n          <el-button type=\"primary\" @click=\"addModulePopup\" >创建API模块</el-button>\r\n        </el-row>\r\n\r\n\r\n        <el-dialog title=\"创建页面\" :visible.sync=\"addModuledialogFormVisible\">\r\n            <el-form :model=\"addModuleData\" :rules=\"rules\" ref=\"addModuleFormRef\">\r\n                <el-form-item label=\"模块名称\" label-width=\"100px\" prop=\"api_module_name\">\r\n                    <el-input v-model=\"addModuleData.api_module_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"模块描述\" label-width=\"100px\" prop=\"api_module_describe\">\r\n                    <el-input type=\"textarea\" v-model=\"addModuleData.api_module_describe\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addModuledialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addModule\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"编辑模块\" :visible.sync=\"editModuledialogFormVisible\">\r\n            <el-form :model=\"editModuleData\" :rules=\"rules\" ref=\"editPageFormRef\">\r\n                <el-form-item label=\"模块名称\" label-width=\"100px\" prop=\"api_module_name\">\r\n                    <el-input v-model=\"editModuleData.api_module_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n\r\n\r\n                <el-form-item label=\"模块描述\" label-width=\"100px\" prop=\"api_module_describe\">\r\n                    <el-input type=\"textarea\" v-model=\"editModuleData.api_module_describe\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editModuledialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editModule\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <div>\r\n            <el-table\r\n                    :data=\"tableData\"\r\n                    style=\"width: 100%\">\r\n                <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"id\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_project_name\"\r\n                        label=\"API项目名称\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_module_name\"\r\n                        label=\"API模块名称\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_module_describe\"\r\n                        label=\"API模块描述\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"updata_time\"\r\n                        label=\"更新时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"create_time\"\r\n                        label=\"创建时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                @click=\"editModulePopup(scope.row)\">编辑</el-button>\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteModulePopup(scope.row)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-pagination\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\"\r\n                :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n                :page-size=\"size_page\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"total_module\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {getApiModuleRequest, addApiModuleRequest, getSingleApiModuleRequest, updateSingleApiModuleRequest, deleteSingleApiModuleRequest, getSingleApiProjectModuleRequest} from '../../../../api/apiAutomation/apiModule';\r\n\r\n    export default {\r\n        name: 'ApiModule',\r\n        props: ['type', 'apiProjectId'],\r\n\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n                currentPage: 1,\r\n                size_page: 10,\r\n                total_module: 0,\r\n                addModuledialogFormVisible: false,\r\n                editModuledialogFormVisible: false,\r\n\r\n                addModuleData: {\r\n                    api_module_name: \"\",\r\n                    api_module_describe: \"\",\r\n                    api_project_id: this.projectId,\r\n                },\r\n\r\n                apiProjectSelect: [],\r\n\r\n                apiProjectSelectId: \"\",\r\n\r\n                editModuleData: {\r\n                    api_module_name: \"\",\r\n                    api_module_describe: \"\",\r\n                    api_project_id: this.projectId,\r\n                    id: 0,\r\n                },\r\n\r\n                moduleId: \"\",\r\n\r\n                projectId: \"\",\r\n\r\n                rules: {\r\n                    api_module_name: [\r\n                        {required: true, message: '请输入模块名称', trigger: 'blur'},\r\n                    ],\r\n                    api_module_describe: [\r\n                        {required: true, message: '请输入模块描述', trigger: 'blur'},\r\n                    ],\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n\r\n            formatter(row, column) {\r\n                return row.address;\r\n            },\r\n            handleEdit(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleDelete(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleSizeChange(val) {\r\n                this.size_page = val;\r\n                this.getSingleAPIProjectModule()\r\n            },\r\n            handleCurrentChange(val) {\r\n                this.currentPage = val;\r\n                this.getSingleAPIProjectModule()\r\n            },\r\n\r\n\r\n\r\n            // 添加API模块\r\n            addModule() {\r\n                let req = JSON.parse(JSON.stringify(this.addModuleData));\r\n                console.log(req)\r\n\r\n                this.$refs.addModuleFormRef.validate((valid) => {\r\n                    if (valid) { // 代表校验通过\r\n                        addApiModuleRequest(req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.addModuledialogFormVisible = false;\r\n\r\n                                this.getSingleAPIProjectModule()\r\n                                this.$message.success(\"创建模块成功\")\r\n                            } else {\r\n                                this.$message.error(\"创建模块失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n            // 添加页面 弹窗\r\n            addModulePopup(){\r\n\r\n                this.addModuleData = {\r\n                    api_module_name: \"\",\r\n                    api_module_describe: \"\",\r\n                    api_project_id: this.projectId,\r\n\r\n                };\r\n                this.addModuledialogFormVisible=true;\r\n\r\n\r\n            },\r\n\r\n            handleNodeClick(data) {\r\n                this.currentServiceId = data.id;\r\n            },\r\n\r\n\r\n            //编辑模块\r\n            editModule(){\r\n                let req = JSON.parse(JSON.stringify(this.editModuleData));\r\n\r\n                this.$refs.editPageFormRef.validate((valid) => {\r\n\r\n                    console.log(this.projectId);\r\n                    if (valid) { // 代表校验通过\r\n                        updateSingleApiModuleRequest(this.moduleId, req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getSingleAPIProjectModule()\r\n                                this.editModuledialogFormVisible = false;\r\n                                this.$message.success(\"编辑页面成功\")\r\n                            } else {\r\n                                this.$message.error(\"编辑页面失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            //编辑页面弹窗并获取单个项目\r\n            editModulePopup(data){\r\n                this.moduleId = data.id;\r\n                this.editModuleData = data\r\n                console.log(this.moduleId);\r\n\r\n\r\n                // 获取单个页面信息\r\n                getSingleApiModuleRequest(this.moduleId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.editModuleData.api_module_name = data.data.data.api_module_name;\r\n                            this.editModuleData.api_module_describe = data.data.data.api_module_describe;\r\n                            this.editModuleData.api_project_id = data.data.data.api_project\r\n                            console.log(\"这是获取项目id\")\r\n                            this.editModuledialogFormVisible=true;\r\n\r\n\r\n                        } else {\r\n                            this.$message.error(\"获取接口失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n            //删除单个项目\r\n            deleteModulePopup(data){\r\n\r\n                this.moduleId = data.id;\r\n\r\n                deleteSingleApiModuleRequest(this.moduleId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.getSingleAPIProjectModule();\r\n                            this.$message.success(\"删除页面成功\")\r\n\r\n                        } else {\r\n                            this.$message.error(\"删除页面失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n            //获取 单个API项目中包含得所有模块\r\n            getSingleAPIProjectModule(){\r\n                getSingleApiProjectModuleRequest(this.projectId, this.size_page, this.currentPage).then(data => {\r\n                        if (true === data.data.success) {\r\n                            console.log(data.data.data)\r\n                            this.tableData = data.data.data.data;\r\n                            this.total_module = data.data.data.total_module\r\n                        } else {\r\n                            this.$message.error(\"获取接口失败\")\r\n                        }\r\n                    }\r\n                );\r\n            },\r\n\r\n\r\n          // 返回API项目列表\r\n          returnProjectList(){\r\n            this.$parent.apiProjectList();\r\n          }\r\n\r\n\r\n\r\n        },\r\n        created() {\r\n            console.log(this.apiProjectId)\r\n            if ('enter'=== this.type){\r\n                this.projectId = this.apiProjectId\r\n                this.getSingleAPIProjectModule()\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}