{"remainingRequest":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueAutomatedTestPlatform\\src\\components\\page\\apiAutomation\\apiDatabase\\ApiDatabase.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VueAutomatedTestPlatform\\src\\components\\page\\apiAutomation\\apiDatabase\\ApiDatabase.vue","mtime":1652877133451},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ApiDatabase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA","file":"ApiDatabase.vue","sourceRoot":"src/components/page/apiAutomation/apiDatabase","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API数据库\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API数据库</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <el-row>\r\n            <el-button type=\"primary\" @click=\"addDatabasePopup\" >创建API数据库</el-button>\r\n        </el-row>\r\n\r\n\r\n        <el-dialog title=\"创建API数据库\" :visible.sync=\"addApiDatabasedialogFormVisible\">\r\n            <el-form :model=\"addDatabaseData\" :rules=\"rules\" ref=\"addDatabaseFormRef\">\r\n                <el-form-item label=\"数据库名称\" label-width=\"100px\" prop=\"api_database_title\">\r\n                    <el-input v-model=\"addDatabaseData.api_database_title\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"Host\" label-width=\"100px\" prop=\"api_host\">\r\n                    <el-input v-model=\"addDatabaseData.api_host\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"端口号\" label-width=\"100px\" prop=\"api_port\">\r\n                    <el-input v-model=\"addDatabaseData.api_port\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户名\" label-width=\"100px\" prop=\"user\">\r\n                    <el-input v-model=\"addDatabaseData.user\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" label-width=\"100px\" prop=\"password\">\r\n                    <el-input v-model=\"addDatabaseData.password\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"数据库表名\" label-width=\"100px\" prop=\"database\">\r\n                    <el-input v-model=\"addDatabaseData.database\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"debugAddDatabase\">调试</el-button>\r\n                <el-button @click=\"addApiDatabasedialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addApiDatabase\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"编辑环境\" :visible.sync=\"editApiDatabasedialogFormVisible\">\r\n            <el-form :model=\"editDatabaseData\" :rules=\"rules\" ref=\"editDatabaseFormRef\">\r\n                <el-form-item label=\"数据库名称\" label-width=\"100px\" prop=\"api_database_title\">\r\n                    <el-input v-model=\"editDatabaseData.api_database_title\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"Host\" label-width=\"100px\" prop=\"api_host\">\r\n                    <el-input v-model=\"editDatabaseData.api_host\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"端口号\" label-width=\"100px\" prop=\"api_port\">\r\n                    <el-input type=\"textarea\" v-model=\"editDatabaseData.api_port\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户名\" label-width=\"100px\" prop=\"user\">\r\n                    <el-input v-model=\"editDatabaseData.user\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" label-width=\"100px\" prop=\"password\">\r\n                    <el-input v-model=\"editDatabaseData.password\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"数据库表名\" label-width=\"100px\" prop=\"database\">\r\n                    <el-input v-model=\"editDatabaseData.database\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"debugDatabase\">调试</el-button>\r\n                <el-button @click=\"editApiDatabasedialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editDatabase\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <div>\r\n            <el-table\r\n                    :data=\"tableData\"\r\n                    style=\"width: 100%\">\r\n                <!--                    :default-sort = \"{prop: 'date', order: 'descending'}\">-->\r\n                <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"id\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_database_title\"\r\n                        label=\"数据库\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_host\"\r\n                        label=\"Host\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"updata_time\"\r\n                        label=\"更新时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"create_time\"\r\n                        label=\"创建时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                @click=\"editApiDatabasePopup(scope.row)\">编辑</el-button>\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteDatabasePopup(scope.row)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import {getDatabaseRequest, addDatabaseRequest,getSingleDatabaseRequest,updateSingleDatabaseRequest, deleteSingleDatabaseRequest, updateDebugDatabaseRequest} from '../../../../api/apiAutomation/apiDatabase';\r\n    export default {\r\n        name: 'ApiDatabase',\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n\r\n                page: {\r\n                    page: 1,\r\n                    total: 0,\r\n                    size: 10,\r\n\r\n                },\r\n                addApiDatabasedialogFormVisible: false,\r\n                editApiDatabasedialogFormVisible: false,\r\n\r\n                //数据库表字段\r\n                addDatabaseData: {\r\n                    api_database_title: \"\",\r\n                    api_host: \"\",\r\n                    api_port: \"\",\r\n                    user: \"\",\r\n                    password: \"\",\r\n                    database: \"\"\r\n                },\r\n                editDatabaseData: {\r\n                    api_database_title: \"\",\r\n                    api_host: \"\",\r\n                    api_port: \"\",\r\n                    user: \"\",\r\n                    password: \"\",\r\n                    database: \"\",\r\n                    id: 0,\r\n                },\r\n                databaseId: \"\",\r\n                databaseData: \"\",\r\n\r\n                rules: {\r\n                    api_database_title: [\r\n                        {required: true, message: '请输入数据库名称', trigger: 'blur'},\r\n                    ],\r\n                    api_host: [\r\n                        {required: true, message: '请输入Host', trigger: 'blur'},\r\n                    ],\r\n                    api_port: [\r\n                        {required: true, message: '请输入Port', trigger: 'blur'},\r\n                    ],\r\n                    user: [\r\n                        {required: true, message: '请输入数据库用户名', trigger: 'blur'},\r\n                    ],\r\n                    password: [\r\n                        {required: true, message: '请输入数据库密码', trigger: 'blur'},\r\n                    ],\r\n                    database: [\r\n                        {required: true, message: '请输入数据库表名', trigger: 'blur'},\r\n                    ],\r\n\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n\r\n\r\n            formatter(row, column) {\r\n                return row.address;\r\n            },\r\n            handleEdit(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleDelete(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleSizeChange(size) {\r\n                this.page.size = size;\r\n                this.getDatabaseFun()\r\n            },\r\n            handleCurrentChange(index) {\r\n                this.page.page = index;\r\n                this.getDatabaseFun()\r\n            },\r\n\r\n            //获取所有API环境列表\r\n            getDatabaseFun() {\r\n                let req = {\r\n                    page: this.page.page,\r\n                    size: this.page.size,\r\n                };\r\n                getDatabaseRequest(req).then(data => {\r\n                    console.log(data);\r\n                    if (true === data.data.success) {\r\n                        this.tableData = data.data.data;\r\n                        this.page.total = data.data.data.total;\r\n                        this.page.page = data.data.data.page;\r\n                        this.page.size = data.data.data.size;\r\n\r\n                    } else {\r\n                        this.$message.error(\"获取接口失败\")\r\n                    }\r\n                })\r\n            },\r\n\r\n            // 添加API环境\r\n            addApiDatabase() {\r\n                let req = JSON.parse(JSON.stringify(this.addDatabaseData));\r\n\r\n                this.$refs.addDatabaseFormRef.validate((valid) => {\r\n                    if (valid) { // 代表校验通过\r\n                        addDatabaseRequest(req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getDatabaseFun();\r\n                                this.addApiDatabasedialogFormVisible = false;\r\n                                this.$message.success(\"创建数据库配置成功\")\r\n                            } else {\r\n                                this.$message.error(\"创建数据库配置失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n\r\n            // 添加API数据库 弹窗\r\n            addDatabasePopup(){\r\n                this.addDatabaseData = {\r\n                    api_database_title: \"\",\r\n                    api_host: \"\",\r\n                    api_port: \"\",\r\n                };\r\n                this.addApiDatabasedialogFormVisible=true;\r\n            },\r\n\r\n            handleNodeClick(data) {\r\n                this.currentServiceId = data.id;\r\n            },\r\n            //新增-调试数据库是否连接\r\n            debugAddDatabase(){\r\n                let req = JSON.parse(JSON.stringify(this.addDatabaseData));\r\n\r\n                this.$refs.addDatabaseFormRef.validate((valid) => {\r\n                    if (valid) { // 代表校验通过\r\n                        updateDebugDatabaseRequest(req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.$message.success(\"数据库配置调试成功\")\r\n                            } else {\r\n                                this.$message.error(\"数据库配置调试失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n\r\n\r\n            },\r\n\r\n            //编辑-调试数据库是否连接\r\n            debugDatabase(){\r\n                let req = JSON.parse(JSON.stringify(this.editDatabaseData));\r\n\r\n                this.$refs.editDatabaseFormRef.validate((valid) => {\r\n                    if (valid) { // 代表校验通过\r\n                        updateDebugDatabaseRequest(req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.$message.success(\"数据库配置调试成功\")\r\n                            } else {\r\n                                this.$message.error(\"数据库配置调试失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n\r\n\r\n            },\r\n\r\n\r\n            //编辑API数据库\r\n            editDatabase(){\r\n                let req = JSON.parse(JSON.stringify(this.editDatabaseData));\r\n\r\n                this.$refs.editDatabaseFormRef.validate((valid) => {\r\n\r\n                    console.log(this.databaseId);\r\n                    if (valid) { // 代表校验通过\r\n                        updateSingleDatabaseRequest(this.databaseId, req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getDatabaseFun();\r\n                                this.editApiDatabasedialogFormVisible = false;\r\n                                this.$message.success(\"编辑数据库配置成功\")\r\n                            } else {\r\n                                this.$message.error(\"编辑数据库配置失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            //编辑数据库配置弹窗并获取单个数据库配置\r\n            editApiDatabasePopup(data){\r\n\r\n                this.databaseId = data.id;\r\n                this.databaseData = data;\r\n                this.editApiDatabasedialogFormVisible=true;\r\n\r\n                console.log(this.databaseData);\r\n\r\n                getSingleDatabaseRequest(this.databaseId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.editDatabaseData.api_database_title = data.data.data.api_database_title;\r\n                            this.editDatabaseData.api_port = data.data.data.api_port;\r\n                            this.editDatabaseData.api_host = data.data.data.api_host;\r\n                            this.editDatabaseData.user = data.data.data.user;\r\n                            this.editDatabaseData.password = data.data.data.password;\r\n                            this.editDatabaseData.database = data.data.data.database;\r\n                        } else {\r\n                            this.$message.error(\"获取接口失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n            //删除单个数据库配置\r\n            deleteDatabasePopup(data){\r\n\r\n                this.databaseId = data.id;\r\n                this.databaseData = data;\r\n\r\n                console.log(this.databaseId);\r\n                console.log(this.databaseData);\r\n\r\n                deleteSingleDatabaseRequest(this.databaseId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.getDatabaseFun();\r\n                            this.$message.success(\"删除数据库配置成功\")\r\n\r\n                        } else {\r\n                            this.$message.error(\"删除数据库配置失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n        },\r\n        created() {\r\n            this.getDatabaseFun();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}