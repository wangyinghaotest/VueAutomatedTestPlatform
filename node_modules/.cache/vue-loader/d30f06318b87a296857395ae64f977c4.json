{"remainingRequest":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\apiTask\\ApiTestTaskResult.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\apiTask\\ApiTestTaskResult.vue","mtime":1651042060406},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1650008434007},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge2dldEFwaUNhc2VSZXN1bHRSZXF1ZXN0LCBkZWxldGVBcGlDYXNlUmVzdWx0UmVxdWVzdCwgcG9zdFBlcmZvcm1BcGlUYXNrUmVxdWVzdH0gZnJvbSAnLi4vLi4vLi4vYXBpL2FwaVRlc3RUYXNrJzsNCmltcG9ydCBBUElUZXN0VGFza1Jlc3VsdERldGFpbHMgZnJvbSAnLi9BUElUZXN0VGFza1Jlc3VsdERldGFpbHMnOw0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdBcGlUZXN0VGFza1Jlc3VsdCcsDQogICAgaW5qZWN0OlsncmVsb2FkJ10sDQogICAgcHJvcHM6IFsnYXBpVGVzdFRhc2tEYXRhJywgJ2FwaVRlc3RUYXNrSWQnXSwNCiAgICBkYXRhKCl7DQoNCiAgICAgICAgcmV0dXJuew0KDQogICAgICAgICAgICB0YWJsZURhdGE6IFtdLA0KICAgICAgICAgICAgdGVzdFRhc2tJZDogIiIsDQogICAgICAgICAgICByZXN1bHRfaWQ6ICIiLA0KICAgICAgICAgICAgYXBpX1Jlc3VsdDogIiIsDQogICAgICAgICAgICBzaG93QXBpVGVzdFRhc2tSZXN1bHREZXRhaWxzOiBmYWxzZQ0KDQoNCiAgICAgICAgfQ0KDQoNCg0KICAgIH0sDQogICAgbW91bnRlZCgpIHsNCiAgICAgICAgdGhpcy5nZXRBcGlDYXNlUmVzdWx0RnVuKCkNCg0KDQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGRldGFpbHNSZXBvcnQoZGF0YSl7DQogICAgICAgICAgICBjb25zdCB7aHJlZn0gPSB0aGlzLiRyb3V0ZXIucmVzb2x2ZSh7DQogICAgICAgICAgICAgICAgcGF0aDogJy9hcGlfdGVzdF90YXNrX3Jlc3VsdCcsDQogICAgICAgICAgICAgICAgcXVlcnk6IHsNCiAgICAgICAgICAgICAgICAgICAgYXBpUmVzdWx0SWQ6ZGF0YS5pZCwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgd2luZG93Lm9wZW4oaHJlZiwgJ19ibGFuaycpDQoNCg0KICAgICAgICB9LA0KDQogICAgICAgIC8vIOaJp+ihjOa1i+ivleS7u+WKoQ0KICAgICAgICBwZXJmb3JtQXBpVGVzdFRhc2soKXsNCiAgICAgICAgICAgIHBvc3RQZXJmb3JtQXBpVGFza1JlcXVlc3QodGhpcy50ZXN0VGFza0lkKS50aGVuKGRhdGEgPT4gew0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpDQogICAgICAgICAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKXsNCiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5nZXRBcGlUZXN0VGFza0Z1bigpDQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5omn6KGM5rWL6K+V5Lu75Yqh5oiQ5YqfIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSBpZigxMDIwMCA9PT0gZGF0YS5kYXRhLmVycm9yLmNvZGUuc3RhdHVzKXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5b2T5YmN5pyJQVBJ5Lu75Yqh5q2j5Zyo5omn6KGM77yBIikNCg0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5omn6KGMQVBJ5rWL6K+V5Lu75Yqh5aSx6LSlIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KDQoNCiAgICAgICAgLy8g6I635Y+W5rWL6K+V5oql5ZGKDQogICAgICAgIGdldEFwaUNhc2VSZXN1bHRGdW4oKSB7DQogICAgICAgICAgICBnZXRBcGlDYXNlUmVzdWx0UmVxdWVzdCh0aGlzLnRlc3RUYXNrSWQpLnRoZW4oZGF0YSA9PnsNCiAgICAgICAgICAgICAgICBpZiAodHJ1ZSA9PT0gZGF0YS5kYXRhLnN1Y2Nlc3Mpew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnRhYmxlRGF0YSA9IGRhdGEuZGF0YS5kYXRhLmRhdGE7DQoNCiAgICAgICAgICAgICAgICB9ZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuaW5mbygi6I635Y+W5o6l5Y+j5aSx6LSlIikNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0sDQoNCg0KICAgICAgICBjaGVja1JlcG9ydChkYXRhKXsNCiAgICAgICAgICAgIHRoaXMuc2hvd0FwaVRlc3RUYXNrUmVzdWx0RGV0YWlscyA9IHRydWUNCiAgICAgICAgICAgIHRoaXMucmVzdWx0X2lkID0gZGF0YS5pZA0KDQogICAgICAgIH0sDQoNCg0KICAgICAgICByZXR1cm5BUElSZXBvcnRMaXN0KCl7DQogICAgICAgICAgICB0aGlzLnNob3dBcGlUZXN0VGFza1Jlc3VsdERldGFpbHMgPSBmYWxzZQ0KICAgICAgICAgICAgdGhpcy5nZXRBcGlDYXNlUmVzdWx0RnVuKCkNCiAgICAgICAgfSwNCg0KICAgICAgICAvLyDliKDpmaTmiqXlkYoNCiAgICAgICAgZGVsZXRlUmVwb3J0KGRhdGEpew0KICAgICAgICAgICAgdGhpcy5yZXN1bHRfaWQgPSBkYXRhLmlkDQogICAgICAgICAgICBkZWxldGVBcGlDYXNlUmVzdWx0UmVxdWVzdCh0aGlzLnJlc3VsdF9pZCkudGhlbihkYXRhID0+ew0KICAgICAgICAgICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2Vzcyl7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0QXBpQ2FzZVJlc3VsdEZ1bigpDQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5Yig6ZmkQVBJ5rWL6K+V5oql5ZGK5oiQ5YqfIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuWIoOmZpEFQSea1i+ivleaKpeWRiuWksei0pSIpDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KDQogICAgICAgIC8vIOi/lOWbnuS7u+WKoeWIl+ihqA0KICAgICAgICByZXR1cm5UYXNrTGlzdCgpew0KICAgICAgICAgICAgdGhpcy4kcGFyZW50LnJldHVybkFQSVRhc2tMaXN0KCk7DQoNCiAgICAgICAgfQ0KDQoNCg0KICAgIH0sDQogICAgY29tcG9uZW50czogew0KICAgICAgICAnYXBpLXRlc3QtdGFzay1yZXN1bHRfZGV0YWlscyc6IEFQSVRlc3RUYXNrUmVzdWx0RGV0YWlscw0KDQogICAgfSwNCiAgICBjcmVhdGVkKCkgew0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFwaVRlc3RUYXNrRGF0YS5pZCkNCiAgICAgICAgdGhpcy50ZXN0VGFza0lkID0gdGhpcy5hcGlUZXN0VGFza0RhdGEuaWQNCg0KICAgIH0NCg0KDQoNCn07DQo="},{"version":3,"sources":["ApiTestTaskResult.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA","file":"ApiTestTaskResult.vue","sourceRoot":"src/components/page/apiTask","sourcesContent":["<template>\r\n    <div>\r\n        <api-test-task-result_details\r\n            :apiResultId = \"result_id\"\r\n            v-if=\"showApiTestTaskResultDetails\">\r\n        </api-test-task-result_details>\r\n        <div v-else>\r\n            <div class=\"crumbs\">\r\n                <el-breadcrumb separator=\"/\">\r\n                    <el-breadcrumb-item>\r\n                        <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n                    </el-breadcrumb-item>\r\n                    <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n                    <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n                    <el-breadcrumb-item>API测试报告</el-breadcrumb-item>\r\n                </el-breadcrumb>\r\n            </div>\r\n            <el-row>\r\n                <el-button @click=\"returnTaskList\">返回</el-button>\r\n                <el-button type=\"danger\" @click=\"performApiTestTask\">执行</el-button>\r\n            </el-row>\r\n            <div>\r\n                <el-table\r\n                    :data=\"tableData\"\r\n                    style=\"width: 100%\">\r\n                    <!--                    :default-sort = \"{prop: 'date', order: 'descending'}\">-->\r\n                    <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"id\"\r\n                        sortable\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_test_result_name\"\r\n                        label=\"测试报告名称\"\r\n                        sortable\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_total_number\"\r\n                        label=\"总数\"\r\n                        sortable\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_successful_total_number\"\r\n                        label=\"成功\"\r\n                        sortable\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_error_total_number\"\r\n                        label=\"失败\"\r\n                        sortable\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n\r\n                    <el-table-column label=\"操作\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"detailsReport(scope.row)\">查看报告</el-button>\r\n<!--                            <el-button-->\r\n<!--                                size=\"mini\"-->\r\n<!--                                type=\"danger\"-->\r\n<!--                                @click=\"checkReport(scope.row)\">查看报告</el-button>-->\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteReport(scope.row)\">删除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getApiCaseResultRequest, deleteApiCaseResultRequest, postPerformApiTaskRequest} from '../../../api/apiTestTask';\r\nimport APITestTaskResultDetails from './APITestTaskResultDetails';\r\nexport default {\r\n    name: 'ApiTestTaskResult',\r\n    inject:['reload'],\r\n    props: ['apiTestTaskData', 'apiTestTaskId'],\r\n    data(){\r\n\r\n        return{\r\n\r\n            tableData: [],\r\n            testTaskId: \"\",\r\n            result_id: \"\",\r\n            api_Result: \"\",\r\n            showApiTestTaskResultDetails: false\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.getApiCaseResultFun()\r\n\r\n\r\n    },\r\n    methods: {\r\n        detailsReport(data){\r\n            const {href} = this.$router.resolve({\r\n                path: '/api_test_task_result',\r\n                query: {\r\n                    apiResultId:data.id,\r\n                }\r\n            })\r\n            window.open(href, '_blank')\r\n\r\n\r\n        },\r\n\r\n        // 执行测试任务\r\n        performApiTestTask(){\r\n            postPerformApiTaskRequest(this.testTaskId).then(data => {\r\n                console.log(data)\r\n                if (true === data.data.success){\r\n                    // this.getApiTestTaskFun()\r\n                    this.$message.success(\"执行测试任务成功\")\r\n                }\r\n                else if(10200 === data.data.error.code.status){\r\n                    this.$message.error(\"当前有API任务正在执行！\")\r\n\r\n                }\r\n                else {\r\n                    this.$message.error(\"执行API测试任务失败\")\r\n                }\r\n            })\r\n        },\r\n\r\n\r\n        // 获取测试报告\r\n        getApiCaseResultFun() {\r\n            getApiCaseResultRequest(this.testTaskId).then(data =>{\r\n                if (true === data.data.success){\r\n                    this.tableData = data.data.data.data;\r\n\r\n                }else {\r\n                    this.$message.info(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n\r\n        checkReport(data){\r\n            this.showApiTestTaskResultDetails = true\r\n            this.result_id = data.id\r\n\r\n        },\r\n\r\n\r\n        returnAPIReportList(){\r\n            this.showApiTestTaskResultDetails = false\r\n            this.getApiCaseResultFun()\r\n        },\r\n\r\n        // 删除报告\r\n        deleteReport(data){\r\n            this.result_id = data.id\r\n            deleteApiCaseResultRequest(this.result_id).then(data =>{\r\n                if (true === data.data.success){\r\n                    this.getApiCaseResultFun()\r\n                    this.$message.success(\"删除API测试报告成功\")\r\n                }\r\n                else {\r\n                    this.$message.error(\"删除API测试报告失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n        // 返回任务列表\r\n        returnTaskList(){\r\n            this.$parent.returnAPITaskList();\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n    components: {\r\n        'api-test-task-result_details': APITestTaskResultDetails\r\n\r\n    },\r\n    created() {\r\n        console.log(this.apiTestTaskData.id)\r\n        this.testTaskId = this.apiTestTaskData.id\r\n\r\n    }\r\n\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}