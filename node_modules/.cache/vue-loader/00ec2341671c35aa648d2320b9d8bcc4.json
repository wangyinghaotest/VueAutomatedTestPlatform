{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\uiPageElement\\addOrEditPageElement.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\uiPageElement\\addOrEditPageElement.vue","mtime":1632633660577},{"path":"E:\\test_platform_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgew0KICBnZXRTZWxlY3RVaVBhZ2VFbGVtZW50UmVxdWVzdCwNCiAgYWRkVWlQYWdlRWxlbWVudFJlcXVlc3QsDQogIHVwZGF0ZVNpbmdsZVVpUGFnZUVsZW1lbnRSZXF1ZXN0LA0KICBnZXRTaW5nbGVVaVBhZ2VFbGVtZW50UmVxdWVzdA0KfSBmcm9tICcuLi8uLi8uLi9hcGkvdWlQYWdlRWxlbWVudCc7DQppbXBvcnQge2dldFVpUG9zaXRpb25pbmdSZXF1ZXN0fSBmcm9tICcuLi8uLi8uLi9hcGkvdWlQb3NpdGlvbmluZyc7DQoNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnYWRkT3JFZGl0UGFnZUVsZW1lbnQnLA0KDQogIC8vIHR5cGUg55So5p2l5qCH6K+G5piv57yW6L6R6L+Y5piv5Yib5bu6DQogIHByb3BzOlsndHlwZScsICd1aVBhZ2VJZCcsICd1aVByb2plY3RJZCddLA0KDQoNCg0KDQoNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdWlQYWdlRWxlbWVudEZvcm06IHsNCiAgICAgICAgdWlfcHJvamVjdF9pZDogIiIsDQogICAgICAgIHVpX3BhZ2VfaWQ6ICIiLA0KICAgICAgfSwNCg0KICAgICAgdWlQYWdlRWxlbWVudFRhYmxlRGF0YTpbDQogICAgICAgIHsNCiAgICAgICAgICB1aV9wYWdlX2VsZW1lbnRfbmFtZTogIiIsDQogICAgICAgICAgdWlfcGFnZV9lbGVtZW50OiAiIiwNCiAgICAgICAgICB1aV9lbGVtZW50X3Bvc2l0aW9uaW5nX2lkOiAiIiwNCiAgICAgICAgICB1aV9wYWdlX2VsZW1lbnRfbW9yZTogIiINCiAgICAgICAgfQ0KDQogICAgICBdLA0KDQogICAgICBwcm9qZWN0U2VsZWN0OiBbXSwNCiAgICAgIHBhZ2VTZWxlY3Q6IFtdLA0KICAgICAgaW5kZXhOdW06IDAsDQoNCiAgICAgIHBvc2l0aW9uaW5nU2VsZWN0OiBbXQ0KDQoNCg0KDQogICAgfQ0KICB9LA0KICBtb3VudGVkKCl7DQogICAgdGhpcy5nZXRTZWxlY3RVaVBhZ2VFbGVtZW50RnVuKCkNCg0KICB9LA0KDQoNCiAgbWV0aG9kczogew0KDQogICAgLy/ojrflj5bmiYDmnInpobnnm64t44CL6aG16Z2iDQogICAgZ2V0U2VsZWN0VWlQYWdlRWxlbWVudEZ1bih2YWx1ZSl7DQogICAgICBnZXRTZWxlY3RVaVBhZ2VFbGVtZW50UmVxdWVzdCgpLnRoZW4oZGF0YSA9PnsNCg0KICAgICAgICBpZiAodHJ1ZSA9PT0gZGF0YS5kYXRhLnN1Y2Nlc3MpIHsNCiAgICAgICAgICB0aGlzLnByb2plY3RTZWxlY3QgPSBkYXRhLmRhdGEuZGF0YTsNCg0KICAgICAgICAgIGxldCBpID0gMDsNCiAgICAgICAgICBmb3IgKGkgPSAwO2k8dGhpcy5wcm9qZWN0U2VsZWN0Lmxlbmd0aDtpKyspIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnByb2plY3RTZWxlY3RbaV0ucHJvamVjdF9pZCA9PT0gdGhpcy51aVBhZ2VFbGVtZW50Rm9ybS51aV9wcm9qZWN0X2lkKXsNCiAgICAgICAgICAgICAgdGhpcy5pbmRleE51bSA9IGk7DQogICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KDQogICAgICAgICAgdGhpcy5wYWdlU2VsZWN0ID0gdGhpcy5wcm9qZWN0U2VsZWN0W3RoaXMuaW5kZXhOdW1dLnBhZ2VfbGlzdDsNCg0KDQoNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIuiOt+WPluaOpeWPo+Wksei0pSIpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCg0KICAgIC8vIOS/neWtmA0KICAgIHNhdmVQYWdlRWxlbWVudCgpIHsNCiAgICAgIGlmICgnYWRkJyA9PT0gdGhpcy50eXBlKXsNCg0KICAgICAgICB0aGlzLmFkZFVpUGFnZUVsZW1lbnQoKQ0KICAgICAgfWVsc2Ugew0KICAgICAgICB0aGlzLmVkaXRVaVBhZ2VFbGVtZW50KCkNCiAgICAgIH0NCiAgICB9LA0KDQogICAgLy8g5Y+W5raIDQogICAgY2FuY2VsU2F2ZVBhZ2VFbGVtZW50KCl7DQogICAgICB0aGlzLiRlbWl0KCdjYW5jZWxTYXZlUGFnZUVsZW1lbnQnKQ0KDQogICAgfSwNCg0KICAgIC8v5re75Yqg6aG16Z2i5YWD57SgDQogICAgYWRkVWlQYWdlRWxlbWVudCgpew0KICAgICAgbGV0IHJlcSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy51aVBhZ2VFbGVtZW50Rm9ybSkpOw0KICAgICAgcmVxLnVpX3BhZ2VfZWxlbWVudF9kYXRhPXRoaXMudWlQYWdlRWxlbWVudFRhYmxlRGF0YQ0KICAgICAgY29uc29sZS5sb2cocmVxKTsNCiAgICAgIHRoaXMuJHJlZnMucGFnZUVsZW1lbnRGb3JtUmVmLnZhbGlkYXRlKCh2YWxpZCkgPT4gew0KDQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMucGFnZUVsZW1lbnRGb3JtUmVmLnZhbGlkYXRlKCh2YWxpZCkpKTsNCiAgICAgICAgaWYgKHZhbGlkKSB7IC8vIOS7o+ihqOagoemqjOmAmui/hw0KICAgICAgICAgIGFkZFVpUGFnZUVsZW1lbnRSZXF1ZXN0KHJlcSkudGhlbihkYXRhID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpDQogICAgICAgICAgICBpZiAodHJ1ZSA9PT0gZGF0YS5kYXRhLnN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLmt7vliqDpobXpnaLlhYPntKDmiJDlip8iKQ0KDQogICAgICAgICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7DQogICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NhdmVQYWdlRWxlbWVudCcpDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIua3u+WKoOmhtemdouWFg+e0oOWksei0pSIpDQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgfSBlbHNlIHsgIC8v5qCh6aqM5aSx6LSlDQogICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCg0KDQogICAgICB9KTsNCg0KICAgIH0sDQoNCiAgICAvL+e8lui+kemhtemdouWFg+e0oA0KICAgIGVkaXRVaVBhZ2VFbGVtZW50KCl7DQogICAgICBsZXQgcmVxID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnVpUGFnZUVsZW1lbnRGb3JtKSk7DQogICAgICByZXEudWlfcGFnZV9lbGVtZW50X2RhdGE9dGhpcy51aVBhZ2VFbGVtZW50VGFibGVEYXRhDQoNCiAgICAgIHRoaXMuJHJlZnMucGFnZUVsZW1lbnRGb3JtUmVmLnZhbGlkYXRlKCh2YWxpZCkgPT4gew0KDQogICAgICAgIGlmICh2YWxpZCkgeyAvLyDku6PooajmoKHpqozpgJrov4cNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXEpOw0KICAgICAgICAgIHVwZGF0ZVNpbmdsZVVpUGFnZUVsZW1lbnRSZXF1ZXN0KHRoaXMudWlQYWdlRWxlbWVudEZvcm0udWlfcGFnZV9pZCwgcmVxKS50aGVuKGRhdGEgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkNCiAgICAgICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2Vzcykgew0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIue8lui+kemhtemdouWFg+e0oOaIkOWKnyIpDQoNCiAgICAgICAgICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsNCiAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnc2F2ZVBhZ2VFbGVtZW50JykNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuaW5mbygi57yW6L6R6aG16Z2i5YWD57Sg5aSx6LSlIikNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICB9IGVsc2UgeyAgLy/moKHpqozlpLHotKUNCiAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgICAgfSk7DQogICAgfSwNCg0KICAgIC8v6I635Y+W5omA5pyJVUnlrprkvY3mlrnlvI/liJfooagNCiAgICBnZXRVaVBvc2l0aW9uaW5nRnVuKCkgew0KICAgICAgZ2V0VWlQb3NpdGlvbmluZ1JlcXVlc3QoKS50aGVuKGRhdGEgPT4gew0KICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsNCiAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7DQoNCiAgICAgICAgICB0aGlzLnBvc2l0aW9uaW5nU2VsZWN0ID0gZGF0YS5kYXRhLmRhdGE7DQoNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnBvc2l0aW9uaW5nU2VsZWN0KQ0KDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLojrflj5bmjqXlj6PlpLHotKUiKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQoNCg0KICAgIC8v6I635Y+WVUnpobXpnaLlhYPntKDkv6Hmga8NCiAgICBnZXRTaW5nbGVVaVBhZ2VFbGVtZW50RnVuKCkgew0KICAgICAgZ2V0U2luZ2xlVWlQYWdlRWxlbWVudFJlcXVlc3QodGhpcy51aVBhZ2VFbGVtZW50Rm9ybS51aV9wYWdlX2lkKS50aGVuKGRhdGEgPT4gew0KICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEuZGF0YS5sZW5ndGgpDQogICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2Vzcykgew0KICAgICAgICAgIGlmIChkYXRhLmRhdGEuZGF0YS5sZW5ndGggPT09IDApew0KICAgICAgICAgICAgcmV0dXJuICB0cnVlDQogICAgICAgICAgfQ0KICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgbGV0IHVpX3BhZ2VfZWxlbWVudF9kYXRhID0gZGF0YS5kYXRhLmRhdGEudWlfcGFnZV9lbGVtZW50X2RhdGE7DQoNCiAgICAgICAgICAgIHRoaXMudWlQYWdlRWxlbWVudFRhYmxlRGF0YSA9IFsuLi51aV9wYWdlX2VsZW1lbnRfZGF0YV07DQogICAgICAgICAgfQ0KDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLojrflj5bmjqXlj6PlpLHotKUiKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQoNCiAgICAvL+a3u+WKoOihjA0KDQogICAgQWRkRm9ybSAoaW5kZXgsIHJvdykgew0KDQogICAgICAvLyB0aGlzLnVpUGFnZUVsZW1lbnRUYWJsZURhdGEuc3BsaWNlKGluZGV4LCAwLCB7fSkNCg0KICAgICAgdGhpcy51aVBhZ2VFbGVtZW50VGFibGVEYXRhLnB1c2goDQoNCiAgICAgICAgew0KICAgICAgICAgIHVpX3BhZ2VfZWxlbWVudF9uYW1lOiAiIiwNCiAgICAgICAgICB1aV9wYWdlX2VsZW1lbnQ6ICIiLA0KICAgICAgICAgIHVpX2VsZW1lbnRfcG9zaXRpb25pbmdfaWQ6ICIiLA0KICAgICAgICAgIHVpX3BhZ2VfZWxlbWVudF9tb3JlOiAiIg0KICAgICAgICB9DQoNCiAgICAgICkNCg0KDQogICAgfSwNCg0KICAgIC8v5Yig6Zmk6KGMDQogICAgRGVsZXRlKGluZGV4LCByb3dzKSB7DQogICAgICByb3dzLnNwbGljZShpbmRleCwgMSk7DQoNCiAgICB9DQoNCg0KDQoNCg0KDQogIH0sDQoNCiAgY3JlYXRlZCgpIHsNCiAgICBpZiAoJ2VkaXQnPT09dGhpcy50eXBlKXsNCiAgICAgIHRoaXMudWlQYWdlRWxlbWVudEZvcm0gPSB7DQogICAgICAgIHVpX3Byb2plY3RfaWQ6IHRoaXMudWlQcm9qZWN0SWQsDQogICAgICAgIHVpX3BhZ2VfaWQ6IHRoaXMudWlQYWdlSWQsDQogICAgICB9DQogICAgICB0aGlzLmdldFNpbmdsZVVpUGFnZUVsZW1lbnRGdW4oKQ0KICAgICAgdGhpcy5nZXRVaVBvc2l0aW9uaW5nRnVuKCkNCiAgICB9DQoNCiAgICBpZiAoJ2FkZCc9PT10aGlzLnR5cGUpew0KICAgICAgdGhpcy5nZXRVaVBvc2l0aW9uaW5nRnVuKCkNCiAgICB9DQoNCiAgfQ0KfTsNCg=="},null]}