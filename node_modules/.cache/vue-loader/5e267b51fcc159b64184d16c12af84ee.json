{"remainingRequest":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\performanceAutomation\\performanceScript\\addOrEditPerformanceProjectScript.vue?vue&type=style&index=0&id=15275ad4&scoped=true&lang=css&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\performanceAutomation\\performanceScript\\addOrEditPerformanceProjectScript.vue","mtime":1652877133460},{"path":"E:\\test-platform-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652877127608},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652877132788},{"path":"E:\\test-platform-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1652877131208},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnVwbG9hZF9qbXh7DQogICAgd2lkdGg6IDIwMHB4Ow0KfQ0KL2RlZXAvLmVsLXVwbG9hZC5lbC11cGxvYWQtLXRleHR7DQogICAgd2lkdGg6IDgycHggIWltcG9ydGFudDsNCiAgICBoZWlnaHQ6IDMycHggIWltcG9ydGFudDsNCn0NCi8q5Y676ZmkdXBsb2Fk57uE5Lu26L+H5rih5pWI5p6cKi8NCjo6di1kZWVwIC5lbC11cGxvYWQtbGlzdF9faXRlbSB7DQogICAgdHJhbnNpdGlvbjogbm9uZSAhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["addOrEditPerformanceProjectScript.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addOrEditPerformanceProjectScript.vue","sourceRoot":"src/components/page/performanceAutomation/performanceScript","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> 性能测试项目\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试项目</el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试脚本</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <el-form :model=\"performanceScriptData\" :rules=\"rules\" ref=\"PerformanceScriptFormRef\">\r\n            <el-form-item label=\"性能脚本名称\" prop=\"performance_script_name\" style=\"padding-right:0px;\">\r\n                <el-input v-model=\"performanceScriptData.performance_script_name\" autocomplete=\"off\" style=\"width: 232px;margin-left: 26px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"线程数\" style=\"padding-right:0px;\" prop=\"performance_threads\">\r\n                <el-input v-model=\"performanceScriptData.performance_threads\" autocomplete=\"off\" style=\"width: 232px;margin-left: 69px;\"\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Ramp-Up时间(秒)\" style=\"padding-right: 0px;\" prop=\"performance_ramp_up_time_seconds\">\r\n                <el-input\r\n                    v-model=\"performanceScriptData.performance_ramp_up_time_seconds\"\r\n                    style=\"width: 232px;\"\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"参数化\" style=\"padding-right: 0px;\" prop=\"data_set\">\r\n                <el-switch\r\n                    v-model=\"data_set\"\r\n                    active-color=\"#13ce66\"\r\n                    inactive-color=\"#ff4949\"\r\n                    active-value=\"true\"\r\n                    inactive-value=\"false\"\r\n                    @change=\"data_set_switch($event,data_set)\"\r\n                >\r\n                </el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"参数化文件\" style=\"padding-right: 0px;\">\r\n                <el-upload\r\n                    :disabled= \"data_set === 'false' ? true : false\"\r\n                    :action=\"UploadDataUrl()\"\r\n                    list-type=\"text\"\r\n                    ref=\"my-upload\"\r\n                    :on-preview=\"handleDataPreview\"\r\n                    :on-remove=\"handleDataRemove\"\r\n                    :before-remove=\"beforeDataRemove\"\r\n                    :multiple=\"false\"\r\n                    :on-exceed=\"handleDataExceed\"\r\n                    :file-list=\"fileDataList\"\r\n                    :on-change=\"handleDataChange\"\r\n                    accept=\".txt,.csv\"\r\n                    :show-file-list=\"true\"\r\n                    :on-success=\"onDataSuccess\"\r\n                    :on-error=\"onDataError\"\r\n                    class=\"upload_jmx\"\r\n                >\r\n                    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n                    <div slot=\"tip\" class=\"el-upload__tip\">只能上传 txt/csv 文件</div>\r\n                </el-upload>\r\n            </el-form-item>\r\n            <el-form-item label=\"循环次数-永远\" style=\"padding-right: 0px;\" prop=\"loop_count_forever\">\r\n                <el-switch\r\n                    v-model=\"loop_count_forever\"\r\n                    active-color=\"#13ce66\"\r\n                    inactive-color=\"#ff4949\"\r\n                    active-value=\"true\"\r\n                    inactive-value=\"false\"\r\n                    @change=\"loop_count_forever_switch($event,loop_count_forever)\"\r\n                >\r\n                </el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"循环次数\" style=\"padding-right: 0px;\" prop=\"performance_loop_count\">\r\n                <el-input\r\n                    v-model=\"performanceScriptData.performance_loop_count\"\r\n                    :disabled= \"loop_count_forever === 'true' ? true : false\"\r\n                    style=\"width: 232px;left: 54px;\"\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"是否开启调度器\" style=\"padding-right: 0px;\" prop=\"performance_scheduler\">\r\n                <!--                        <el-input v-model=\"addPerformanceScriptData.performance_scheduler\" style=\"width: 232px;\" @input=\"change($event)\"></el-input>-->\r\n                <el-switch\r\n                    v-model=\"performance_scheduler\"\r\n                    active-color=\"#13ce66\"\r\n                    inactive-color=\"#ff4949\"\r\n                    active-value=\"true\"\r\n                    inactive-value=\"false\"\r\n                    @change=\"scheduler_switch($event,performance_scheduler)\"\r\n                >\r\n                </el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"持续时间\" style=\"padding-right: 0px;\" prop=\"performance_duration\">\r\n                <el-input\r\n                    v-model=\"performanceScriptData.performance_duration\"\r\n                    :disabled= \"performance_scheduler === 'false' ? true : false\"\r\n                    style=\"width: 232px;left: 54px;\"\r\n                    @input=\"change($event)\"\r\n                ></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <el-upload\r\n            display='none'\r\n            :action=\"UploadUrl()\"\r\n            list-type=\"text\"\r\n            ref=\"my-upload\"\r\n            :on-preview=\"handlePreview\"\r\n            :on-remove=\"handleRemove\"\r\n            :before-remove=\"beforeRemove\"\r\n            :multiple=\"false\"\r\n            :on-exceed=\"handleExceed\"\r\n            :file-list=\"fileList\"\r\n            :on-change=\"handleChange\"\r\n            accept=\".jmx\"\r\n            :show-file-list=\"true\"\r\n            :on-success=\"onSuccess\"\r\n            :on-error=\"onError\"\r\n            class=\"upload_jmx\"\r\n        >\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传jmx文件，且不超过500kb</div>\r\n        </el-upload>\r\n\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"downloadPerformanceScript\">下 载</el-button>\r\n            <el-button @click=\"scriptCancel\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"savePerformanceScript\">确 定</el-button>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { fileUrl } from '../../../../api/common/common';\r\nimport {\r\n    addPerformanceScriptRequest,\r\n    getSinglePerformanceScriptRequest,\r\n    updateSinglePerformanceScriptRequest\r\n} from '../../../../api/performance/performanceScript';\r\nexport default {\r\n    name: 'addOrEditPerformanceProjectScript',\r\n    props:['type','performanceScriptProjectId', 'performanceScriptId', 'scriptData'],\r\n    data() {\r\n        return {\r\n            fileList: [{}],\r\n            fileDataList: [{}],\r\n\r\n            performance_scheduler:\"\",\r\n            data_set: \"\",\r\n            loop_count_forever: \"\",\r\n            performanceScriptData: {\r\n                performance_script_name: '',\r\n                performance_project_id: '',\r\n                performance_script: '',\r\n                performance_data_script: '',\r\n                performance_threads:'',\r\n                performance_ramp_up_time_seconds:'',\r\n                performance_loop_count:'',\r\n                performance_duration:'',\r\n                performance_script_id:''\r\n            },\r\n            rules: {\r\n                performance_script_name: [{ required: true, message: '请输入脚本名称', trigger: 'blur' }],\r\n                performance_threads: [{ required: true, message: '请输入线程数', trigger: 'blur' }],\r\n                performance_ramp_up_time_seconds: [{ required: true, message: '请输入时间', trigger: 'blur' }],\r\n\r\n            }\r\n\r\n        };\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n    methods:{\r\n        scheduler_switch(performance_scheduler){\r\n            console.log(performance_scheduler)\r\n\r\n        },\r\n\r\n        data_set_switch(data_set){\r\n            console.log(data_set)\r\n\r\n        },\r\n        change(e) {\r\n            this.$forceUpdate()\r\n        },\r\n        loop_count_forever_switch(loop_count_forever){\r\n            console.log(loop_count_forever)\r\n\r\n        },\r\n        onSuccess(res) {\r\n            this.$alert(res.data.result, '提示', {\r\n                confirmButtonText: '确定',\r\n                callback: action => {\r\n                    console.log('上传成功');\r\n                }\r\n            });\r\n            this.performanceScriptData.performance_script = res.data.file;\r\n        },\r\n        onDataSuccess(res) {\r\n            this.$alert(res.data.result, '提示', {\r\n                confirmButtonText: '确定',\r\n                callback: action => {\r\n                    console.log('上传成功');\r\n                }\r\n            });\r\n            this.performanceScriptData.performance_data_script = res.data.file;\r\n        },\r\n        UploadUrl() {\r\n            return fileUrl + 'api/backend/performance_test/performance_script_upload/';\r\n        },\r\n        UploadDataUrl() {\r\n            return fileUrl + 'api/backend/performance_test/performance_script_data_set_upload/';\r\n        },\r\n        handlePreview(file) {\r\n            console.log(file);\r\n        },\r\n        handleDataPreview(file){\r\n          console.log(file)\r\n        },\r\n        handleRemove(file, fileList) {\r\n            console.log(file, fileList);\r\n        },\r\n        handleDataRemove(file, fileDataList) {\r\n            console.log(file, fileDataList);\r\n        },\r\n        handleExceed(files, fileList) {\r\n            this.$message.warning(\r\n                `当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`\r\n            );\r\n        },\r\n        handleDataExceed(files, fileDataList) {\r\n            this.$message.warning(\r\n                `当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileDataList.length} 个文件`\r\n            );\r\n        },\r\n        beforeRemove(file, fileList) {\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        beforeDataRemove(file, fileDataList) {\r\n            return this.$confirm(`确定移除 ${file.name}？`);\r\n        },\r\n        handleChange(file, fileList) {\r\n            if (fileList.length > 0) {\r\n                this.fileList = [fileList[fileList.length - 1]]; // 这一步，是 展示最后一次选择的jmx文件\r\n            }\r\n        },\r\n        handleDataChange(file, fileDataList) {\r\n            if (fileDataList.length > 0) {\r\n                this.fileDataList = [fileDataList[fileDataList.length - 1]]; // 这一步，是 展示最后一次选择的jmx文件\r\n            }\r\n        },\r\n        onError(res) {\r\n            console.log('失败的回调' + JSON.stringify(res));\r\n            this.$alert('创建失败', '提示', {\r\n                confirmButtonText: '确定',\r\n                callback: action => {\r\n                    console.log('上传失败');\r\n                }\r\n            });\r\n        },\r\n        onDataError(res) {\r\n            console.log('失败的回调' + JSON.stringify(res));\r\n            this.$alert('创建失败', '提示', {\r\n                confirmButtonText: '确定',\r\n                callback: action => {\r\n                    console.log('上传失败');\r\n                }\r\n            });\r\n        },\r\n        // 编辑弹框--下载jmeter脚本\r\n        downloadPerformanceScript() {\r\n            console.log(this.fileList[0].url);\r\n\r\n            window.location.href = this.fileList[0].url;\r\n        },\r\n        scriptCancel() {\r\n            this.performance_scheduler = \"\";\r\n            this.$parent.cancelPerformanceScript();\r\n            this.$refs['my-upload'].clearFiles();\r\n        },\r\n\r\n        savePerformanceScript() {\r\n            if ('add' === this.type){\r\n                this.addPerformanceScript()\r\n            }else {\r\n                this.editPerformanceScript()\r\n            }\r\n        },\r\n\r\n        // 添加性能脚本\r\n        addPerformanceScript(){\r\n            let req = JSON.parse(JSON.stringify(this.performanceScriptData));\r\n            req.performance_scheduler = this.performance_scheduler\r\n            req.loop_count_forever = this.loop_count_forever\r\n            req.performance_data_script = this.performanceScriptData.performance_data_script\r\n            req.data_set = this.data_set\r\n\r\n            this.$refs.PerformanceScriptFormRef.validate(valid => {\r\n                if (valid) {\r\n                    // 代表校验通过\r\n                    addPerformanceScriptRequest(req).then(data => {\r\n                        if (true === data.data.success) {\r\n                            this.$message.success('创建性能脚本成功');\r\n                            this.$parent.savePerformanceScript();\r\n                        } else {\r\n                            this.$message.error('创建性能脚本失败');\r\n                        }\r\n                    });\r\n                } else {\r\n                    //校验失败\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        // 编辑性能脚本\r\n        editPerformanceScript(){\r\n            let req = JSON.parse(JSON.stringify(this.performanceScriptData));\r\n            req.performance_scheduler = this.performance_scheduler\r\n            req.loop_count_forever = this.loop_count_forever\r\n            req.performance_script = this.performanceScriptData.performance_script\r\n            req.performance_data_script = this.performanceScriptData.performance_data_script\r\n            req.data_set = this.data_set\r\n\r\n            this.$refs.PerformanceScriptFormRef.validate(valid => {\r\n                if (valid) {\r\n                    // 代表校验通过\r\n                    updateSinglePerformanceScriptRequest(this.performanceScriptData.performance_script_id, req).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.$message.success('编辑性能脚本成功');\r\n                            this.$parent.savePerformanceScript();\r\n                        } else {\r\n                            this.$message.error('编辑性能脚本失败');\r\n                        }\r\n                    });\r\n                } else {\r\n                    //校验失败\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        //获取单个脚本信息\r\n        editPerformanceScriptPopup() {\r\n            // 获取单个脚本信息\r\n            getSinglePerformanceScriptRequest( this.performanceScriptData.performance_script_id).then(data => {\r\n\r\n                if (true === data.data.success) {\r\n                    let performance_script_data = data.data.data;\r\n                    this.performanceScriptData = {...performance_script_data }\r\n                    this.loop_count_forever = data.data.data.loop_count_forever\r\n                    this.performance_scheduler = data.data.data.performance_scheduler\r\n                    this.fileList = data.data.data.performance_script_url;\r\n                    this.performanceScriptData.performance_script = performance_script_data.performance_script_url[0].url;\r\n                    this.fileDataList= data.data.data.performance_script_data_url;\r\n                    this.performanceScriptData.performance_data_script = performance_script_data.performance_script_data_url[0].url;\r\n                    this.data_set = performance_script_data.data_set\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n    },\r\n\r\n    components: {},\r\n\r\n    created() {\r\n        if ('edit'===this.type){\r\n            this.performanceScriptData.performance_project_id = this.performanceScriptProjectId\r\n            this.performanceScriptData.performance_script_id = this.performanceScriptId\r\n            this.editPerformanceScriptPopup()\r\n\r\n        }\r\n\r\n        if ('add'===this.type){\r\n            this.performanceScriptData.performance_project_id = this.performanceScriptProjectId\r\n        }\r\n\r\n    },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload_jmx{\r\n    width: 200px;\r\n}\r\n/deep/.el-upload.el-upload--text{\r\n    width: 82px !important;\r\n    height: 32px !important;\r\n}\r\n/*去除upload组件过渡效果*/\r\n::v-deep .el-upload-list__item {\r\n    transition: none !important;\r\n}\r\n</style>"]}]}