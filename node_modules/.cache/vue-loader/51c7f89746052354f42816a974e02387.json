{"remainingRequest":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiTask\\addOrEditApiTask.vue?vue&type=style&index=0&id=25e69e7e&scoped=true&lang=css&","dependencies":[{"path":"E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiTask\\addOrEditApiTask.vue","mtime":1632633660567},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5hcGlfdGVzdF90YXNrX25hbWV7DQogIHdpZHRoOiAyMzBweDsNCn0NCg0K"},{"version":3,"sources":["addOrEditApiTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA","file":"addOrEditApiTask.vue","sourceRoot":"src/components/page/apiTask","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n        <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-form  ref=\"apiTestTaskFormRef\" :model=\"apiTestTaskForm\" label-width=\"100px\">\r\n      <el-form-item label=\"API测试任务\"  prop=\"api_test_task_name\">\r\n        <el-input v-model=\"apiTestTaskForm.api_test_task_name\"  class=\"api_test_task_name\" ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"描述\" prop=\"describe\">\r\n        <el-input type=\"textarea\" v-model=\"apiTestTaskForm.describe\" style=\"width: 230px;\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"API业务测试\">\r\n        <el-tree\r\n            :data=\"data\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n\r\n            ref=\"tree\"\r\n            @check-change=\"handleBucketClick\"\r\n            :default-expanded-keys=\"[]\"\r\n            :default-checked-keys=\"defaultTask\"\r\n\r\n            style=\"width: 500px;\">\r\n        </el-tree>\r\n      </el-form-item>\r\n\r\n\r\n      <div class=\"page-element-class\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveApiTestTask\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveApiTestTask\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getApiCaseTreeRequest, getSingleApiTestTaskRequest, addAPITestTaskRequest, updateSingleApiTestTaskRequest} from '../../../api/apiTestTask';\r\n\r\nexport default {\r\n  inject:['reload'],\r\n  name: 'addOrEditApiTask',\r\n  props: ['type', 'apiTestTaskId', 'apiTestTaskData', 'projectId'],\r\n  data(){\r\n\r\n    return{\r\n      apiTestTaskForm: {\r\n        api_test_task_name: \"\",\r\n        api_test_task_id: \"\",\r\n        describe: \"\"\r\n\r\n      },\r\n      count:\"\",//倒计时\r\n\r\n      data: [],\r\n\r\n      defaultProps: {\r\n        label: \"label\",\r\n        children: \"children\"\r\n\r\n      },\r\n\r\n      cases: [],\r\n      defaultTask: [],\r\n      api_project_id: \"\"\r\n\r\n\r\n    }\r\n\r\n\r\n  },\r\n  mounted() {\r\n\r\n\r\n  },\r\n  methods: {\r\n\r\n\r\n    //保存测试任务\r\n    saveApiTestTask(){\r\n      if ('add'===this.type){\r\n        this.addApiTestTask()\r\n\r\n      }else {\r\n        this.editApiTestTask()\r\n      }\r\n\r\n\r\n    },\r\n\r\n    handleBucketClick(data){\r\n      // console.log(data.api_test_cases_id)\r\n\r\n    },\r\n\r\n\r\n    //取消保存测试任务\r\n    cancelSaveApiTestTask(){\r\n\r\n      this.$emit('cancelSaveApiTestTask')\r\n\r\n\r\n    },\r\n\r\n    //创建测试任务\r\n    addApiTestTask(){\r\n      this.apiTestTaskForm.api_test_task_id = 0;\r\n\r\n      let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.api_project_id =  this.api_project_id\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.apiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addAPITestTaskRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditApiTestCase = false;\r\n              this.$message.success(\"添加API测试任务成功\")\r\n              this.$emit('saveApiTestTask')\r\n\r\n            } else {\r\n              this.$message.error(\"添加APi测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    //编辑测试任务\r\n    editApiTestTask(){\r\n\r\n      let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.api_project_id =  this.api_project_id\r\n\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n        console.log(\"这是id：\",this.apiTestTaskForm.api_test_task_id)\r\n        console.log(this.$refs.apiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          updateSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id,req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditApiTestCase = false;\r\n              this.$message.success(\"编辑UI测试任务成功\")\r\n              this.$emit('saveApiTestTask')\r\n\r\n            } else {\r\n              this.$message.info(\"编辑UI测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n\r\n\r\n      });\r\n    },\r\n\r\n    //获取测试用例树形结构\r\n    getApiCaseTreeFun(){\r\n      console.log(\"API项目ID\",this.api_project_id)\r\n      getApiCaseTreeRequest(this.api_project_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let apiTestTask = data.data.data;\r\n          let req = JSON.parse(JSON.stringify(apiTestTask));\r\n          console.log(\"apiTestTask：\", req)\r\n          for(var i =0;i<req.length;i++){\r\n            let children = req[i].children\r\n            req[i].label = req[i].api_project_name\r\n\r\n            for(var j=0;j<children.length;j++){\r\n              console.log(children.length)\r\n              req[i].children[j].label = req[i].children[j].api_test_case_name\r\n              req[i].children[j].id = req[i].children[j].api_test_cases_id\r\n            }\r\n          }\r\n          console.log(\"uiTestTask222222222：\", req)\r\n          this.data = req\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n\r\n    },\r\n\r\n    // 获取单独Api测试任务信息\r\n    getSingleApiTestTaskFun() {\r\n      getSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let apiTestTask = data.data.data;\r\n          console.log(apiTestTask)\r\n\r\n\r\n          let req = JSON.parse(JSON.stringify(apiTestTask));\r\n          console.log(\"apiTestTask2333333333333：\", req.cases)\r\n\r\n\r\n          this.defaultTask = JSON.parse(data.data.data.cases)\r\n          console.log(this.defaultTask)\r\n\r\n          console.log(typeof (this.defaultTask))\r\n\r\n\r\n          console.log(\"这是默认选中返回得数据：\", this.defaultTask)\r\n\r\n\r\n\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getCheckedKeys() {\r\n      console.log(this.$refs.tree.getCheckedKeys());\r\n\r\n    },\r\n    setCheckedKeys(){\r\n      this.$refs.tree.setCheckedKeys([]);\r\n    }\r\n\r\n  },\r\n  created() {\r\n\r\n\r\n    if ('edit'===this.type){\r\n      console.log(\"编辑测试任务222222\")\r\n      console.log(this.apiTestTaskData)\r\n      this.api_project_id = this.projectId\r\n      this.apiTestTaskForm = {\r\n        api_test_task_name: this.apiTestTaskData.api_test_task_name,\r\n        api_test_task_id: this.apiTestTaskData.id,\r\n        describe: this.apiTestTaskData.describe\r\n\r\n      }\r\n      console.log(\"编辑测试任务\")\r\n      console.log(\"编辑测试任务\",this.apiTestTaskForm.api_test_task_id )\r\n      this.getApiCaseTreeFun()\r\n      this.getSingleApiTestTaskFun()\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      console.log(\"新增测试任务\", this.projectId)\r\n      this.api_project_id = this.projectId\r\n\r\n      this.getApiCaseTreeFun()\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_test_task_name{\r\n  width: 230px;\r\n}\r\n\r\n</style>"]}]}