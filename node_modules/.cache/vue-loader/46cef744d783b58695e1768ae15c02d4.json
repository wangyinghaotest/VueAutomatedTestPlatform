{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\uiTestCase\\addOrEditUiTestCase.vue?vue&type=style&index=0&id=7029b8eb&scoped=true&lang=css&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\uiTestCase\\addOrEditUiTestCase.vue","mtime":1638436326251},{"path":"E:\\test_platform_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnVpX3Rlc3RfY2FzZV9uYW1lew0KICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCiAgcGFkZGluZy1yaWdodDogMHB4Ow0KICB3aWR0aDogNTAxcHg7DQogIG1hcmdpbi1sZWZ0OiAwcHg7DQp9DQoudWktY2FzZS1jbGFzc3sNCg0KICBtYXJnaW4tYm90dG9tOiAwcHg7DQogIHdpZHRoOiAzMDBweDsNCg0KfQ0KDQo="},{"version":3,"sources":["addOrEditUiTestCase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","file":"addOrEditUiTestCase.vue","sourceRoot":"src/components/page/uiTestCase","sourcesContent":["<template>\r\n  <div>\r\n    <el-form  ref=\"uiTestCaseFormRef\" :model=\"uiTestCaseForm\"  :rules=\"rules\" label-width=\"100px\">\r\n\r\n      <el-form-item label=\"UI用例名称\" style=\"width: 100px;\">\r\n        <el-input v-model=\"uiTestCaseForm.ui_test_case_name\"  class=\"ui_test_case_name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"选择UI项目\">\r\n        <el-select  v-model=\"uiTestCaseForm.ui_project_id\"  placeholder=\"请选择项目\"  id=\"selectUIProject\" @change=\"getSelectUiTestCaseFun\">\r\n          <el-option v-for=\"item in projectSelect\" :key=\"item.project_id\" :value=\"item.project_id\" :label=\"item.ui_project_name\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-input\r\n          type=\"textarea\"\r\n          :autosize=\"{ minRows: 3, maxRows: 4}\"\r\n          :readonly=\"true\"\r\n          placeholder=\"DEBUG结果\"\r\n          v-model=\"debugTextarea\">\r\n      </el-input>\r\n\r\n      <div class=\"ui-case-class\">\r\n        <el-form-item style=\"float: left\">\r\n          <el-button type=\"primary\" @click=\"saveUiTestCase\">保存</el-button>\r\n          <el-button type=\"primary\" @click=\"deBugUiTestCase\">调试</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveUiTestCase\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n\r\n      <div>\r\n        <el-table\r\n            :data=\"uiTestCaseTableData\"\r\n            style=\"width: 100%\">\r\n\r\n          <el-table-column prop=\"ui_page_id\" label=\"UI页面\" width=\"180\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.ui_page_id\" filterable placeholder=\"选择UI页面\" @change=\"getSelectUIPageElement(scope.row)\">\r\n                <el-option v-for=\"item in pageSelect\" :key=\"item.ui_page_id\" :value=\"item.ui_page_id\"  :label=\"item.ui_page_name\">\r\n                </el-option>\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"ui_page_element_id\" width=\"180\" label=\"选择UI页面元素\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.ui_page_element_id\" filterable placeholder=\"选择UI页面元素\" @change=\"handleSelectChange\">\r\n                <el-option v-for=\"item in scope.row.ui_element_Select\" :key=\"item.ui_page_element_id\" :value=\"item.ui_page_element_id\"  :label=\"item.ui_page_element_name\">\r\n                </el-option>\r\n              </el-select>\r\n            </template>\r\n\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"ui_element_operation_id\" label=\"元素操作\" width=\"180\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select size=\"small\" filterable v-model=\"scope.row.ui_element_operation_id\"   placeholder=\"请选择元素操作\">\r\n                <el-option v-for=\"item in uiElementOperationSelect\" :key=\"item.id\" :value=\"item.id\" :label=\"item.elements_operation_title\">\r\n                </el-option>\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"elements_output\" label=\"元素输出\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.elements_output\" controls-position=\"right\" style=\"width: 100%\" ></el-input>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"x_coordinates\" label=\"X坐标\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.x_coordinates\" controls-position=\"right\" style=\"width: 50%\" ></el-input>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"y_coordinates\" label=\"Y坐标\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.y_coordinates\" controls-position=\"right\" style=\"width: 50%\" ></el-input>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"waiting_time\" label=\"等待时间\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.waiting_time\" controls-position=\"right\" style=\"width: 50%\" ></el-input>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"steps\" label=\"操作步骤\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.steps\" controls-position=\"right\" style=\"width: 50%\" ></el-input>\r\n            </template>\r\n          </el-table-column>\r\n\r\n\r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"AddForm\">添加行</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" @click=\"Delete(scope.$index, uiTestCaseTableData)\" style=\"margin-left: 0px; margin-right: 13px; padding-right: 28px; text-align: center; \">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n\r\n        </el-table>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport {getUiElementOperationRequest} from '../../../api/uiElementOperation';\r\nimport {\r\n  addUiTestCaseRequest,\r\n  getSelectUiTestCaseRequest, getSingleUiTestCaseRequest,\r\n  updateSingleUiTestCaseRequest,\r\n  postDebugUiTestCaseRequest\r\n} from '../../../api/uiTestCase';\r\n\r\n\r\nexport default {\r\n  name: 'addOrEditUiTestCase',\r\n\r\n  // type 用来标识是编辑还是创建\r\n  props:['type', 'uiTestCaseId', 'uiTestCaseData'],\r\n\r\n  data() {\r\n    return {\r\n\r\n      rules: {\r\n\r\n        ui_page_element_id: [\r\n          { required: true, message: '请选择页面元素', trigger: 'change' }\r\n        ],\r\n      },\r\n      debugTextarea: '',\r\n\r\n      uiTestCaseForm: {\r\n        ui_test_case_name: \"\",\r\n        ui_project_id: \"\",\r\n        ui_test_case_id: \"\",\r\n\r\n      },\r\n\r\n      uiTestCaseTableData:[\r\n        {\r\n          elements_operation_title: \"\",\r\n          ui_page_id: \"\",\r\n          ui_page_element_id: \"\",\r\n          ui_element_operation_id: \"\",\r\n          elements_output: \"\",\r\n\r\n          x_coordinates: \"\",\r\n          y_coordinates: \"\",\r\n\r\n          waiting_time: \"\",\r\n          steps: \"\",\r\n\r\n        }\r\n\r\n      ],\r\n\r\n      projectSelect: [],\r\n      pageSelect: [],\r\n      ui_element_Select: [],\r\n      indexNum: 0,\r\n      indexNum2: 0,\r\n\r\n      uiElementOperationSelect: [],\r\n\r\n      newData: []\r\n\r\n\r\n\r\n    }\r\n  },\r\n  mounted(){\r\n    this.getSelectUiTestCaseFun()\r\n\r\n  },\r\n\r\n  watch: {\r\n    uiTestCaseForm: {\r\n      deep: true,\r\n      immediate: true,\r\n      handler(val) {\r\n        if (val.ui_project_id) {\r\n\r\n          getSelectUiTestCaseRequest().then(data =>{\r\n\r\n            if (true === data.data.success) {\r\n              this.$set(this, 'projectSelect', data.data.data)\r\n\r\n              for (let i = 0;i<this.projectSelect.length; i++) {\r\n                let obj = this.projectSelect[i]\r\n\r\n                if (obj.project_id === this.uiTestCaseForm.ui_project_id){\r\n                  this.pageSelect = obj.page_list;\r\n                  this.pageSelect.forEach((item)=> {\r\n                    this.getSelectUIPageElement()\r\n                  })\r\n\r\n                }\r\n              }\r\n\r\n              this.uiTestCaseTableData.forEach((item) => {\r\n                console.log(8888,  this.uiTestCaseTableData)\r\n                this.$set(item,'ui_element_operation_id', item.ui_element_operation_id?Number(item.ui_element_operation_id):'')\r\n              })\r\n\r\n              this.getUiElementOperationRequestFun()\r\n              // this.$forceUpdate();\r\n            } else {\r\n              this.$message.error(\"获取接口失败\")\r\n            }\r\n          })\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n  methods: {\r\n\r\n    //获取所有项目-》页面 --》页面元素\r\n    getSelectUiTestCaseFun(value){\r\n\r\n      getSelectUiTestCaseRequest().then(data =>{\r\n        if (true === data.data.success) {\r\n          this.$set(this, 'newData', data.data.data)\r\n          this.$set(this, 'projectSelect', data.data.data)\r\n          for (let i = 0;i<this.projectSelect.length; i++) {\r\n            let obj = this.projectSelect[i]\r\n\r\n            if (obj.project_id === this.uiTestCaseForm.ui_project_id){\r\n              this.pageSelect = obj.page_list;\r\n\r\n              break\r\n            }\r\n          }\r\n\r\n        } else {\r\n          this.$message.error(\"获取接口失败\")\r\n        }\r\n      })\r\n    },\r\n    // 获取ui页面元素 下拉框\r\n    getSelectUIPageElement(row){\r\n      this.uiTestCaseTableData.forEach(utct=>{\r\n        for (let i = 0;i<this.pageSelect.length; i++) {\r\n          var ui_page = this.pageSelect[i]\r\n\r\n          if (ui_page.ui_page_id === utct.ui_page_id){\r\n            this.$set(utct, 'ui_element_Select', ui_page.ui_element_list)\r\n          }\r\n        }\r\n      })\r\n\r\n    },\r\n\r\n    handleSelectChange(val){\r\n    },\r\n\r\n    // 保存\r\n    saveUiTestCase() {\r\n      if ('add' === this.type){\r\n\r\n        this.addUiTestCase()\r\n      }else {\r\n        this.editUiTestCase()\r\n      }\r\n    },\r\n\r\n    // 取消\r\n    cancelSaveUiTestCase(){\r\n      this.$parent.cancelSaveUiTestCase();\r\n\r\n\r\n    },\r\n\r\n    //添加测试用例\r\n    addUiTestCase(){\r\n      let req = JSON.parse(JSON.stringify(this.uiTestCaseForm));\r\n      req.ui_test_case_data=this.uiTestCaseTableData;\r\n      console.log(\"这是table表单\",this.uiTestCaseTableData)\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.uiTestCaseFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.uiTestCaseFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addUiTestCaseRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.$message.success(\"添加UI测试用例成功\")\r\n\r\n              this.$parent.saveUiTestCase();\r\n            }\r\n            else if (false === data.data.success){\r\n              this.$message.error(data.data.error.message)\r\n            }\r\n\r\n            else {\r\n              this.$message.error(\"添加UI测试用例失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    //编辑页面元素\r\n    editUiTestCase(){\r\n      let req = JSON.parse(JSON.stringify(this.uiTestCaseForm));\r\n      req.ui_test_case_data=this.uiTestCaseTableData;\r\n      console.log(\"这是table表单\",this.uiTestCaseTableData)\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.uiTestCaseFormRef.validate((valid) => {\r\n        if (valid) { // 代表校验通过\r\n          console.log(req);\r\n          updateSingleUiTestCaseRequest(this.uiTestCaseForm.ui_test_case_id, req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n\r\n              this.$message.success(\"编辑页面元素成功\")\r\n              this.$parent.saveUiTestCase();\r\n\r\n            }else if (false=== data.data.success){\r\n              this.$message.error(data.data.error.message)\r\n            }else {\r\n              this.$message.error(\"编辑页面元素失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    //获取所有UI元素操作列表\r\n    getUiElementOperationRequestFun() {\r\n      getUiElementOperationRequest().then(data => {\r\n        console.log(data);\r\n        if (true === data.data.success) {\r\n          this.uiTestCaseTableData.forEach(utct=>{\r\n            this.$set(utct, 'id', '')\r\n\r\n          })\r\n\r\n          this.uiElementOperationSelect = data.data.data;\r\n\r\n        } else {\r\n          this.$message.error(\"获取接口失败\")\r\n        }\r\n      })\r\n    },\r\n\r\n    //获取单个测试用例列表\r\n    getSingleUiTestCaseFun() {\r\n      getSingleUiTestCaseRequest(this.uiTestCaseForm.ui_test_case_id).then(data => {\r\n        if (true === data.data.success) {\r\n          let uiTestCase = data.data.data.ui_test_case_data;\r\n\r\n          console.log(\"data数据\",data.data.data)\r\n          console.log(\"获取单个测试用例数据\",uiTestCase)\r\n\r\n          this.uiTestCaseTableData=[...uiTestCase];\r\n\r\n          console.log(\"ui_element_Select：\", this.uiTestCaseTableData)\r\n\r\n        } else {\r\n          this.$message.error(\"获取接口失败\")\r\n        }\r\n      })\r\n    },\r\n\r\n\r\n    // 调试测试用例\r\n    deBugUiTestCase(){\r\n      let req = JSON.parse(JSON.stringify(this.uiTestCaseForm));\r\n      req.ui_test_case_data=this.uiTestCaseTableData;\r\n      this.$refs.uiTestCaseFormRef.validate((valid) => {\r\n        if (valid) { // 代表校验通过\r\n          console.log(req);\r\n          this.$message.success(\"调试测试用例中\")\r\n          postDebugUiTestCaseRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.debugTextarea = \"调试测试用例成功\"\r\n              this.$message.success(\"调试测试用例成功\")\r\n            } else if (40000=== data.data.error.code){\r\n              this.$message.error(\"未知错误\")\r\n            }else if (30000=== data.data.error.code){\r\n              this.$message.error(data.data.error.message)\r\n            }else {\r\n              this.debugTextarea = data.data.error.message.debug_results + \",  \" + data.data.error.message.debug_results_message\r\n              this.$message.error(\"调试测试用例失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n\r\n    //添加行\r\n    AddForm (index, row) {\r\n\r\n      //添加新的行数\r\n      // this.uiTestCaseTableData.splice(index, 0, {})\r\n      this.uiTestCaseTableData.push( {\r\n        elements_operation_title: \"\",\r\n        ui_page_id: \"\",\r\n        ui_page_element_id: \"\",\r\n        ui_element_operation_id: \"\",\r\n        elements_output: \"\",\r\n        x_coordinates: \"\",\r\n        y_coordinates: \"\",\r\n        waiting_time: \"\",\r\n        steps: \"\",\r\n      })\r\n    },\r\n\r\n    //删除行\r\n    Delete(index, rows) {\r\n      rows.splice(index, 1);\r\n\r\n    }\r\n  },\r\n\r\n  created() {\r\n    console.log(this.uiTestCaseData)\r\n    if ('edit'===this.type){\r\n      this.uiTestCaseForm = {\r\n        ui_project_id: this.uiTestCaseData.ui_project_id,\r\n        ui_test_case_name: this.uiTestCaseData.ui_test_case_name,\r\n        ui_test_case_id: this.uiTestCaseData.id\r\n      }\r\n      this.getSingleUiTestCaseFun()\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      this.getUiElementOperationRequestFun()\r\n    }\r\n\r\n  },\r\n\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ui_test_case_name{\r\n  padding-left: 0px;\r\n  border-left-width: 0px;\r\n  padding-right: 0px;\r\n  width: 501px;\r\n  margin-left: 0px;\r\n}\r\n.ui-case-class{\r\n\r\n  margin-bottom: 0px;\r\n  width: 300px;\r\n\r\n}\r\n\r\n</style>"]}]}