{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\performanceScript\\performanceScript.vue?vue&type=style&index=0&id=44c80637&scoped=true&lang=css&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\performanceScript\\performanceScript.vue","mtime":1648698114161},{"path":"E:\\test_platform_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnVwbG9hZF9qbXh7DQoNCn0NCi9kZWVwLy5lbC11cGxvYWQuZWwtdXBsb2FkLS10ZXh0ew0KICAgIHdpZHRoOiA4MnB4ICFpbXBvcnRhbnQ7DQogICAgaGVpZ2h0OiAzMnB4ICFpbXBvcnRhbnQ7DQp9DQovKuWOu+mZpHVwbG9hZOe7hOS7tui/h+a4oeaViOaenCovDQouZWwtdXBsb2FkLWxpc3RfX2l0ZW0gew0KICAgIHRyYW5zaXRpb246IG5vbmUgIWltcG9ydGFudDsNCn0NCg0KDQo="},{"version":3,"sources":["performanceScript.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+UA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"performanceScript.vue","sourceRoot":"src/components/page/performanceScript","sourcesContent":["<template>\r\n    <div>\r\n        <performance-script-result\r\n            :performanceScriptId=\"currentPerformanceScriptId\"\r\n            :performanceScriptData=\"currentPerformanceScriptData\"\r\n            @performanceScriptList = \"performanceScriptList\"\r\n            v-if=\"showPerformanceScriptResult\"\r\n        ></performance-script-result>\r\n\r\n        <add-or-edit-performance-project-script\r\n            :type='opsType'\r\n            :performanceScriptId=\"currentPerformanceScriptId\"\r\n            :performanceScriptData=\"currentPerformanceScriptData\"\r\n            @savePerformanceScript=\"savePerformanceScript\"\r\n            @cancelPerformanceScript=\"cancelPerformanceScript\"\r\n            :performanceScriptProjectId=\"projectId\"\r\n            v-else-if=\"showAddOrEditPerformanceScript\">\r\n        </add-or-edit-performance-project-script>\r\n\r\n        <div v-else>\r\n            <div class=\"crumbs\">\r\n                <el-breadcrumb separator=\"/\">\r\n                    <el-breadcrumb-item>\r\n                        <i class=\"el-icon-lx-calendar\"></i> 性能测试项目\r\n                    </el-breadcrumb-item>\r\n                    <el-breadcrumb-item>性能测试项目</el-breadcrumb-item>\r\n                    <el-breadcrumb-item>性能测试脚本</el-breadcrumb-item>\r\n                </el-breadcrumb>\r\n            </div>\r\n            <el-row>\r\n                <el-button @click=\"returnProjectList\" >返回</el-button>\r\n                <el-button type=\"primary\" @click=\"addPerformanceScriptPopup\">创建性能脚本</el-button>\r\n                <el-button @click=\"getSinglePerformanceProjectScript\" >刷新</el-button>\r\n            </el-row>\r\n\r\n            <el-form :inline=\"true\" :model=\"queryForm\" class=\"demo-form-inline\" style=\"margin-top: 20px;\">\r\n                <el-form-item label=\"脚本名称\">\r\n                    <el-input v-model=\"queryForm.performance_script_name\" placeholder=\"脚本名称\" @keyup.enter.native=\"querySubmit\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"querySubmit\">查询</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <div>\r\n                <el-table :data=\"tableData\" style=\"width: 100%\">\r\n                    <el-table-column prop=\"id\" label=\"id\" sortable width=\"180\"></el-table-column>\r\n                    <el-table-column prop=\"performance_project_name\" label=\"性能项目名称\" sortable width=\"180\"></el-table-column>\r\n                    <el-table-column prop=\"performance_script_name\" label=\"脚本名称\" sortable width=\"180\"></el-table-column>\r\n                    <el-table-column prop=\"performance_status\" label=\"状态\" sortable width=\"180\"></el-table-column>\r\n                    <el-table-column prop=\"create_time\" label=\"创建时间\" width=\"180\"></el-table-column>\r\n                    <el-table-column label=\"操作\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button size=\"mini\" @click=\"editPerformanceScriptPopup(scope.row)\">编辑</el-button>\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"primary\"\r\n                                @click=\"performPerformanceScriptPopup(scope.row)\"\r\n                                :disabled=\"isDisabled\"\r\n                            >执行</el-button>\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"warning\"\r\n                                @click=\"performanceProjectScriptSuspendedPopup(scope.row)\"\r\n                                :disabled=\"isDisabled\"\r\n                            >暂停</el-button>\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"success\"\r\n                                @click=\"performanceScriptReportPopup(scope.row)\"\r\n                            >查看测试报告</el-button>\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"primary\"\r\n                                @click=\"NewPerformPerformanceScriptPopup(scope.row)\"\r\n                                :disabled=\"isDisabled\"\r\n                            >New-执行</el-button>\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"success\"\r\n                                @click=\"performanceScriptReportPopup(scope.row)\"\r\n                            >New-查看测试报告</el-button>\r\n                            <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"deletePerformanceScriptPopup(scope.row)\"\r\n                            >删除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <el-pagination\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"currentPage\"\r\n                    :page-sizes=\"[10, 20, 30, 40, 50, 60]\"\r\n                    :page-size=\"size_page\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total_script\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    deleteSinglePerformanceScriptRequest, getPerformanceProjectScriptSuspendedRequest,\r\n    getSinglePerformanceProjectScriptRequest, newPerformPerformanceScriptRequest,\r\n    performPerformanceScriptRequest, postQueryPerformanceProjectScriptRequest\r\n} from '../../../api/performanceScript';\r\nimport performanceReport from './performanceReport';\r\nimport addOrEditPerformanceProjectScript from './addOrEditPerformanceProjectScript';\r\n\r\nexport default {\r\n    name: 'performanceScript',\r\n    props: ['type', 'performanceProjectId'],\r\n\r\n    data() {\r\n        return {\r\n            queryForm:{\r\n                performance_script_name: \"\"\r\n            },\r\n            duration: true,\r\n            isDisabled: false,\r\n            tableData: [],\r\n\r\n            currentPage: 1,\r\n            size_page: 10,\r\n            total_script: 0,\r\n\r\n            fileList: [{}],\r\n            performance_scheduler:\"\",\r\n            loop_count_forever: \"\",\r\n            showAddOrEditPerformanceScript: false,\r\n            showPerformanceScriptResult: false,\r\n            performanceScriptId: '',\r\n\r\n            //当前performanceScriptId\r\n            currentPerformanceScriptId: 0,\r\n            currentPerformanceScriptProjectId: \"\",\r\n\r\n            //当前 performanceScript数据\r\n            currentPerformanceScriptData: {},\r\n\r\n            projectId: '',\r\n\r\n            rules: {\r\n                performance_script_name: [{ required: true, message: '请输入脚本名称', trigger: 'blur' }],\r\n                performance_threads: [{ required: true, message: '请输入线程数', trigger: 'blur' }],\r\n                performance_ramp_up_time_seconds: [{ required: true, message: '请输入时间', trigger: 'blur' }],\r\n\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        savePerformanceScript(){\r\n            this.showAddOrEditPerformanceScript = false\r\n            this.getSinglePerformanceProjectScript();\r\n        },\r\n        cancelPerformanceScript(){\r\n            this.showAddOrEditPerformanceScript = false\r\n            this.getSinglePerformanceProjectScript();\r\n        },\r\n\r\n        formatter(row, column) {\r\n            return row.address;\r\n        },\r\n        handleEdit(index, row) {\r\n            console.log(index, row);\r\n        },\r\n        handleDelete(index, row) {\r\n            console.log(index, row);\r\n        },\r\n        handleSizeChange(val) {\r\n            this.size_page = val\r\n            this.querySubmit();\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            this.querySubmit();\r\n        },\r\n\r\n        // 查询脚本名称-提交\r\n        querySubmit(){\r\n            let req = JSON.parse(JSON.stringify(this.queryForm));\r\n            req.performance_project_id = this.projectId\r\n            postQueryPerformanceProjectScriptRequest(this.size_page, this.currentPage, req).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.tableData = data.data.data.data;\r\n                    this.total_script = data.data.data.total_script\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            }\r\n            );\r\n\r\n\r\n        },\r\n\r\n        // 添加页面 弹窗\r\n        addPerformanceScriptPopup() {\r\n            this.opsType = 'add';\r\n            this.showAddOrEditPerformanceScript = true\r\n        },\r\n\r\n        //编辑脚本\r\n        editPerformanceScriptPopup(data) {\r\n            this.opsType = 'edit';\r\n            this.currentPerformanceScriptId = data.id;\r\n            this.currentPerformanceScriptData = data;\r\n            this.showAddOrEditPerformanceScript = true;\r\n        },\r\n\r\n        //删除性能脚本\r\n        deletePerformanceScriptPopup(data) {\r\n            this.performanceScriptId = data.id;\r\n\r\n            deleteSinglePerformanceScriptRequest(this.performanceScriptId).then(data => {\r\n                console.log(data);\r\n                if (true === data.data.success) {\r\n                    this.querySubmit();\r\n                    this.$message.success('删除性能脚本成功');\r\n                } else {\r\n                    this.$message.error('删除性能脚本失败');\r\n                }\r\n            });\r\n        },\r\n\r\n        // 暂停性能任务\r\n        performanceProjectScriptSuspendedPopup(data){\r\n\r\n            getPerformanceProjectScriptSuspendedRequest(data.id).then(data => {\r\n\r\n                if (true === data.data.success) {\r\n                    this.querySubmit();\r\n                    this.$message.success(data.data.data);\r\n\r\n                }else if (false=== data.data.success){\r\n                    this.$message.error(data.data.error.code.message)\r\n                }else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n\r\n\r\n            })\r\n\r\n\r\n        },\r\n        // 执行性能测试脚本\r\n        NewPerformPerformanceScriptPopup(data) {\r\n            // this.$message.success('准备测试任务');\r\n            this.isDisabled = true\r\n            setTimeout(() => {\r\n                this.isDisabled = false\r\n            },1000)\r\n            console.log('开始执行了');\r\n            newPerformPerformanceScriptRequest(data.id).then(data => {\r\n                this.querySubmit();\r\n                if (true === data.data.success) {\r\n                    this.querySubmit();\r\n                    this.$message.success(data.data.data);\r\n\r\n                }else if (false=== data.data.success){\r\n                    this.$message.error(data.data.error.code.message)\r\n                }else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n        },\r\n\r\n        // 执行性能测试脚本\r\n        performPerformanceScriptPopup(data) {\r\n            // this.$message.success('准备测试任务');\r\n            this.isDisabled = true\r\n            setTimeout(() => {\r\n                this.isDisabled = false\r\n            },1000)\r\n            console.log('开始执行了');\r\n            performPerformanceScriptRequest(data.id).then(data => {\r\n                this.querySubmit();\r\n                if (true === data.data.success) {\r\n                    this.querySubmit();\r\n                    this.$message.success(data.data.data);\r\n\r\n                }else if (false=== data.data.success){\r\n                    this.$message.error(data.data.error.code.message)\r\n                }else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n        },\r\n\r\n        // 查看性能测试报告\r\n        performanceScriptReportPopup(data) {\r\n            this.currentPerformanceScriptId = data.id;\r\n            this.currentPerformanceScriptData = data;\r\n            this.showPerformanceScriptResult = true;\r\n        },\r\n\r\n        performanceScriptList() {\r\n            this.showPerformanceScriptResult = false;\r\n        },\r\n\r\n        //获取 单个性能测试项目中包含得所有脚本----弃用\r\n        getSinglePerformanceProjectScript() {\r\n            getSinglePerformanceProjectScriptRequest(this.projectId, this.size_page, this.currentPage).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.tableData = data.data.data.data;\r\n                    this.total_script = data.data.data.total_script\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n        },\r\n\r\n        // 返回性能项目列表\r\n        returnProjectList(){\r\n            this.$parent.projectList();\r\n        }\r\n    },\r\n\r\n    components: {\r\n        'performance-script-result': performanceReport,\r\n        'add-or-edit-performance-project-script': addOrEditPerformanceProjectScript\r\n    },\r\n    created() {\r\n        if ('enter' === this.type) {\r\n            this.projectId = this.performanceProjectId;\r\n            this.querySubmit();\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload_jmx{\r\n\r\n}\r\n/deep/.el-upload.el-upload--text{\r\n    width: 82px !important;\r\n    height: 32px !important;\r\n}\r\n/*去除upload组件过渡效果*/\r\n.el-upload-list__item {\r\n    transition: none !important;\r\n}\r\n\r\n\r\n</style>"]}]}