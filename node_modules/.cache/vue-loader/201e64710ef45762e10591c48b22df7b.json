{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\uiPage\\UiPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\uiPage\\UiPage.vue","mtime":1632633660575},{"path":"E:\\test_platform_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}