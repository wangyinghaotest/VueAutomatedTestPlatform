{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\apiTask\\addOrEditApiTask.vue?vue&type=style&index=0&id=25e69e7e&scoped=true&lang=css&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\apiTask\\addOrEditApiTask.vue","mtime":1645712421872},{"path":"E:\\test_platform_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmFwaV90ZXN0X3Rhc2tfbmFtZXsNCiAgICB3aWR0aDogMjMwcHg7DQp9DQouYXBpX3NlbmRfZW1haWx7DQogICAgd2lkdGg6IDIzMHB4Ow0KfQ0KDQo="},{"version":3,"sources":["addOrEditApiTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmaA;AACA;AACA;AACA;AACA;AACA","file":"addOrEditApiTask.vue","sourceRoot":"src/components/page/apiTask","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n                <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <el-form  ref=\"apiTestTaskFormRef\" :model=\"apiTestTaskForm\" label-width=\"100px\">\r\n            <el-form-item label=\"API测试任务\"  prop=\"api_test_task_name\">\r\n                <el-input v-model=\"apiTestTaskForm.api_test_task_name\"  class=\"api_test_task_name\" ></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"描述\" prop=\"describe\">\r\n                <el-input type=\"textarea\" v-model=\"apiTestTaskForm.describe\" style=\"width: 230px;\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"域名\">\r\n                <el-select  v-model=\"apiTestTaskForm.api_environment_id\"  placeholder=\"请选择域名\"  id=\"selectApiEnvironment\" @change=\"getSelectApiEnvironmentFun\">\r\n                    <el-option v-for=\"item in environmentSelect\" :key=\"item.id\" :value=\"item.id\" :label=\"item.api_environment_name\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"数据库\">\r\n                <el-select v-model=\"apiTestTaskForm.database_id\" placeholder=\"请选择数据库\"  @change=\"getSelectDatabaseFun\" :clearable=\"true\">\r\n                    <el-option v-for=\"database_option in database_options\" :key=\"database_option.id\" :label=\"database_option.api_database_title\" :value=\"database_option.id\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"API业务测试\">\r\n                <el-tree\r\n                    :data=\"data\"\r\n                    show-checkbox\r\n                    node-key=\"id\"\r\n                    :props=\"defaultProps\"\r\n\r\n                    ref=\"tree\"\r\n                    @check-change=\"handleBucketClick\"\r\n                    :default-expanded-keys=\"[]\"\r\n                    :default-checked-keys=\"defaultTask\"\r\n\r\n                    style=\"width: 500px;\">\r\n                </el-tree>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"发送邮箱\"  prop=\"api_send_email\">\r\n                <el-input v-model=\"apiTestTaskForm.api_send_email\"  class=\"api_send_email\" ></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"企微监控\"  prop=\"api_send_enterprise_wechat\">\r\n                <el-select v-model=\"apiTestTaskForm.api_send_enterprise_wechat\" placeholder=\"请选择\">\r\n                    <el-option v-for=\"api_send_enterprise_wechat_option in api_send_enterprise_wechat_options\" :key=\"api_send_enterprise_wechat_option.value\" :label=\"api_send_enterprise_wechat_option.text\" :value=\"api_send_enterprise_wechat_option.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"定时任务\"  prop=\"timing_task_status\">\r\n                <el-switch\r\n                    v-model=\"apiTestTaskForm.timing_task_status\"\r\n                    active-color=\"#13ce66\"\r\n                    inactive-color=\"#ff4949\"\r\n                    active-value=\"true\"\r\n                    inactive-value=\"false\"\r\n                >\r\n                </el-switch>\r\n            </el-form-item>\r\n\r\n<!--            <el-form-item label=\"起始时间\">-->\r\n<!--                <el-date-picker-->\r\n<!--                    v-model=\"time_range\"-->\r\n<!--                    type=\"datetimerange\"-->\r\n<!--                    range-separator=\"至\"-->\r\n<!--                    start-placeholder=\"开始日期\"-->\r\n<!--                    end-placeholder=\"结束日期\"-->\r\n<!--                    value-format=\"yyyy-MM-dd\"-->\r\n<!--                >-->\r\n<!--                </el-date-picker>-->\r\n<!--            </el-form-item>-->\r\n\r\n<!--            <el-form-item label=\"间隔时间\">-->\r\n<!--                <el-input placeholder=\"请输入天\" v-model=\"apiTestTaskForm.time_interval_day\" style=\"width: 150px;\">-->\r\n<!--                    <template slot=\"append\">天</template>-->\r\n<!--                </el-input>-->\r\n\r\n<!--                <el-input-->\r\n<!--                    placeholder=\"请输入时\"-->\r\n<!--                    v-model=\"apiTestTaskForm.time_interval_hours\"-->\r\n<!--                    style=\"width: 150px;\"-->\r\n<!--                >-->\r\n<!--                    <template slot=\"append\">时</template>-->\r\n<!--                </el-input>-->\r\n<!--                <el-input-->\r\n<!--                    placeholder=\"请输入分\"-->\r\n<!--                    v-model=\"apiTestTaskForm.time_interval_minutes\"-->\r\n<!--                    style=\"width: 150px;\"-->\r\n<!--                >-->\r\n<!--                    <template slot=\"append\">分</template>-->\r\n<!--                </el-input>-->\r\n<!--                <el-input-->\r\n<!--                    placeholder=\"请输入秒\"-->\r\n<!--                    v-model=\"apiTestTaskForm.time_interval_seconds\"-->\r\n<!--                    style=\"width: 150px;\"-->\r\n<!--                >-->\r\n<!--                    <template slot=\"append\">秒</template>-->\r\n<!--                </el-input>-->\r\n\r\n<!--            </el-form-item>-->\r\n\r\n\r\n            <div class=\"page-element-class\">\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"saveApiTestTask\">保存</el-button>\r\n                    <el-button type=\"default\" @click=\"cancelSaveApiTestTask\">取消</el-button>\r\n                </el-form-item>\r\n            </div>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getApiCaseTreeRequest, getSingleApiTestTaskRequest, addAPITestTaskRequest, updateSingleApiTestTaskRequest} from '../../../api/apiTestTask';\r\nimport { getApiEnvironmentRequest } from '../../../api/apiEnvironment';\r\nimport { getDatabaseRequest } from '../../../api/apiDatabase';\r\n\r\nexport default {\r\n    inject:['reload'],\r\n    name: 'addOrEditApiTask',\r\n    props: ['type', 'apiTestTaskId', 'apiTestTaskData', 'projectId'],\r\n    data(){\r\n\r\n        return{\r\n            apiTestTaskForm: {\r\n                api_test_task_name: \"\",\r\n                api_test_task_id: \"\",\r\n                describe: \"\",\r\n                api_send_email: \"\",\r\n                api_send_enterprise_wechat: \"\",\r\n                api_environment_id: \"\",\r\n                database_id: \"\",\r\n                time_interval_hours: '0',\r\n                time_interval_minutes: '0',\r\n                time_interval_seconds: '0',\r\n                time_interval_day: '0',\r\n                timing_task_status: '0',\r\n            },\r\n            time_range: [],\r\n            api_send_enterprise_wechat_options: [\r\n                { text: '请选择',\r\n                    value: 0\r\n                },\r\n                { text: '是',\r\n                    value: 1\r\n                },\r\n                { text: '否',\r\n                    value: 2\r\n                },\r\n            ],\r\n            api_environment_id: '',\r\n            environmentSelect: [],\r\n            database_options: [],\r\n            count:\"\",//倒计时\r\n\r\n            data: [],\r\n\r\n            defaultProps: {\r\n                label: \"label\",\r\n                children: \"children\"\r\n\r\n            },\r\n\r\n            cases: [],\r\n            defaultTask: [],\r\n            api_project_id: \"\"\r\n\r\n\r\n        }\r\n\r\n\r\n    },\r\n    mounted() {\r\n\r\n\r\n    },\r\n    methods: {\r\n\r\n\r\n        //保存测试任务\r\n        saveApiTestTask(){\r\n            if ('add'===this.type){\r\n                this.addApiTestTask()\r\n\r\n            }else {\r\n                this.editApiTestTask()\r\n            }\r\n\r\n\r\n        },\r\n\r\n        // 获取域名\r\n        getSelectApiEnvironmentFun(){\r\n            getApiEnvironmentRequest().then(data =>{\r\n                if (true === data.data.success) {\r\n                    this.environmentSelect = data.data.data;\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n\r\n\r\n        },\r\n        //获取数据库\r\n        getSelectDatabaseFun(){\r\n            getDatabaseRequest().then(data =>{\r\n                if (true === data.data.success) {\r\n                    this.database_options = data.data.data;\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n\r\n\r\n        },\r\n\r\n        handleBucketClick(data){\r\n            // console.log(data.api_test_cases_id)\r\n\r\n        },\r\n\r\n        //取消保存测试任务\r\n        cancelSaveApiTestTask(){\r\n\r\n            this.$emit('cancelSaveApiTestTask')\r\n\r\n\r\n        },\r\n\r\n        //创建测试任务\r\n        addApiTestTask(){\r\n            this.apiTestTaskForm.api_test_task_id = 0;\r\n\r\n            let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n            console.log(this.$refs.tree.getCheckedNodes(true))\r\n            let case_id = this.$refs.tree.getCheckedNodes(true)\r\n            this.cases = []\r\n            for (let i=0; i<case_id.length;i++){\r\n                this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n            }\r\n            req.cases = this.cases\r\n            req.api_project_id =  this.api_project_id\r\n            req.starting_time = this.time_range[0]\r\n            req.end_time = this.time_range[1]\r\n\r\n\r\n            this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n\r\n                if (valid) { // 代表校验通过\r\n                    addAPITestTaskRequest(req).then(data => {\r\n                        console.log(data)\r\n                        if (true === data.data.success) {\r\n                            this.showAddOrEditApiTestCase = false;\r\n                            this.$message.success(\"添加API测试任务成功\")\r\n                            this.$emit('saveApiTestTask')\r\n\r\n                        } else {\r\n                            this.$message.error(\"添加APi测试任务失败\")\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        //编辑测试任务\r\n        editApiTestTask(){\r\n\r\n            let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n            let case_id = this.$refs.tree.getCheckedNodes(true)\r\n            this.cases = []\r\n            for (let i=0; i<case_id.length;i++){\r\n                this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n            }\r\n            req.cases = this.cases\r\n            req.api_project_id =  this.api_project_id\r\n            req.starting_time = this.time_range[0]\r\n            req.end_time = this.time_range[1]\r\n            this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n                if (valid) { // 代表校验通过\r\n                    updateSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id,req).then(data => {\r\n                        if (true === data.data.success) {\r\n                            this.showAddOrEditApiTestCase = false;\r\n                            this.$message.success(\"编辑API测试任务成功\")\r\n                            this.$emit('saveApiTestTask')\r\n\r\n                        } else {\r\n                            this.$message.error(\"编辑API测试任务失败\")\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        //获取测试用例树形结构\r\n        getApiCaseTreeFun(){\r\n            getApiCaseTreeRequest(this.api_project_id).then(data =>{\r\n                if (true === data.data.success){\r\n                    let apiTestTask = data.data.data;\r\n                    let req = JSON.parse(JSON.stringify(apiTestTask));\r\n                    for(var i =0;i<req.length;i++){\r\n                        let children = req[i].children\r\n                        req[i].label = req[i].api_project_name\r\n\r\n                        for(var j=0;j<children.length;j++){\r\n                            console.log(children.length)\r\n                            req[i].children[j].label = req[i].children[j].api_test_case_name\r\n                            req[i].children[j].id = req[i].children[j].api_test_cases_id\r\n                        }\r\n                    }\r\n                    this.data = req\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n\r\n        },\r\n\r\n        // 获取单独Api测试任务信息\r\n        getSingleApiTestTaskFun() {\r\n            getSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id).then(data =>{\r\n                if (true === data.data.success){\r\n\r\n                    this.defaultTask = JSON.parse(data.data.data.cases)\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n\r\n        getCheckedKeys() {\r\n            console.log(this.$refs.tree.getCheckedKeys());\r\n\r\n        },\r\n        setCheckedKeys(){\r\n            this.$refs.tree.setCheckedKeys([]);\r\n        }\r\n\r\n    },\r\n    created() {\r\n\r\n\r\n        if ('edit'===this.type){\r\n            console.log(\"编辑测试任务222222\")\r\n            console.log(this.apiTestTaskData)\r\n            this.api_project_id = this.projectId\r\n            this.apiTestTaskForm = {\r\n                api_test_task_name: this.apiTestTaskData.api_test_task_name,\r\n                api_test_task_id: this.apiTestTaskData.id,\r\n                describe: this.apiTestTaskData.describe,\r\n                api_send_email: this.apiTestTaskData.api_send_email,\r\n                api_send_enterprise_wechat: this.apiTestTaskData.api_send_enterprise_wechat,\r\n                api_environment_id: this.apiTestTaskData.api_environment_id,\r\n                database_id: this.apiTestTaskData.database_id,\r\n                time_interval_hours: this.apiTestTaskData.time_interval_hours,\r\n                time_interval_minutes: this.apiTestTaskData.time_interval_minutes,\r\n                time_interval_seconds: this.apiTestTaskData.time_interval_seconds,\r\n                time_interval_day: this.apiTestTaskData.time_interval_day,\r\n                timing_task_status: this.apiTestTaskData.timing_task_status,\r\n            }\r\n            this.time_range = [this.apiTestTaskData.starting_time, this.apiTestTaskData.end_time]\r\n\r\n            this.getApiCaseTreeFun()\r\n            this.getSelectApiEnvironmentFun()\r\n            this.getSelectDatabaseFun()\r\n            this.getSingleApiTestTaskFun()\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        if ('add'===this.type){\r\n            this.api_project_id = this.projectId\r\n            this.getSelectApiEnvironmentFun()\r\n            this.getSelectDatabaseFun()\r\n\r\n            this.getApiCaseTreeFun()\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_test_task_name{\r\n    width: 230px;\r\n}\r\n.api_send_email{\r\n    width: 230px;\r\n}\r\n\r\n</style>"]}]}