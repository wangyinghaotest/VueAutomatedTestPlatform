{"remainingRequest":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueAutomatedTestPlatform\\src\\components\\page\\apiAutomation\\apiTask\\APITestTaskResultDetails.vue?vue&type=style&index=0&id=747a7302&scoped=true&lang=css&","dependencies":[{"path":"D:\\VueAutomatedTestPlatform\\src\\components\\page\\apiAutomation\\apiTask\\APITestTaskResultDetails.vue","mtime":1652877133453},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\css-loader\\dist\\cjs.js","mtime":1652877127608},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1652877132788},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\postcss-loader\\src\\index.js","mtime":1652877131208},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KLnNjaGFydHsNCiAgICBoZWlnaHQ6IDMwMHB4Ow0KfQ0KDQo="},{"version":3,"sources":["APITestTaskResultDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmTA;AACA;AACA","file":"APITestTaskResultDetails.vue","sourceRoot":"src/components/page/apiAutomation/apiTask","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n                <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n                <el-breadcrumb-item>API测试报告</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <el-row>\r\n            <el-button @click=\"returnReportList\">返回</el-button>\r\n            <el-button type=\"primary\" @click=\"getApiCaseResultListFun\">全部</el-button>\r\n            <el-button type=\"danger\" @click=\"getApiCaseResultErrorListFun\">失败</el-button>\r\n        </el-row>\r\n        <div class=\"schart-box\">\r\n            <schart class=\"schart\" canvasId=\"pie\" :options=\"options3\"></schart>\r\n        </div>\r\n        <div>\r\n            <el-table\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\"\r\n            >\r\n                <!--                    :default-sort = \"{prop: 'date', order: 'descending'}\">-->\r\n                <el-table-column\r\n                    prop=\"id\"\r\n                    label=\"id\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_task_name\"\r\n                    label=\"任务名称\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_business_test_name\"\r\n                    label=\"API业务测试名称\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_test_case_name\"\r\n                    label=\"测试用例名称\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_successful\"\r\n                    label=\"成功\"\r\n                    width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    prop=\"api_error\"\r\n                    label=\"失败\"\r\n                    width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    prop=\"create_time\"\r\n                    label=\"时间\"\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button\r\n                            size=\"mini\"\r\n                            type=\"danger\"\r\n                            @click=\"SingleApiCaseReport(scope.row)\">查看详情</el-button>\r\n\r\n                        <el-dialog title=\"测试报告详情\" :visible.sync=\"dialogTableVisible\" :fullscreen=false>\r\n                            <el-tabs :model=\"apiCaseResultForm\">\r\n                                <el-tab-pane label=\"异常\" name=\"1\">\r\n                                    <p>{{ apiCaseResultForm.abnormal }}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"json提取变量转换\" name=\"2\">\r\n                                    <p>{{apiCaseResultForm.json_extract_variable_conversion}}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"断言结果\" name=\"3\">\r\n                                    <p>{{apiCaseResultForm.api_assertion_results}}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"参数提取\" name=\"4\">\r\n                                    <!--                  <p>{{apiCaseResultForm.api_variable_results}}</p>-->\r\n                                    <json-viewer :value=\"apiCaseResultForm.api_variable_results\" :expand-depth=5></json-viewer>\r\n\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"API请求结果\" name=\"5\">\r\n                                    <!--                  <pre>{{JSON.stringify(apiCaseResultForm.api_request_results,  null, 4)}}</pre>-->\r\n                                    <json-viewer :value=\"apiCaseResultForm.api_request_results\" :expand-depth=5></json-viewer>\r\n\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"请求URL\" name=\"6\">\r\n                                    <p>{{ apiCaseResultForm.api_url }}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"请求Header\" name=\"7\">\r\n                                    <p>{{ apiCaseResultForm.api_header }}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"请求Body\" name=\"8\">\r\n                                    <!--                  <pre>{{JSON.stringify(apiCaseResultForm.api_body ,  null, 4)}}</pre>-->\r\n                                    <p>{{ apiCaseResultForm.api_body }}</p>\r\n                                </el-tab-pane>\r\n                            </el-tabs>\r\n                        </el-dialog>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <el-pagination\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\"\r\n                :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n                :page-size=\"size_page\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"total_case\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getApiCaseCheckResultListRequest, postSingleApiCaseCheckResultRequest, getApiCaseCheckResultErrorListRequest} from '../../../../api/apiAutomation/apiTestTask';\r\nimport Schart from 'vue-schart';\r\nimport Vue from 'vue'\r\nimport JsonViewer from 'vue-json-viewer'\r\nVue.use(JsonViewer)\r\n\r\nexport default {\r\n    name: 'APITestTaskResultDetails',\r\n    props: ['apiResultId'],\r\n    components: {\r\n        Schart\r\n    },\r\n    data(){\r\n\r\n        return{\r\n\r\n            apiParameterExtractionData:[\r\n                {\r\n                    api_value_variable: \"\",\r\n                    api_key_variable: \"\",\r\n                    api_variable_results: \"\"\r\n\r\n                }\r\n            ],\r\n\r\n            currentPage: 1,\r\n            total_case: 0,\r\n            size_page: 10,\r\n            tableData: [],\r\n            api_state: 0,\r\n            testTaskId: \"\",\r\n            api_Result: \"\",\r\n            api_result_id: \"\",\r\n            api_test_result_id: \"\",\r\n            dialogTableVisible: false,\r\n            gridData: [],\r\n            apiCaseResult: 'second',\r\n            apiCaseResultForm: {\r\n                api_error: \"\",\r\n                api_successful : \"\",\r\n                abnormal: \"\",\r\n                json_extract_variable_conversion: \"\",\r\n                api_assertion_results: \"\",\r\n                api_request_results: \"\",\r\n                api_variable_results: \"\",\r\n                api_url: \"\",\r\n                api_header: \"\",\r\n                api_body: \"\",\r\n\r\n\r\n\r\n            },\r\n            activeNames: \"\",\r\n            options3: {\r\n                type: 'pie',\r\n                title: {\r\n                    text: '测试结果'\r\n                },\r\n                legend: {\r\n                    position: 'left'\r\n                },\r\n                bgColor: '#fbfbfb',\r\n                labels: ['成功', '失败'],\r\n                datasets: [\r\n                    {\r\n                        data: [0,0]\r\n                    },\r\n                ]\r\n            },\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.getApiCaseResultListFun()\r\n\r\n\r\n    },\r\n    methods: {\r\n\r\n        // 页签-条/页 跳转\r\n        handleSizeChange(val) {\r\n            this.size_page = val\r\n            if (this.api_state === 0){\r\n                this.getApiCaseResultListFun()\r\n            }\r\n            else {\r\n                this.getApiCaseResultErrorListFun()\r\n            }\r\n        },\r\n        // 底部页签跳转\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val\r\n            if (this.api_state === 0){\r\n                this.getApiCaseResultListFun()\r\n            }\r\n            else {\r\n                this.getApiCaseResultErrorListFun()\r\n            }\r\n        },\r\n\r\n        // 获取API测试用例结果列表\r\n        getApiCaseResultListFun() {\r\n            getApiCaseCheckResultListRequest(this.api_result_id, this.size_page, this.currentPage).then(data =>{\r\n                if (true === data.data.success){\r\n                    this.api_state = 0\r\n                    this.tableData = data.data.data.data;\r\n                    this.options3.datasets[0].data = data.data.data.case_result_total\r\n                    this.total_case = data.data.data.case_result_total[0] + data.data.data.case_result_total[1]\r\n\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n        // 获取API测试用例结果-失败列表\r\n        getApiCaseResultErrorListFun() {\r\n            getApiCaseCheckResultErrorListRequest(this.api_result_id, this.size_page, this.currentPage).then(data =>{\r\n                if (true === data.data.success){\r\n                    this.api_state = 1\r\n                    this.tableData = data.data.data.data;\r\n                    this.total_case = data.data.data.case_result_total[1]\r\n\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n\r\n        // 获取单独测试用例测试报告\r\n        SingleApiCaseReport(data){\r\n            console.log(\"这是单独id\",data.id)\r\n            this.api_test_result_id = data.id\r\n\r\n\r\n            postSingleApiCaseCheckResultRequest(this.api_test_result_id).then(data =>{\r\n                console.log(\"zheshishuju\", data.data.data.data)\r\n\r\n                if (true === data.data.success){\r\n                    let single_result = data.data.data.data[0]\r\n                    this.dialogTableVisible = true\r\n                    this.apiCaseResultForm = {...single_result }\r\n\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n\r\n        },\r\n\r\n        // 返回API报告列表\r\n        returnReportList(){\r\n            this.$parent.returnAPIReportList();\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n    created() {\r\n        console.log(this.apiResultId)\r\n        this.api_result_id = this.apiResultId\r\n\r\n    }\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.schart{\r\n    height: 300px;\r\n}\r\n\r\n</style>"]}]}