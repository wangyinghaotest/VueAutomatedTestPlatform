{"remainingRequest":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\uiTask\\addOrEditUiTestTask.vue?vue&type=style&index=0&id=9fbbbf3a&scoped=true&lang=css&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\uiTask\\addOrEditUiTestTask.vue","mtime":1650008441737},{"path":"E:\\test-platform-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1650008435745},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1650008440985},{"path":"E:\\test-platform-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1650008439497},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi51aV90ZXN0X3Rhc2tfbmFtZXsNCiAgd2lkdGg6IDIzMHB4Ow0KfQ0KDQo="},{"version":3,"sources":["addOrEditUiTestTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA","file":"addOrEditUiTestTask.vue","sourceRoot":"src/components/page/uiTask","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> UI任务管理\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>UI任务管理</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-form  ref=\"uiTestTaskFormRef\" :model=\"uiTestTaskForm\" label-width=\"100px\">\r\n      <el-form-item label=\"UI测试任务\"  prop=\"ui_test_task_name\">\r\n        <el-input v-model=\"uiTestTaskForm.ui_test_task_name\"  class=\"ui_test_task_name\" ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"描述\" prop=\"describe\">\r\n        <el-input type=\"textarea\" v-model=\"uiTestTaskForm.describe\" style=\"width: 230px;\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"UI测试用例\">\r\n        <el-tree\r\n            :data=\"data\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n\r\n            ref=\"tree\"\r\n            @check-change=\"handleBucketClick\"\r\n            :default-expanded-keys=\"[]\"\r\n            :default-checked-keys=\"defaultTask\"\r\n\r\n            style=\"width: 500px;\">\r\n        </el-tree>\r\n      </el-form-item>\r\n\r\n\r\n      <div class=\"page-element-class\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveUiTestTask\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveUiTestTask\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { addUiTestTaskRequest, getUiCaseTreeRequest, getSingleUiTestTaskRequest,updateSingleUiTestTaskRequest } from '../../../api/uiTestTask';\r\n\r\n\r\nexport default {\r\n\r\n  inject:['reload'],\r\n  name: 'addOrEditUiTestTask',\r\n  props: ['type', 'uiTestTaskId', 'uiTestTaskData', 'projectId'],\r\n  data(){\r\n\r\n    return{\r\n      uiTestTaskForm: {\r\n        ui_test_task_name: \"\",\r\n        ui_test_task_id: \"\",\r\n        describe: \"\"\r\n\r\n      },\r\n      count:\"\",//倒计时\r\n\r\n      data: [],\r\n\r\n      defaultProps: {\r\n        label: \"label\",\r\n        children: \"children\"\r\n\r\n      },\r\n\r\n      cases: [],\r\n      defaultTask: [],\r\n      ui_project_id: \"\"\r\n\r\n\r\n    }\r\n\r\n\r\n  },\r\n  mounted() {\r\n\r\n\r\n  },\r\n  methods: {\r\n\r\n\r\n    //保存测试任务\r\n    saveUiTestTask(){\r\n      if ('add'===this.type){\r\n        this.addUiTestTask()\r\n\r\n      }else {\r\n        this.editUiTestTask()\r\n      }\r\n\r\n\r\n    },\r\n\r\n    handleBucketClick(data){\r\n      // console.log(data.ui_test_cases_id)\r\n\r\n    },\r\n\r\n\r\n    //取消保存测试任务\r\n    cancelSaveUiTestTask(){\r\n\r\n      this.$emit('cancelSaveUiTestTask')\r\n\r\n\r\n    },\r\n\r\n    //创建测试任务\r\n    addUiTestTask(){\r\n      this.uiTestTaskForm.ui_test_task_id = 0;\r\n\r\n      let req = JSON.parse(JSON.stringify(this.uiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].ui_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.ui_project_id =  this.ui_project_id\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.uiTestTaskFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.uiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addUiTestTaskRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.$message.success(\"添加UI测试任务成功\")\r\n              this.$forceUpdate();\r\n              this.$emit('saveUiTestTask')\r\n\r\n\r\n            } else {\r\n              this.$message.error(\"添加UI测试任务失败\")\r\n              this.$emit('saveUiTestTask')\r\n\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    //编辑测试任务\r\n    editUiTestTask(){\r\n\r\n      let req = JSON.parse(JSON.stringify(this.uiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].ui_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.ui_project_id =  this.ui_project_id\r\n\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.uiTestTaskFormRef.validate((valid) => {\r\n        console.log(\"这是id：\",this.uiTestTaskForm.ui_test_task_id)\r\n        console.log(this.$refs.uiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          updateSingleUiTestTaskRequest(this.uiTestTaskForm.ui_test_task_id,req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditUiTestCase = false;\r\n              this.$message.success(\"编辑UI测试任务成功\")\r\n\r\n              this.$forceUpdate();\r\n            } else {\r\n              this.$message.error(\"编辑UI测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n        this.$emit('saveUiTestTask')\r\n\r\n\r\n      });\r\n    },\r\n\r\n    //获取测试用例树形结构\r\n    getUiCaseTreeFun(){\r\n      console.log(\"zhesahoidshasd\",this.ui_project_id)\r\n      getUiCaseTreeRequest(this.ui_project_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let uiTestTask = data.data.data;\r\n          let req = JSON.parse(JSON.stringify(uiTestTask));\r\n          console.log(\"uiTestTask：\", req)\r\n          for(var i =0;i<req.length;i++){\r\n            let children = req[i].children\r\n            req[i].label = req[i].ui_project_name\r\n\r\n            for(var j=0;j<children.length;j++){\r\n              console.log(children.length)\r\n              req[i].children[j].label = req[i].children[j].ui_test_case_name\r\n              req[i].children[j].id = req[i].children[j].ui_test_cases_id\r\n            }\r\n          }\r\n          console.log(\"uiTestTask222222222：\", req)\r\n          this.data = req\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n\r\n    },\r\n\r\n    // 获取单独测试任务信息\r\n    getSingleUiTestTaskFun() {\r\n      getSingleUiTestTaskRequest(this.uiTestTaskForm.ui_test_task_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let uiTestTask = data.data.data;\r\n          console.log(uiTestTask)\r\n\r\n\r\n          let req = JSON.parse(JSON.stringify(uiTestTask));\r\n          console.log(\"uiTestTask2333333333333：\", req.cases)\r\n\r\n\r\n          this.defaultTask = JSON.parse(data.data.data.cases)\r\n          console.log(this.defaultTask)\r\n\r\n          console.log(typeof (this.defaultTask))\r\n\r\n\r\n          console.log(\"这是默认选中返回得数据：\", this.defaultTask)\r\n\r\n\r\n\r\n        }else {\r\n          this.$message.error(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n    getCheckedKeys() {\r\n      console.log(this.$refs.tree.getCheckedKeys());\r\n\r\n    },\r\n    setCheckedKeys(){\r\n      this.$refs.tree.setCheckedKeys([]);\r\n    }\r\n\r\n  },\r\n  created() {\r\n\r\n\r\n    if ('edit'===this.type){\r\n      console.log(\"编辑测试任务222222\")\r\n      console.log(this.uiTestTaskData)\r\n      this.ui_project_id = this.projectId\r\n      this.uiTestTaskForm = {\r\n        ui_test_task_name: this.uiTestTaskData.ui_test_task_name,\r\n        ui_test_task_id: this.uiTestTaskData.id,\r\n        describe: this.uiTestTaskData.describe\r\n\r\n      }\r\n      console.log(\"编辑测试任务\")\r\n      console.log(\"编辑测试任务\",this.uiTestTaskForm.ui_test_task_id )\r\n      this.getUiCaseTreeFun()\r\n      this.getSingleUiTestTaskFun()\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      console.log(\"新增测试任务\", this.projectId)\r\n      this.ui_project_id = this.projectId\r\n\r\n      this.getUiCaseTreeFun()\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ui_test_task_name{\r\n  width: 230px;\r\n}\r\n\r\n</style>"]}]}