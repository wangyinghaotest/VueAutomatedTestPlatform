{"remainingRequest":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\apiTestCase\\addOrEditApiTestCase.vue?vue&type=template&id=3142dc64&scoped=true&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\apiTestCase\\addOrEditApiTestCase.vue","mtime":1650008441729},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1650008440985},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}