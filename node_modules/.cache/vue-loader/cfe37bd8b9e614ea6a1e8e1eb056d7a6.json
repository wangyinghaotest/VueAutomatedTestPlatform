{"remainingRequest":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiTask\\addOrEditApiTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiTask\\addOrEditApiTask.vue","mtime":1632633660567},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZXRBcGlDYXNlVHJlZVJlcXVlc3QsIGdldFNpbmdsZUFwaVRlc3RUYXNrUmVxdWVzdCwgYWRkQVBJVGVzdFRhc2tSZXF1ZXN0LCB1cGRhdGVTaW5nbGVBcGlUZXN0VGFza1JlcXVlc3R9IGZyb20gJy4uLy4uLy4uL2FwaS9hcGlUZXN0VGFzayc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgaW5qZWN0OlsncmVsb2FkJ10sDQogIG5hbWU6ICdhZGRPckVkaXRBcGlUYXNrJywNCiAgcHJvcHM6IFsndHlwZScsICdhcGlUZXN0VGFza0lkJywgJ2FwaVRlc3RUYXNrRGF0YScsICdwcm9qZWN0SWQnXSwNCiAgZGF0YSgpew0KDQogICAgcmV0dXJuew0KICAgICAgYXBpVGVzdFRhc2tGb3JtOiB7DQogICAgICAgIGFwaV90ZXN0X3Rhc2tfbmFtZTogIiIsDQogICAgICAgIGFwaV90ZXN0X3Rhc2tfaWQ6ICIiLA0KICAgICAgICBkZXNjcmliZTogIiINCg0KICAgICAgfSwNCiAgICAgIGNvdW50OiIiLC8v5YCS6K6h5pe2DQoNCiAgICAgIGRhdGE6IFtdLA0KDQogICAgICBkZWZhdWx0UHJvcHM6IHsNCiAgICAgICAgbGFiZWw6ICJsYWJlbCIsDQogICAgICAgIGNoaWxkcmVuOiAiY2hpbGRyZW4iDQoNCiAgICAgIH0sDQoNCiAgICAgIGNhc2VzOiBbXSwNCiAgICAgIGRlZmF1bHRUYXNrOiBbXSwNCiAgICAgIGFwaV9wcm9qZWN0X2lkOiAiIg0KDQoNCiAgICB9DQoNCg0KICB9LA0KICBtb3VudGVkKCkgew0KDQoNCiAgfSwNCiAgbWV0aG9kczogew0KDQoNCiAgICAvL+S/neWtmOa1i+ivleS7u+WKoQ0KICAgIHNhdmVBcGlUZXN0VGFzaygpew0KICAgICAgaWYgKCdhZGQnPT09dGhpcy50eXBlKXsNCiAgICAgICAgdGhpcy5hZGRBcGlUZXN0VGFzaygpDQoNCiAgICAgIH1lbHNlIHsNCiAgICAgICAgdGhpcy5lZGl0QXBpVGVzdFRhc2soKQ0KICAgICAgfQ0KDQoNCiAgICB9LA0KDQogICAgaGFuZGxlQnVja2V0Q2xpY2soZGF0YSl7DQogICAgICAvLyBjb25zb2xlLmxvZyhkYXRhLmFwaV90ZXN0X2Nhc2VzX2lkKQ0KDQogICAgfSwNCg0KDQogICAgLy/lj5bmtojkv53lrZjmtYvor5Xku7vliqENCiAgICBjYW5jZWxTYXZlQXBpVGVzdFRhc2soKXsNCg0KICAgICAgdGhpcy4kZW1pdCgnY2FuY2VsU2F2ZUFwaVRlc3RUYXNrJykNCg0KDQogICAgfSwNCg0KICAgIC8v5Yib5bu65rWL6K+V5Lu75YqhDQogICAgYWRkQXBpVGVzdFRhc2soKXsNCiAgICAgIHRoaXMuYXBpVGVzdFRhc2tGb3JtLmFwaV90ZXN0X3Rhc2tfaWQgPSAwOw0KDQogICAgICBsZXQgcmVxID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmFwaVRlc3RUYXNrRm9ybSkpOw0KDQogICAgICBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZE5vZGVzKHRydWUpKQ0KICAgICAgbGV0IGNhc2VfaWQgPSB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZE5vZGVzKHRydWUpDQogICAgICB0aGlzLmNhc2VzID0gW10NCiAgICAgIGZvciAobGV0IGk9MDsgaTxjYXNlX2lkLmxlbmd0aDtpKyspew0KICAgICAgICB0aGlzLmNhc2VzW2ldID0gY2FzZV9pZFtpXS5hcGlfdGVzdF9jYXNlc19pZA0KDQogICAgICB9DQogICAgICBjb25zb2xlLmxvZygi6L+Z5pivY2FzZXMiLCB0aGlzLmNhc2VzKQ0KDQogICAgICByZXEuY2FzZXMgPSB0aGlzLmNhc2VzDQogICAgICByZXEuYXBpX3Byb2plY3RfaWQgPSAgdGhpcy5hcGlfcHJvamVjdF9pZA0KDQoNCiAgICAgIGNvbnNvbGUubG9nKCLov5nmmK/ojrflj5bliLDnmoQiLHJlcSk7DQogICAgICB0aGlzLiRyZWZzLmFwaVRlc3RUYXNrRm9ybVJlZi52YWxpZGF0ZSgodmFsaWQpID0+IHsNCg0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLmFwaVRlc3RUYXNrRm9ybVJlZi52YWxpZGF0ZSgodmFsaWQpKSk7DQogICAgICAgIGlmICh2YWxpZCkgeyAvLyDku6PooajmoKHpqozpgJrov4cNCiAgICAgICAgICBhZGRBUElUZXN0VGFza1JlcXVlc3QocmVxKS50aGVuKGRhdGEgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkNCiAgICAgICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2Vzcykgew0KICAgICAgICAgICAgICB0aGlzLnNob3dBZGRPckVkaXRBcGlUZXN0Q2FzZSA9IGZhbHNlOw0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIua3u+WKoEFQSea1i+ivleS7u+WKoeaIkOWKnyIpDQogICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NhdmVBcGlUZXN0VGFzaycpDQoNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIua3u+WKoEFQaea1i+ivleS7u+WKoeWksei0pSIpDQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgfSBlbHNlIHsgIC8v5qCh6aqM5aSx6LSlDQogICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgIH0pOw0KDQogICAgfSwNCg0KICAgIC8v57yW6L6R5rWL6K+V5Lu75YqhDQogICAgZWRpdEFwaVRlc3RUYXNrKCl7DQoNCiAgICAgIGxldCByZXEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuYXBpVGVzdFRhc2tGb3JtKSk7DQoNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMudHJlZS5nZXRDaGVja2VkTm9kZXModHJ1ZSkpDQogICAgICBsZXQgY2FzZV9pZCA9IHRoaXMuJHJlZnMudHJlZS5nZXRDaGVja2VkTm9kZXModHJ1ZSkNCiAgICAgIHRoaXMuY2FzZXMgPSBbXQ0KICAgICAgZm9yIChsZXQgaT0wOyBpPGNhc2VfaWQubGVuZ3RoO2krKyl7DQogICAgICAgIHRoaXMuY2FzZXNbaV0gPSBjYXNlX2lkW2ldLmFwaV90ZXN0X2Nhc2VzX2lkDQoNCiAgICAgIH0NCiAgICAgIGNvbnNvbGUubG9nKCLov5nmmK9jYXNlcyIsIHRoaXMuY2FzZXMpDQoNCiAgICAgIHJlcS5jYXNlcyA9IHRoaXMuY2FzZXMNCiAgICAgIHJlcS5hcGlfcHJvamVjdF9pZCA9ICB0aGlzLmFwaV9wcm9qZWN0X2lkDQoNCg0KDQogICAgICBjb25zb2xlLmxvZygi6L+Z5piv6I635Y+W5Yiw55qEIixyZXEpOw0KICAgICAgdGhpcy4kcmVmcy5hcGlUZXN0VGFza0Zvcm1SZWYudmFsaWRhdGUoKHZhbGlkKSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKCLov5nmmK9pZO+8miIsdGhpcy5hcGlUZXN0VGFza0Zvcm0uYXBpX3Rlc3RfdGFza19pZCkNCiAgICAgICAgY29uc29sZS5sb2codGhpcy4kcmVmcy5hcGlUZXN0VGFza0Zvcm1SZWYudmFsaWRhdGUoKHZhbGlkKSkpOw0KICAgICAgICBpZiAodmFsaWQpIHsgLy8g5Luj6KGo5qCh6aqM6YCa6L+HDQogICAgICAgICAgdXBkYXRlU2luZ2xlQXBpVGVzdFRhc2tSZXF1ZXN0KHRoaXMuYXBpVGVzdFRhc2tGb3JtLmFwaV90ZXN0X3Rhc2tfaWQscmVxKS50aGVuKGRhdGEgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkNCiAgICAgICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2Vzcykgew0KICAgICAgICAgICAgICB0aGlzLnNob3dBZGRPckVkaXRBcGlUZXN0Q2FzZSA9IGZhbHNlOw0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIue8lui+kVVJ5rWL6K+V5Lu75Yqh5oiQ5YqfIikNCiAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnc2F2ZUFwaVRlc3RUYXNrJykNCg0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLnvJbovpFVSea1i+ivleS7u+WKoeWksei0pSIpDQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgfSBlbHNlIHsgIC8v5qCh6aqM5aSx6LSlDQogICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCg0KDQogICAgICB9KTsNCiAgICB9LA0KDQogICAgLy/ojrflj5bmtYvor5XnlKjkvovmoJHlvaLnu5PmnoQNCiAgICBnZXRBcGlDYXNlVHJlZUZ1bigpew0KICAgICAgY29uc29sZS5sb2coIkFQSemhueebrklEIix0aGlzLmFwaV9wcm9qZWN0X2lkKQ0KICAgICAgZ2V0QXBpQ2FzZVRyZWVSZXF1ZXN0KHRoaXMuYXBpX3Byb2plY3RfaWQpLnRoZW4oZGF0YSA9PnsNCiAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKXsNCiAgICAgICAgICBsZXQgYXBpVGVzdFRhc2sgPSBkYXRhLmRhdGEuZGF0YTsNCiAgICAgICAgICBsZXQgcmVxID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhcGlUZXN0VGFzaykpOw0KICAgICAgICAgIGNvbnNvbGUubG9nKCJhcGlUZXN0VGFza++8miIsIHJlcSkNCiAgICAgICAgICBmb3IodmFyIGkgPTA7aTxyZXEubGVuZ3RoO2krKyl7DQogICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSByZXFbaV0uY2hpbGRyZW4NCiAgICAgICAgICAgIHJlcVtpXS5sYWJlbCA9IHJlcVtpXS5hcGlfcHJvamVjdF9uYW1lDQoNCiAgICAgICAgICAgIGZvcih2YXIgaj0wO2o8Y2hpbGRyZW4ubGVuZ3RoO2orKyl7DQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoaWxkcmVuLmxlbmd0aCkNCiAgICAgICAgICAgICAgcmVxW2ldLmNoaWxkcmVuW2pdLmxhYmVsID0gcmVxW2ldLmNoaWxkcmVuW2pdLmFwaV90ZXN0X2Nhc2VfbmFtZQ0KICAgICAgICAgICAgICByZXFbaV0uY2hpbGRyZW5bal0uaWQgPSByZXFbaV0uY2hpbGRyZW5bal0uYXBpX3Rlc3RfY2FzZXNfaWQNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgICAgY29uc29sZS5sb2coInVpVGVzdFRhc2syMjIyMjIyMjLvvJoiLCByZXEpDQogICAgICAgICAgdGhpcy5kYXRhID0gcmVxDQogICAgICAgIH1lbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIuiOt+WPluaOpeWPo+Wksei0pSIpDQogICAgICAgIH0NCg0KICAgICAgfSkNCg0KICAgIH0sDQoNCiAgICAvLyDojrflj5bljZXni6xBcGnmtYvor5Xku7vliqHkv6Hmga8NCiAgICBnZXRTaW5nbGVBcGlUZXN0VGFza0Z1bigpIHsNCiAgICAgIGdldFNpbmdsZUFwaVRlc3RUYXNrUmVxdWVzdCh0aGlzLmFwaVRlc3RUYXNrRm9ybS5hcGlfdGVzdF90YXNrX2lkKS50aGVuKGRhdGEgPT57DQogICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2Vzcyl7DQogICAgICAgICAgbGV0IGFwaVRlc3RUYXNrID0gZGF0YS5kYXRhLmRhdGE7DQogICAgICAgICAgY29uc29sZS5sb2coYXBpVGVzdFRhc2spDQoNCg0KICAgICAgICAgIGxldCByZXEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGFwaVRlc3RUYXNrKSk7DQogICAgICAgICAgY29uc29sZS5sb2coImFwaVRlc3RUYXNrMjMzMzMzMzMzMzMzM++8miIsIHJlcS5jYXNlcykNCg0KDQogICAgICAgICAgdGhpcy5kZWZhdWx0VGFzayA9IEpTT04ucGFyc2UoZGF0YS5kYXRhLmRhdGEuY2FzZXMpDQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5kZWZhdWx0VGFzaykNCg0KICAgICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZiAodGhpcy5kZWZhdWx0VGFzaykpDQoNCg0KICAgICAgICAgIGNvbnNvbGUubG9nKCLov5nmmK/pu5jorqTpgInkuK3ov5Tlm57lvpfmlbDmja7vvJoiLCB0aGlzLmRlZmF1bHRUYXNrKQ0KDQoNCg0KICAgICAgICB9ZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLojrflj5bmjqXlj6PlpLHotKUiKQ0KICAgICAgICB9DQoNCiAgICAgIH0pDQogICAgfSwNCg0KDQoNCg0KDQoNCiAgICBnZXRDaGVja2VkS2V5cygpIHsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMudHJlZS5nZXRDaGVja2VkS2V5cygpKTsNCg0KICAgIH0sDQogICAgc2V0Q2hlY2tlZEtleXMoKXsNCiAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRDaGVja2VkS2V5cyhbXSk7DQogICAgfQ0KDQogIH0sDQogIGNyZWF0ZWQoKSB7DQoNCg0KICAgIGlmICgnZWRpdCc9PT10aGlzLnR5cGUpew0KICAgICAgY29uc29sZS5sb2coIue8lui+kea1i+ivleS7u+WKoTIyMjIyMiIpDQogICAgICBjb25zb2xlLmxvZyh0aGlzLmFwaVRlc3RUYXNrRGF0YSkNCiAgICAgIHRoaXMuYXBpX3Byb2plY3RfaWQgPSB0aGlzLnByb2plY3RJZA0KICAgICAgdGhpcy5hcGlUZXN0VGFza0Zvcm0gPSB7DQogICAgICAgIGFwaV90ZXN0X3Rhc2tfbmFtZTogdGhpcy5hcGlUZXN0VGFza0RhdGEuYXBpX3Rlc3RfdGFza19uYW1lLA0KICAgICAgICBhcGlfdGVzdF90YXNrX2lkOiB0aGlzLmFwaVRlc3RUYXNrRGF0YS5pZCwNCiAgICAgICAgZGVzY3JpYmU6IHRoaXMuYXBpVGVzdFRhc2tEYXRhLmRlc2NyaWJlDQoNCiAgICAgIH0NCiAgICAgIGNvbnNvbGUubG9nKCLnvJbovpHmtYvor5Xku7vliqEiKQ0KICAgICAgY29uc29sZS5sb2coIue8lui+kea1i+ivleS7u+WKoSIsdGhpcy5hcGlUZXN0VGFza0Zvcm0uYXBpX3Rlc3RfdGFza19pZCApDQogICAgICB0aGlzLmdldEFwaUNhc2VUcmVlRnVuKCkNCiAgICAgIHRoaXMuZ2V0U2luZ2xlQXBpVGVzdFRhc2tGdW4oKQ0KDQoNCg0KDQogICAgfQ0KDQogICAgaWYgKCdhZGQnPT09dGhpcy50eXBlKXsNCiAgICAgIGNvbnNvbGUubG9nKCLmlrDlop7mtYvor5Xku7vliqEiLCB0aGlzLnByb2plY3RJZCkNCiAgICAgIHRoaXMuYXBpX3Byb2plY3RfaWQgPSB0aGlzLnByb2plY3RJZA0KDQogICAgICB0aGlzLmdldEFwaUNhc2VUcmVlRnVuKCkNCg0KDQoNCiAgICB9DQoNCg0KDQoNCiAgfSwNCg0KfTsNCg=="},{"version":3,"sources":["addOrEditApiTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;;;;AAIA;AACA;AACA;;AAEA;AACA;;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;;;;;AAKA;;AAEA","file":"addOrEditApiTask.vue","sourceRoot":"src/components/page/apiTask","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n        <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-form  ref=\"apiTestTaskFormRef\" :model=\"apiTestTaskForm\" label-width=\"100px\">\r\n      <el-form-item label=\"API测试任务\"  prop=\"api_test_task_name\">\r\n        <el-input v-model=\"apiTestTaskForm.api_test_task_name\"  class=\"api_test_task_name\" ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"描述\" prop=\"describe\">\r\n        <el-input type=\"textarea\" v-model=\"apiTestTaskForm.describe\" style=\"width: 230px;\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"API业务测试\">\r\n        <el-tree\r\n            :data=\"data\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n\r\n            ref=\"tree\"\r\n            @check-change=\"handleBucketClick\"\r\n            :default-expanded-keys=\"[]\"\r\n            :default-checked-keys=\"defaultTask\"\r\n\r\n            style=\"width: 500px;\">\r\n        </el-tree>\r\n      </el-form-item>\r\n\r\n\r\n      <div class=\"page-element-class\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveApiTestTask\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveApiTestTask\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getApiCaseTreeRequest, getSingleApiTestTaskRequest, addAPITestTaskRequest, updateSingleApiTestTaskRequest} from '../../../api/apiTestTask';\r\n\r\nexport default {\r\n  inject:['reload'],\r\n  name: 'addOrEditApiTask',\r\n  props: ['type', 'apiTestTaskId', 'apiTestTaskData', 'projectId'],\r\n  data(){\r\n\r\n    return{\r\n      apiTestTaskForm: {\r\n        api_test_task_name: \"\",\r\n        api_test_task_id: \"\",\r\n        describe: \"\"\r\n\r\n      },\r\n      count:\"\",//倒计时\r\n\r\n      data: [],\r\n\r\n      defaultProps: {\r\n        label: \"label\",\r\n        children: \"children\"\r\n\r\n      },\r\n\r\n      cases: [],\r\n      defaultTask: [],\r\n      api_project_id: \"\"\r\n\r\n\r\n    }\r\n\r\n\r\n  },\r\n  mounted() {\r\n\r\n\r\n  },\r\n  methods: {\r\n\r\n\r\n    //保存测试任务\r\n    saveApiTestTask(){\r\n      if ('add'===this.type){\r\n        this.addApiTestTask()\r\n\r\n      }else {\r\n        this.editApiTestTask()\r\n      }\r\n\r\n\r\n    },\r\n\r\n    handleBucketClick(data){\r\n      // console.log(data.api_test_cases_id)\r\n\r\n    },\r\n\r\n\r\n    //取消保存测试任务\r\n    cancelSaveApiTestTask(){\r\n\r\n      this.$emit('cancelSaveApiTestTask')\r\n\r\n\r\n    },\r\n\r\n    //创建测试任务\r\n    addApiTestTask(){\r\n      this.apiTestTaskForm.api_test_task_id = 0;\r\n\r\n      let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.api_project_id =  this.api_project_id\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.apiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addAPITestTaskRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditApiTestCase = false;\r\n              this.$message.success(\"添加API测试任务成功\")\r\n              this.$emit('saveApiTestTask')\r\n\r\n            } else {\r\n              this.$message.error(\"添加APi测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    //编辑测试任务\r\n    editApiTestTask(){\r\n\r\n      let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.api_project_id =  this.api_project_id\r\n\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n        console.log(\"这是id：\",this.apiTestTaskForm.api_test_task_id)\r\n        console.log(this.$refs.apiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          updateSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id,req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditApiTestCase = false;\r\n              this.$message.success(\"编辑UI测试任务成功\")\r\n              this.$emit('saveApiTestTask')\r\n\r\n            } else {\r\n              this.$message.info(\"编辑UI测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n\r\n\r\n      });\r\n    },\r\n\r\n    //获取测试用例树形结构\r\n    getApiCaseTreeFun(){\r\n      console.log(\"API项目ID\",this.api_project_id)\r\n      getApiCaseTreeRequest(this.api_project_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let apiTestTask = data.data.data;\r\n          let req = JSON.parse(JSON.stringify(apiTestTask));\r\n          console.log(\"apiTestTask：\", req)\r\n          for(var i =0;i<req.length;i++){\r\n            let children = req[i].children\r\n            req[i].label = req[i].api_project_name\r\n\r\n            for(var j=0;j<children.length;j++){\r\n              console.log(children.length)\r\n              req[i].children[j].label = req[i].children[j].api_test_case_name\r\n              req[i].children[j].id = req[i].children[j].api_test_cases_id\r\n            }\r\n          }\r\n          console.log(\"uiTestTask222222222：\", req)\r\n          this.data = req\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n\r\n    },\r\n\r\n    // 获取单独Api测试任务信息\r\n    getSingleApiTestTaskFun() {\r\n      getSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let apiTestTask = data.data.data;\r\n          console.log(apiTestTask)\r\n\r\n\r\n          let req = JSON.parse(JSON.stringify(apiTestTask));\r\n          console.log(\"apiTestTask2333333333333：\", req.cases)\r\n\r\n\r\n          this.defaultTask = JSON.parse(data.data.data.cases)\r\n          console.log(this.defaultTask)\r\n\r\n          console.log(typeof (this.defaultTask))\r\n\r\n\r\n          console.log(\"这是默认选中返回得数据：\", this.defaultTask)\r\n\r\n\r\n\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getCheckedKeys() {\r\n      console.log(this.$refs.tree.getCheckedKeys());\r\n\r\n    },\r\n    setCheckedKeys(){\r\n      this.$refs.tree.setCheckedKeys([]);\r\n    }\r\n\r\n  },\r\n  created() {\r\n\r\n\r\n    if ('edit'===this.type){\r\n      console.log(\"编辑测试任务222222\")\r\n      console.log(this.apiTestTaskData)\r\n      this.api_project_id = this.projectId\r\n      this.apiTestTaskForm = {\r\n        api_test_task_name: this.apiTestTaskData.api_test_task_name,\r\n        api_test_task_id: this.apiTestTaskData.id,\r\n        describe: this.apiTestTaskData.describe\r\n\r\n      }\r\n      console.log(\"编辑测试任务\")\r\n      console.log(\"编辑测试任务\",this.apiTestTaskForm.api_test_task_id )\r\n      this.getApiCaseTreeFun()\r\n      this.getSingleApiTestTaskFun()\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      console.log(\"新增测试任务\", this.projectId)\r\n      this.api_project_id = this.projectId\r\n\r\n      this.getApiCaseTreeFun()\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_test_task_name{\r\n  width: 230px;\r\n}\r\n\r\n</style>"]}]}