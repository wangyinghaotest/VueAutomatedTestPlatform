{"remainingRequest":"D:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\performanceTask\\performanceTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\performanceTask\\performanceTask.vue","mtime":1632633660573},{"path":"D:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VUE\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7Z2V0QXBpUHJvamVjdFJlcXVlc3QsIGFkZEFwaVByb2plY3RSZXF1ZXN0LCBnZXRTaW5nbGVBcGlQcm9qZWN0UmVxdWVzdCwgdXBkYXRlU2luZ2xlQXBpUHJvamVjdFJlcXVlc3QsIGRlbGV0ZVNpbmdsZUFwaVByb2plY3RSZXF1ZXN0fSBmcm9tICIuLi8uLi8uLi9hcGkvYXBpUHJvamVjdCI7CmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdhcGlQcm9qZWN0JywKICAgIC8vIHByb3BzOiB7CiAgICAvLyAgICAgdWlQcm9qZWN0OiBPYmplY3QsCiAgICAvLyB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0YWJsZURhdGE6IFtdLAoKICAgICAgICAgICAgcGFnZTogewogICAgICAgICAgICAgICAgcGFnZTogMSwKICAgICAgICAgICAgICAgIHRvdGFsOiAwLAogICAgICAgICAgICAgICAgc2l6ZTogMTAsCgogICAgICAgICAgICB9LAogICAgICAgICAgICBhZGRBcGlQcm9qZWN0ZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICAgICAgICBlZGl0QXBpUHJvamVjdGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwKCiAgICAgICAgICAgIGFkZEFwaVByb2plY3REYXRhOiB7CiAgICAgICAgICAgICAgICBhcGlfcHJvamVjdF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgIGRlc2NyaWJlOiAiIgogICAgICAgICAgICB9LAogICAgICAgICAgICBlZGl0QXBpUHJvamVjdERhdGE6IHsKICAgICAgICAgICAgICAgIGFwaV9wcm9qZWN0X25hbWU6ICIiLAogICAgICAgICAgICAgICAgZGVzY3JpYmU6ICIiLAogICAgICAgICAgICAgICAgaWQ6IDAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFwaVByb2plY3RJZDogIiIsCiAgICAgICAgICAgIGFwaVByb2plY3REYXRhOiAiIiwKCiAgICAgICAgICAgIHJ1bGVzOiB7CiAgICAgICAgICAgICAgICBhcGlfcHJvamVjdF9uYW1lOiBbCiAgICAgICAgICAgICAgICAgICAge3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5ZCN56ewJywgdHJpZ2dlcjogJ2JsdXInfSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogWwogICAgICAgICAgICAgICAgICAgIHtyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeaPj+i/sCcsIHRyaWdnZXI6ICdibHVyJ30sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICB9LAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CgoKICAgICAgICBmb3JtYXR0ZXIocm93LCBjb2x1bW4pIHsKICAgICAgICAgICAgcmV0dXJuIHJvdy5hZGRyZXNzOwogICAgICAgIH0sCiAgICAgICAgaGFuZGxlRWRpdChpbmRleCwgcm93KSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGluZGV4LCByb3cpOwogICAgICAgIH0sCiAgICAgICAgaGFuZGxlRGVsZXRlKGluZGV4LCByb3cpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coaW5kZXgsIHJvdyk7CiAgICAgICAgfSwKICAgICAgICBoYW5kbGVTaXplQ2hhbmdlKHNpemUpIHsKICAgICAgICAgICAgdGhpcy5wYWdlLnNpemUgPSBzaXplOwogICAgICAgICAgICB0aGlzLmdldEFwaVByb2plY3RGdW4oKQogICAgICAgIH0sCiAgICAgICAgaGFuZGxlQ3VycmVudENoYW5nZShpbmRleCkgewogICAgICAgICAgICB0aGlzLnBhZ2UucGFnZSA9IGluZGV4OwogICAgICAgICAgICB0aGlzLmdldEFwaVByb2plY3RGdW4oKQogICAgICAgIH0sCgogICAgICAgIC8v6I635Y+W5omA5pyJQVBJ6aG555uu5YiX6KGoCiAgICAgICAgZ2V0QXBpUHJvamVjdEZ1bigpIHsKICAgICAgICAgICAgbGV0IHJlcSA9IHsKICAgICAgICAgICAgICAgIHBhZ2U6IHRoaXMucGFnZS5wYWdlLAogICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5wYWdlLnNpemUsCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGdldEFwaVByb2plY3RSZXF1ZXN0KHJlcSkudGhlbihkYXRhID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy50YWJsZURhdGEgPSBkYXRhLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UudG90YWwgPSBkYXRhLmRhdGEuZGF0YS50b3RhbDsKICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UucGFnZSA9IGRhdGEuZGF0YS5kYXRhLnBhZ2U7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlLnNpemUgPSBkYXRhLmRhdGEuZGF0YS5zaXplOwoKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLojrflj5bmjqXlj6PlpLHotKUiKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCgogICAgICAgIC8vIOa3u+WKoEFQSea1i+ivlemhueebrgogICAgICAgIGFkZEFwaVRlc3RQcm9qZWN0KCkgewogICAgICAgICAgICBsZXQgcmVxID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmFkZEFwaVByb2plY3REYXRhKSk7CgogICAgICAgICAgICB0aGlzLiRyZWZzLmFkZEFwaVByb2plY3RGb3JtUmVmLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgICAgICAgICAgaWYgKHZhbGlkKSB7IC8vIOS7o+ihqOagoemqjOmAmui/hwogICAgICAgICAgICAgICAgICAgIGFkZEFwaVByb2plY3RSZXF1ZXN0KHJlcSkudGhlbihkYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEFwaVByb2plY3RGdW4oKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQXBpUHJvamVjdGRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIuWIm+W7uumhueebruaIkOWKnyIpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIuWIm+W7uumhueebruWksei0pSIpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSBlbHNlIHsgIC8v5qCh6aqM5aSx6LSlCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9LAoKICAgICAgICAvLyDmt7vliqDpobnnm64g5by556qXCiAgICAgICAgYWRkUHJvamVjdFBvcHVwKCl7CiAgICAgICAgICAgIHRoaXMuYWRkQXBpUHJvamVjdERhdGEgPSB7CiAgICAgICAgICAgICAgICBhcGlfcHJvamVjdF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgIGRlc2NyaWJlOiAiIiwKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy5hZGRBcGlQcm9qZWN0ZGlhbG9nRm9ybVZpc2libGU9dHJ1ZTsKICAgICAgICB9LAoKICAgICAgICBoYW5kbGVOb2RlQ2xpY2soZGF0YSkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRTZXJ2aWNlSWQgPSBkYXRhLmlkOwogICAgICAgIH0sCgoKICAgICAgICAvL+e8lui+kemhueebrgogICAgICAgIGVkaXRQcm9qZWN0KCl7CiAgICAgICAgICAgIGxldCByZXEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZWRpdEFwaVByb2plY3REYXRhKSk7CgogICAgICAgICAgICB0aGlzLiRyZWZzLmVkaXRQcm9qZWN0Rm9ybVJlZi52YWxpZGF0ZSgodmFsaWQpID0+IHsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFwaVByb2plY3RJZCk7CiAgICAgICAgICAgICAgICBpZiAodmFsaWQpIHsgLy8g5Luj6KGo5qCh6aqM6YCa6L+HCiAgICAgICAgICAgICAgICAgICAgdXBkYXRlU2luZ2xlQXBpUHJvamVjdFJlcXVlc3QodGhpcy5hcGlQcm9qZWN0SWQsIHJlcSkudGhlbihkYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEFwaVByb2plY3RGdW4oKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdEFwaVByb2plY3RkaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLnvJbovpHpobnnm67miJDlip8iKQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLnvJbovpHpobnnm67lpLHotKUiKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0gZWxzZSB7ICAvL+agoemqjOWksei0pQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgIH0sCgogICAgICAgIC8v57yW6L6R6aG555uu5by556qX5bm26I635Y+W5Y2V5Liq6aG555uuCiAgICAgICAgZWRpdEFwaVByb2plY3RQb3B1cChkYXRhKXsKCiAgICAgICAgICAgIHRoaXMuYXBpUHJvamVjdElkID0gZGF0YS5pZDsKICAgICAgICAgICAgdGhpcy5hcGlQcm9qZWN0RGF0YSA9IGRhdGE7CiAgICAgICAgICAgIHRoaXMuZWRpdEFwaVByb2plY3RkaWFsb2dGb3JtVmlzaWJsZT10cnVlOwoKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5hcGlQcm9qZWN0SWQpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFwaVByb2plY3REYXRhKTsKCiAgICAgICAgICAgIGdldFNpbmdsZUFwaVByb2plY3RSZXF1ZXN0KHRoaXMuYXBpUHJvamVjdElkKS50aGVuKGRhdGEgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRBcGlQcm9qZWN0RGF0YS5hcGlfcHJvamVjdF9uYW1lID0gZGF0YS5kYXRhLmRhdGEuYXBpX3Byb2plY3RfbmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0QXBpUHJvamVjdERhdGEuZGVzY3JpYmUgPSBkYXRhLmRhdGEuZGF0YS5kZXNjcmliZTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIuiOt+WPluaOpeWPo+Wksei0pSIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApOwoKICAgICAgICB9LAoKCiAgICAgICAgLy/liKDpmaTljZXkuKrpobnnm64KICAgICAgICBkZWxldGVQcm9qZWN0UG9wdXAoZGF0YSl7CgogICAgICAgICAgICB0aGlzLmFwaVByb2plY3RJZCA9IGRhdGEuaWQ7CiAgICAgICAgICAgIHRoaXMuYXBpUHJvamVjdERhdGEgPSBkYXRhOwoKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5hcGlQcm9qZWN0SWQpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFwaVByb2plY3REYXRhKTsKCiAgICAgICAgICAgIGRlbGV0ZVNpbmdsZUFwaVByb2plY3RSZXF1ZXN0KHRoaXMuYXBpUHJvamVjdElkKS50aGVuKGRhdGEgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgICAgICAgICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEFwaVByb2plY3RGdW4oKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCLliKDpmaTpobnnm67miJDlip8iKQoKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmluZm8oIuWIoOmZpOmhueebruWksei0pSIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApOwoKICAgICAgICB9LAoKCgoKCiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmdldEFwaVByb2plY3RGdW4oKTsKICAgIH0KfTsK"},{"version":3,"sources":["performanceTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA","file":"performanceTask.vue","sourceRoot":"src/components/page/performanceTask","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> 性能测试项目\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试项目</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <el-row>\r\n            <el-button type=\"primary\" @click=\"addProjectPopup\" >创建项目</el-button>\r\n        </el-row>\r\n\r\n\r\n        <el-dialog title=\"创建项目\" :visible.sync=\"addApiProjectdialogFormVisible\">\r\n            <el-form :model=\"addApiProjectData\" :rules=\"rules\" ref=\"addApiProjectFormRef\">\r\n                <el-form-item label=\"项目名称\" label-width=\"100px\" prop=\"api_project_name\">\r\n                    <el-input v-model=\"addApiProjectData.api_project_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"项目描述\" label-width=\"100px\" prop=\"describe\">\r\n                    <el-input type=\"textarea\" v-model=\"addApiProjectData.describe\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addApiProjectdialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addApiTestProject\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"编辑项目\" :visible.sync=\"editApiProjectdialogFormVisible\">\r\n            <el-form :model=\"editApiProjectData\" :rules=\"rules\" ref=\"editProjectFormRef\">\r\n                <el-form-item label=\"项目名称\" label-width=\"100px\" prop=\"api_project_name\">\r\n                    <el-input v-model=\"editApiProjectData.api_project_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"项目描述\" label-width=\"100px\" prop=\"describe\">\r\n                    <el-input type=\"textarea\" v-model=\"editApiProjectData.describe\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editApiProjectdialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editProject\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <div>\r\n            <el-table\r\n                    :data=\"tableData\"\r\n                    style=\"width: 100%\">\r\n                <!--                    :default-sort = \"{prop: 'date', order: 'descending'}\">-->\r\n                <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"id\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_project_name\"\r\n                        label=\"项目名称\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"describe\"\r\n                        label=\"项目描述\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"updata_time\"\r\n                        label=\"更新时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"create_time\"\r\n                        label=\"创建时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                @click=\"editApiProjectPopup(scope.row)\">编辑</el-button>\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteProjectPopup(scope.row)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {getApiProjectRequest, addApiProjectRequest, getSingleApiProjectRequest, updateSingleApiProjectRequest, deleteSingleApiProjectRequest} from \"../../../api/apiProject\";\r\n    export default {\r\n        name: 'apiProject',\r\n        // props: {\r\n        //     uiProject: Object,\r\n        // },\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n\r\n                page: {\r\n                    page: 1,\r\n                    total: 0,\r\n                    size: 10,\r\n\r\n                },\r\n                addApiProjectdialogFormVisible: false,\r\n                editApiProjectdialogFormVisible: false,\r\n\r\n                addApiProjectData: {\r\n                    api_project_name: \"\",\r\n                    describe: \"\"\r\n                },\r\n                editApiProjectData: {\r\n                    api_project_name: \"\",\r\n                    describe: \"\",\r\n                    id: 0,\r\n                },\r\n                apiProjectId: \"\",\r\n                apiProjectData: \"\",\r\n\r\n                rules: {\r\n                    api_project_name: [\r\n                        {required: true, message: '请输入名称', trigger: 'blur'},\r\n                    ],\r\n                    description: [\r\n                        {required: true, message: '请输入描述', trigger: 'blur'},\r\n                    ],\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n\r\n\r\n            formatter(row, column) {\r\n                return row.address;\r\n            },\r\n            handleEdit(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleDelete(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleSizeChange(size) {\r\n                this.page.size = size;\r\n                this.getApiProjectFun()\r\n            },\r\n            handleCurrentChange(index) {\r\n                this.page.page = index;\r\n                this.getApiProjectFun()\r\n            },\r\n\r\n            //获取所有API项目列表\r\n            getApiProjectFun() {\r\n                let req = {\r\n                    page: this.page.page,\r\n                    size: this.page.size,\r\n                };\r\n                getApiProjectRequest(req).then(data => {\r\n                    console.log(data);\r\n                    if (true === data.data.success) {\r\n                        this.tableData = data.data.data;\r\n                        this.page.total = data.data.data.total;\r\n                        this.page.page = data.data.data.page;\r\n                        this.page.size = data.data.data.size;\r\n\r\n                    } else {\r\n                        this.$message.info(\"获取接口失败\")\r\n                    }\r\n                })\r\n            },\r\n\r\n            // 添加API测试项目\r\n            addApiTestProject() {\r\n                let req = JSON.parse(JSON.stringify(this.addApiProjectData));\r\n\r\n                this.$refs.addApiProjectFormRef.validate((valid) => {\r\n                    if (valid) { // 代表校验通过\r\n                        addApiProjectRequest(req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getApiProjectFun();\r\n                                this.addApiProjectdialogFormVisible = false;\r\n                                this.$message.info(\"创建项目成功\")\r\n                            } else {\r\n                                this.$message.info(\"创建项目失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n\r\n            // 添加项目 弹窗\r\n            addProjectPopup(){\r\n                this.addApiProjectData = {\r\n                    api_project_name: \"\",\r\n                    describe: \"\",\r\n                };\r\n                this.addApiProjectdialogFormVisible=true;\r\n            },\r\n\r\n            handleNodeClick(data) {\r\n                this.currentServiceId = data.id;\r\n            },\r\n\r\n\r\n            //编辑项目\r\n            editProject(){\r\n                let req = JSON.parse(JSON.stringify(this.editApiProjectData));\r\n\r\n                this.$refs.editProjectFormRef.validate((valid) => {\r\n\r\n                    console.log(this.apiProjectId);\r\n                    if (valid) { // 代表校验通过\r\n                        updateSingleApiProjectRequest(this.apiProjectId, req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getApiProjectFun();\r\n                                this.editApiProjectdialogFormVisible = false;\r\n                                this.$message.info(\"编辑项目成功\")\r\n                            } else {\r\n                                this.$message.info(\"编辑项目失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            //编辑项目弹窗并获取单个项目\r\n            editApiProjectPopup(data){\r\n\r\n                this.apiProjectId = data.id;\r\n                this.apiProjectData = data;\r\n                this.editApiProjectdialogFormVisible=true;\r\n\r\n                console.log(this.apiProjectId);\r\n                console.log(this.apiProjectData);\r\n\r\n                getSingleApiProjectRequest(this.apiProjectId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.editApiProjectData.api_project_name = data.data.data.api_project_name;\r\n                            this.editApiProjectData.describe = data.data.data.describe;\r\n                        } else {\r\n                            this.$message.info(\"获取接口失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n            //删除单个项目\r\n            deleteProjectPopup(data){\r\n\r\n                this.apiProjectId = data.id;\r\n                this.apiProjectData = data;\r\n\r\n                console.log(this.apiProjectId);\r\n                console.log(this.apiProjectData);\r\n\r\n                deleteSingleApiProjectRequest(this.apiProjectId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.getApiProjectFun();\r\n                            this.$message.info(\"删除项目成功\")\r\n\r\n                        } else {\r\n                            this.$message.info(\"删除项目失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n        },\r\n        created() {\r\n            this.getApiProjectFun();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n</style>"]}]}