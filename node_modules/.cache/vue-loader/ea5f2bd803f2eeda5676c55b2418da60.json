{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\apiTestCase\\addOrEditApiTestCase.vue?vue&type=template&id=4f43b83e&scoped=true&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\apiTestCase\\addOrEditApiTestCase.vue","mtime":1636512706077},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}