{"remainingRequest":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueAutomatedTestPlatform\\src\\components\\page\\performanceAutomation\\performanceScript\\newPerformanceReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VueAutomatedTestPlatform\\src\\components\\page\\performanceAutomation\\performanceScript\\newPerformanceReport.vue","mtime":1652877133460},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["newPerformanceReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"newPerformanceReport.vue","sourceRoot":"src/components/page/performanceAutomation/performanceScript","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> 性能测试项目\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试项目</el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试脚本</el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试报告</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <el-row>\r\n            <el-button @click=\"performanceReportList\">返回</el-button>\r\n        </el-row>\r\n        <el-row>\r\n            <el-button type=\"primary\" plain @click=reportList style=\"margin-top: 20px;\">报告对比</el-button>\r\n        </el-row>\r\n        <el-dialog title=\"报告列表\" :visible.sync=\"report_dialog\">\r\n            <el-table :data=\"report_data\"  @selection-change=\"check_data_report\">\r\n                <el-table-column\r\n                    type=\"selection\"\r\n                    width=\"55\">\r\n                </el-table-column>\r\n                <el-table-column property=\"performance_report_id\" label=\"id\" width=\"150\"></el-table-column>\r\n                <el-table-column property=\"performance_script_report_name\" label=\"测试报告名称\" width=\"200\"></el-table-column>\r\n                <el-table-column property=\"pressure_test_content\" label=\"压测内容\" width=\"200\"></el-table-column>\r\n            </el-table>\r\n            <el-button  @click=reportCompared >确定</el-button>\r\n            <el-button  @click=cancelReportList >取消</el-button>\r\n        </el-dialog>\r\n\r\n        <div v-for=\"(item,index) in chartList\" :key=\"index\" style=\"top: 20px;margin-top: 20px;\">\r\n            <div :id=\"`chart${index}`\" style=\"width: 90.7%;height: 70vh;\"></div>\r\n        </div>\r\n        <div v-for=\"item in tableData\">\r\n            <el-table\r\n                :data=\"item.report_list\"\r\n                style=\"width: 90.7%; margin-top: 20px;\"\r\n                :header-cell-style=\"{textAlign: 'center'}\">\r\n                <el-table-column\r\n                    label=\"测试报告内容\"\r\n                    prop=\"test_report_name\"\r\n                    width=\"100\">\r\n                    <el-table-column\r\n                        prop=\"test_report_name\"\r\n                        label=\"测试报告名称\"\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"pressure_test_content\"\r\n                        label=\"压测内容\"\r\n                        width=\"120\">\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Requests\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"requests_label\"\r\n                        label=\"label\"\r\n                        width=\"120\">\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Executions(执行)\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"samples\"\r\n                        label=\"请求数量\"\r\n                        width=\"80\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_error\"\r\n                        label=\"失败率\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_error> 0 + ('%')\" style=\"color:red\">{{ scope.row.api_error }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_error }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"响应时间(ms)\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"api_average\"\r\n                        label=\"平均响应\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_average>=8000\" style=\"color:red\">{{ scope.row.api_average }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_average }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_min\"\r\n                        label=\"最小响应\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_min>=8000\" style=\"color:red\">{{ scope.row.api_min }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_min }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_max\"\r\n                        label=\"最大响应\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_max>=8000\" style=\"color:red\">{{ scope.row.api_max }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_max }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_median\"\r\n                        label=\"中位数\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_median>=8000\" style=\"color:red\">{{ scope.row.api_median }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_median }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_90\"\r\n                        label=\"90%\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_90>=8000\" style=\"color:red\">{{ scope.row.api_90 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_90 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_95\"\r\n                        label=\"95%\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_95>=8000\" style=\"color:red\">{{ scope.row.api_95 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_95 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_99\"\r\n                        label=\"99%\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_99>=8000\" style=\"color:red\">{{ scope.row.api_99 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_99 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    label=\"Throughput\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"api_transactions\"\r\n                        label=\"吞吐量(s)\"\r\n                        width=\"100\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_transactions<=10\" style=\"color:red\">{{ scope.row.api_transactions }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_transactions }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Network(KB/sec)\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"api_received\"\r\n                        label=\"每秒接收数据量\"\r\n                        width=\"120\">\r\n                    </el-table-column>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n        <div v-for=\"item in errorTableData\">\r\n            <el-table\r\n                :data=\"item.jtl_error\"\r\n                style=\"width: 90.7%; margin-top: 20px;\"\r\n                :header-cell-style=\"{textAlign: 'center'}\"\r\n                :cell-style=\"{ textAlign: 'center' }\">\r\n                <el-table-column\r\n                    prop=\"jtl_error\"\r\n                    label=\"是否存在异常\"\r\n                >\r\n                    <template slot-scope=\"scope\">\r\n                        <span v-if=\"scope.row.jtl_error.indexOf('暂无异常') !== -1\" style=\"color: #37B328\">{{ scope.row.jtl_error }}</span>\r\n                        <span v-else style=\"color:red\">{{ scope.row.jtl_error }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { newPerformanceScriptReportRequest, performanceScriptReportRequest } from '../../../../api/performance/performanceScript';\r\nimport  * as  echarts from 'echarts'\r\nexport default {\r\n    name: 'newPerformanceReport.vue',\r\n    props: ['performanceScriptReportData', 'performanceScriptId'],\r\n    data() {\r\n        return {\r\n            chartList: [{}],\r\n            chartList2: [{}],\r\n\r\n            report_dialog: false,\r\n            report_data: [],\r\n            check_data: [],\r\n            errorTableData: [\r\n                {\r\n                    jtl_error:[\r\n                        {\r\n\r\n                            jtl_error: '',\r\n                        }\r\n                    ],\r\n\r\n                }\r\n\r\n            ],\r\n            tableData: [{\r\n                report_list:[\r\n                    {\r\n                        test_report_name: '',\r\n                        requests_label: '',\r\n                        samples: '',\r\n                        api_error:'',\r\n                        api_min: '',\r\n                        api_max: '',\r\n                        api_median: '',\r\n                        api_90: '',\r\n                        api_95: '',\r\n                        api_99: '',\r\n                        api_transactions: '',\r\n                        api_received: '',\r\n                        api_average: '',\r\n                        pressure_test_content: ''\r\n                    }\r\n                ],\r\n\r\n            },\r\n            ],\r\n            performanceReportScriptId: \"\",\r\n            performance_report_id_data: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getPerformanceReportFun();\r\n    },\r\n    methods: {\r\n        initChart() {\r\n            this.chartList.forEach((val, index) => {\r\n                const myChart = this.$echarts.init( document.getElementById(`chart${index}`), 'dark')\r\n                myChart.setOption(this.chartList[index])\r\n            })\r\n        },\r\n\r\n        // 获取已选择报告\r\n        check_data_report(val){\r\n            this.check_data = val\r\n        },\r\n\r\n        // 报告对比\r\n        reportCompared(){\r\n            this.report_dialog = false\r\n            const loading = this.$loading({\r\n                lock: true,\r\n                text: 'Loading',\r\n                spinner: 'el-icon-loading',\r\n                background: 'rgba(0, 0, 0, 0.7)'\r\n            });\r\n\r\n            newPerformanceScriptReportRequest(this.check_data).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.tableData = data.data.data;\r\n                    this.chartList2 = data.data.data\r\n                    this.errorTableData = data.data.data;\r\n\r\n                    const response_time_varies_over_time = []\r\n\r\n                    for (var i = 0; i < this.chartList2.length; i++) {\r\n                        response_time_varies_over_time.push(this.chartList2[i].response_time_varies_over_time)\r\n                    }\r\n                    this.chartList = response_time_varies_over_time\r\n                    if (this.chartList.length > 0) {\r\n                        this.$nextTick(() => {\r\n                            this.initChart()\r\n                        })\r\n                    }\r\n                    loading.close();\r\n\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                    loading.close();\r\n\r\n                }\r\n            });\r\n\r\n        },\r\n        // 关闭报告列表\r\n        cancelReportList(){\r\n            this.report_dialog = false\r\n        },\r\n        // 报告列表\r\n        reportList(){\r\n            this.report_dialog = true\r\n            performanceScriptReportRequest(this.performanceReportScriptId).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.report_data = data.data.data;\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        // 返回性能脚本列表\r\n        performanceReportList(){\r\n            this.$parent.performanceReportList();\r\n        },\r\n\r\n        // 获取测试报告\r\n        getPerformanceReportFun() {\r\n            const loading = this.$loading({\r\n                lock: true,\r\n                text: 'Loading',\r\n                spinner: 'el-icon-loading',\r\n                background: 'rgba(0, 0, 0, 0.7)'\r\n            });\r\n            newPerformanceScriptReportRequest(this.performanceScriptReportData).then(data => {\r\n                if (true === data.data.success) {\r\n                    console.log(data.data.data)\r\n                    this.tableData = data.data.data;\r\n                    this.errorTableData = data.data.data;\r\n                    this.chartList2 = data.data.data;\r\n                    const response_time_varies_over_time = []\r\n\r\n                    for (var i = 0; i < this.chartList2.length; i++) {\r\n                        response_time_varies_over_time.push(this.chartList2[i].response_time_varies_over_time)\r\n                    }\r\n                    this.chartList = response_time_varies_over_time\r\n                    if (this.chartList.length > 0) {\r\n                        this.$nextTick(() => {\r\n                            this.initChart()\r\n                        })\r\n                    }\r\n                    loading.close();\r\n\r\n\r\n                } else {\r\n                    this.$message.error(data.data.error.message);\r\n                    loading.close();\r\n\r\n                }\r\n            });\r\n        },\r\n\r\n    },\r\n    created() {\r\n        this.performance_report_id_data = this.performanceScriptReportData\r\n        this.performanceReportScriptId = this.performanceScriptId\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}