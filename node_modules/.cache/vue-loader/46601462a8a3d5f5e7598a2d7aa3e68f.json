{"remainingRequest":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test_platform_vue\\src\\components\\page\\apiTestCase\\addOrEditApiTestCase.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test_platform_vue\\src\\components\\page\\apiTestCase\\addOrEditApiTestCase.vue","mtime":1638177430803},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\test_platform_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\test_platform_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addOrEditApiTestCase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA","file":"addOrEditApiTestCase.vue","sourceRoot":"src/components/page/apiTestCase","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API项目\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API模块</el-breadcrumb-item>\r\n                <el-breadcrumb-item>API测试用例</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <el-form ref=\"apiTestCaseFormRef\" :model=\"apiTestCaseForm\" label-width=\"120px\" size=\"medium\">\r\n            <el-form-item label=\"API测试用例\">\r\n                <el-input v-model=\"apiTestCaseForm.api_test_case_name\"  class=\"api_test_case_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"API接口文档地址\">\r\n                <el-input v-model=\"apiTestCaseForm.api_documentation\"  class=\"api_documentation\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"域名\">\r\n                <el-select  v-model=\"api_environment\"  placeholder=\"请选择域名\"  id=\"selectApiEnvironment\" @change=\"getSelectApiEnvironmentFun\">\r\n                    <el-option v-for=\"item in environmentSelect\" :key=\"item.id\" :value=\"item.id\" :label=\"item.api_environment_name\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"请求地址\">\r\n                <el-input placeholder=\"请输入请求地址\" v-model=\"apiTestCaseForm.api_url\" class=\"input-with-select\">\r\n                    <el-select v-model=\"api_method\" slot=\"prepend\" placeholder=\"请选择\" class=\"address\">\r\n                        <el-option v-for=\"option in api_method_options\" :key=\"option.value\" :label=\"option.text\" :value=\"option.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-input>\r\n                <el-button @click=\"SendRequest\">发送请求</el-button>\r\n                <el-drawer\r\n                    title=\"请求结果!\"\r\n                    :visible.sync=\"drawer\"\r\n                    size=\"60%\">\r\n                    <el-tabs style=\"height: 300px;width: 1620px;margin-left: 8px; \" >\r\n                        <el-tab-pane label=\"请求信息\">\r\n                            <el-collapse v-model=\"activeNames\" style=\"height: 400px; width: 500px;\">\r\n                                <el-collapse-item title=\"请求地址\">\r\n                                    <p>{{requestsForm.requests_url}}</p>\r\n                                </el-collapse-item>\r\n\r\n                                <el-collapse-item title=\"headers\" name=\"2\" style=\"width: 500px;\">\r\n<!--                                    <el-input-->\r\n<!--                                        type=\"textarea\"-->\r\n<!--                                        :autosize=\"{ minRows: 10, maxRows: 15}\"-->\r\n<!--                                        v-model=\"requestsForm.requests_headers\"-->\r\n<!--                                        :readonly=\"true\"-->\r\n<!--                                        style=\"min-height: 54px;height: 222px;width: 532px;\">-->\r\n<!--                                    </el-input>-->\r\n                                    <json-viewer :value=\"requestsForm.requests_headers\" :expand-depth=5 copyable style=\"overflow-y: auto;position: absolute;width: 500px;height: 100%;\"></json-viewer>\r\n\r\n                                </el-collapse-item>\r\n                                <el-collapse-item title=\"body\" name=\"3\" style=\"width: 500px;\">\r\n                                    <json-viewer :value=\"requestsForm.requests_payload\" :expand-depth=5 copyable style=\"overflow-y: auto;position: absolute;width: 500px;height: 100%;\"></json-viewer>\r\n                                    <!--                                    <pre>{{JSON.stringify(requestsForm.requests_payload,  null, 4)}}</pre>-->\r\n                                </el-collapse-item>\r\n                            </el-collapse>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane label=\"响应信息\">\r\n                            <el-collapse v-model=\"activeNames\" style=\"height: 500px; width: 500px;\">\r\n                                <el-collapse-item title=\"响应结果\" name=\"1\" style=\"width: 500px;\">\r\n                                    <!--                  <el-input-->\r\n                                    <!--                      type=\"textarea\"-->\r\n                                    <!--                      :autosize=\"{ minRows: 9, maxRows: 10}\"-->\r\n                                    <!--                      :readonly=\"true\"-->\r\n                                    <!--                      placeholder=\"请输入内容\"-->\r\n                                    <!--                      v-model=\"requestsForm.response_message\"-->\r\n                                    <!--                      style=\"min-height: 54px;height: 222px;width: 532px;\">-->\r\n                                    <!--                  </el-input>-->\r\n<!--                                    <textarea style=\"margin: 0px; width: 498px; height: 394px;\">{{JSON.parse(requestsForm.response_message,  null, 4)   }}</textarea>-->\r\n                                    <json-viewer :value=\"requestsForm.response_message\" :expand-depth=5 copyable style=\"overflow-y: auto;position: absolute;width: 500px;height: 100%;\"></json-viewer>\r\n\r\n                                    <!--                  <pre class=\"pre_json\">{{JSON.parse(requestsForm.response_message,  null, 4)   }}</pre>-->\r\n                                </el-collapse-item>\r\n                                <el-collapse-item title=\"响应时间\" name=\"2\" style=\"width: 500px;\">\r\n                                    <p>{{requestsForm.response_time}}</p>\r\n                                </el-collapse-item>\r\n                                <el-collapse-item title=\"状态码\" name=\"3\" style=\"width: 500px;\">\r\n                                    <p>{{requestsForm.requests_status_code}}</p>\r\n                                </el-collapse-item>\r\n                            </el-collapse>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane label=\"断言结果\">\r\n                            <el-collapse v-model=\"activeNames\" style=\"width: 500px;\">\r\n                                <el-collapse-item title=\"断言结果\" name=\"1\">\r\n                                    <p>{{requestsForm.api_assert}}</p>\r\n                                </el-collapse-item>\r\n\r\n                            </el-collapse>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane label=\"参数提取\" >\r\n                            <el-collapse v-model=\"activeNames\" style=\"width: 500px;\">\r\n                                <el-collapse-item title=\"参数提取\" name=\"1\">\r\n                                    <!--                  <textarea style=\"margin: 0px; height: 240px; width: 385px;\">{{requestsForm.api_variable_results}}</textarea>-->\r\n                                    <json-viewer :value=\"requestsForm.api_variable_results\" :expand-depth=5></json-viewer>\r\n\r\n                                </el-collapse-item>\r\n                            </el-collapse>\r\n                        </el-tab-pane>\r\n                    </el-tabs>\r\n                </el-drawer>\r\n            </el-form-item>\r\n            <el-form-item label=\"参数类型\">\r\n                <el-radio-group v-model=\"apiTestCaseForm.api_parameter_types\">\r\n                    <el-radio :label=\"1\" value=\"1\">form-data</el-radio>\r\n                    <el-radio :label=\"2\" value=\"2\">JSON</el-radio>\r\n                    <el-radio :label=\"3\" value=\"3\">x-www-form-urlencoded</el-radio>\r\n                    <el-radio :label=\"4\" value=\"4\">none</el-radio>\r\n                </el-radio-group>\r\n            </el-form-item>\r\n\r\n            <el-tabs :tab-position=\"tabPosition\" style=\"height: 300px;width: 1620px;margin-left: 120px;\">\r\n                <el-tab-pane label=\"Header请求头\">\r\n                    <el-input type=\"textarea\" placeholder=\"请输入JSON格式参数\" :rows=\"10\" v-model=\"apiTestCaseForm.api_headers\" style=\"min-height: 31px;width: 532px;height: 212px;\"></el-input>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"参数\">\r\n\r\n                    <el-input type=\"textarea\" placeholder=\"请输入JSON格式参数\" :rows=\"10\" v-model=\"apiTestCaseForm.api_parameter_body\" style=\"min-height: 31px;width: 532px;height: 212px;\"></el-input>\r\n\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"断言\">\r\n                    <div>\r\n                        <el-table\r\n                            :data=\"assertionsData\"\r\n                            style=\"width: 45%\"\r\n                            max-height=\"200\">\r\n\r\n                            <el-table-column prop=\"api_assert_type\" label=\"断言类型\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-select v-model=\"scope.row.api_assert_type\" placeholder=\"请选择\">\r\n                                        <el-option v-for=\"api_assert_type_option in api_assert_type_options\" :key=\"api_assert_type_option.value\" :label=\"api_assert_type_option.text\" :value=\"api_assert_type_option.value\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </template>\r\n\r\n                            </el-table-column>\r\n                            <el-table-column label=\"数据库\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-select v-model=\"scope.row.database_options\" placeholder=\"请选择数据库\"  @change=\"getSelectDatabaseFun\" :clearable=\"true\">\r\n                                        <el-option v-for=\"database_option in database_options\" :key=\"database_option.id\" :label=\"database_option.api_database_title\" :value=\"database_option.id\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column prop=\"database_sql\" label=\"数据库语句\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-input v-model=\"scope.row.database_sql\" controls-position=\"right\" ></el-input>\r\n                                </template>\r\n                            </el-table-column>\r\n\r\n                            <el-table-column prop=\"api_assert_text\" label=\"断言(Value)\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-input v-model=\"scope.row.api_assert_text\" controls-position=\"right\" ></el-input>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                    </div>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"参数提取\">\r\n                    <div>\r\n                        <el-table\r\n                            :data=\"apiParameterExtractionData\"\r\n                            style=\"width: 90%\"\r\n                            max-height=\"200\">\r\n\r\n                            <el-table-column prop=\"api_value_variable\" label=\"提取表达式\" width=\"500\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-input v-model=\"scope.row.api_value_variable\" placeholder=\"请用 英文‘点’逐层 '.' \" controls-position=\"right\" style=\"width: 453px\" ></el-input>\r\n                                </template>\r\n                            </el-table-column>\r\n\r\n                            <el-table-column prop=\"api_key_variable\" label=\"变量名称\" width=\"500\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-input v-model=\"scope.row.api_key_variable\" placeholder=\"请用  ${xxx}  命名\" controls-position=\"right\" style=\"width: 453px\" ></el-input>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column prop=\"api_variable_results\" label=\"变量结果\" width=\"250px\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-input v-model=\"scope.row.api_variable_results\" placeholder=\"变量结果\" controls-position=\"right\" style=\"width: 200px\" ></el-input>\r\n                                </template>\r\n                            </el-table-column>\r\n\r\n                            <el-table-column label=\"操作\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button @click=\"AddParameterExtractionRow\">添加行</el-button>\r\n                                    <el-button size=\"mini\" type=\"danger\" @click=\"DeleteParameterExtraction(scope.$index, apiParameterExtractionData)\" style=\"margin-left: 0px; margin-right: 13px; padding-right: 28px; text-align: center; \">删除</el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                    </div>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n            <el-form-item size=\"large\">\r\n                <el-button type=\"primary\" @click=\"saveApiTestCase\">保存</el-button>\r\n                <el-button @click=\"cancelSaveApiTestCase\">取消</el-button>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n\r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport {getApiEnvironmentRequest } from '../../../api/apiEnvironment';\r\nimport {getDatabaseRequest} from '../../../api/apiDatabase';\r\n\r\nimport {addApiTestCaseRequest, updateSingleApiTestCaseRequest, getSingleApiTestCaseRequest, deBugApiTestCaseRequest} from '../../../api/apiTestCase';\r\nimport Vue from 'vue'\r\nimport JsonViewer from 'vue-json-viewer'\r\nVue.use(JsonViewer)\r\n\r\n\r\nexport default {\r\n    name: 'addOrEditApiTestCase',\r\n    // type 用来标识是编辑还是创建\r\n    props:['type', 'apiTestCaseId', 'apiTestCaseData', 'apiModuleId'],\r\n    data() {\r\n        return {\r\n            drawer: false,\r\n            gridData: [],\r\n            api_method_options: [\r\n                { text: 'GET', value: 1 },\r\n                { text: 'POST', value: 2 },\r\n                { text: 'PUT', value: 3 },\r\n                { text: 'DELETE', value: 4 },\r\n            ],\r\n            api_method: '',\r\n            api_module_id: '',\r\n\r\n\r\n            api_assert_type_options: [\r\n                { text: '包含',\r\n                    value: 1\r\n                },\r\n                { text: '匹配',\r\n                    value: 2\r\n                },\r\n                { text: '数据库校验',\r\n                    value: 3\r\n                },\r\n                { text: '状态码',\r\n                    value: 4\r\n                },\r\n            ],\r\n            database_options: [],\r\n\r\n            api_environment: '',\r\n            api_environment_options:[\r\n                {\r\n                    api_environment_describe:'',\r\n                    api_environment_name: '',\r\n                    api_title: '',\r\n                    id: ''\r\n\r\n                }\r\n            ],\r\n\r\n            requestsForm: {\r\n                requests_url: \"\",\r\n                requests_headers: \"\",\r\n                requests_payload: \"null\",\r\n                requests_status_code: \"\",\r\n                response_message: \"null\",\r\n                response_time: \"\",\r\n                api_assert: \"null\",\r\n                api_assert_type: \"\",\r\n                api_variable_results: [\r\n                    {\r\n                        api_variable_results: \"\"\r\n\r\n                    }\r\n                ],\r\n\r\n            },\r\n\r\n\r\n            apiTestCaseForm: {\r\n                api_test_case_name: \"\",\r\n                api_documentation: \"\",\r\n                api_url: \"\",\r\n                api_parameter_types: 2,\r\n                // api_headers: \"{\\\"Content-Type\\\": \\\"application/json\\\"}\",\r\n                api_headers: \"{\\\"Content-Type\\\": \\\"application/json\\\",\\n\" +\r\n                    \"\\\"authorization\\\": \\\"Bearer ${Token}\\\"\\n\" +\r\n                    \"}\",\r\n                api_parameter_body: \"{}\",\r\n                api_test_case_id: \"\",\r\n            },\r\n            tabPosition: 'top',\r\n            environmentSelect: [],\r\n\r\n\r\n            // 断言\r\n            assertionsData:[\r\n                {\r\n                    api_assert_type: 4,\r\n                    api_assert_text: \"200\",\r\n                    database_sql: '',\r\n                    database_options: '',\r\n\r\n                }\r\n            ],\r\n            api_assert_text: '',\r\n\r\n            apiParameterExtractionData:[\r\n                {\r\n                    api_value_variable: \"\",\r\n                    api_key_variable: \"\",\r\n                    api_variable_results: \"\"\r\n\r\n                }\r\n            ],\r\n            activeNames: \"\",\r\n\r\n\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        saveApiTestCase() {\r\n            if ('add' === this.type){\r\n                this.addApiTestCase()\r\n            }else {\r\n                this.editApiTestCase()\r\n            }\r\n        },\r\n\r\n        // 取消\r\n        cancelSaveApiTestCase(){\r\n            this.$parent.cancelSaveApiTestCase();\r\n\r\n        },\r\n\r\n        //添加Api测试用例\r\n        addApiTestCase(){\r\n            let req = JSON.parse(JSON.stringify(this.apiTestCaseForm));\r\n            req.api_method = this.api_method;\r\n            req.api_assert_type = this.assertionsData[0].api_assert_type;\r\n            req.api_assert_text = this.assertionsData[0].api_assert_text;\r\n            req.database_sql = this.assertionsData[0].database_sql;\r\n            req.dataBase_id = this.assertionsData[0].database_options;\r\n            req.api_parameter_extraction = this.apiParameterExtractionData\r\n            req.api_environment_id = this.api_environment\r\n            req.api_module_id = this.apiModuleId\r\n\r\n            console.log(\"这是获取到的\",req);\r\n            this.$refs.apiTestCaseFormRef.validate((valid) => {\r\n                console.log(this.$refs.apiTestCaseFormRef.validate((valid)));\r\n                if (valid) { // 代表校验通过\r\n                    addApiTestCaseRequest(req).then(data => {\r\n                        console.log(data)\r\n                        if (true === data.data.success) {\r\n                            this.$message.success(\"添加Api测试用例成功\")\r\n                            this.$parent.saveApiTestCase();\r\n\r\n                        } else {\r\n                            this.$message.error(data.data.error.message)\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n\r\n            }\r\n            );\r\n\r\n        },\r\n\r\n\r\n\r\n\r\n        //编辑Api测试用例\r\n        editApiTestCase(){\r\n            let req = JSON.parse(JSON.stringify(this.apiTestCaseForm));\r\n            req.api_method = this.api_method;\r\n            req.api_assert_type = this.assertionsData[0].api_assert_type;\r\n            req.api_assert_text = this.assertionsData[0].api_assert_text;\r\n            req.api_assert_text = this.assertionsData[0].api_assert_text;\r\n            req.database_sql = this.assertionsData[0].database_sql;\r\n            req.dataBase_id = this.assertionsData[0].database_options;\r\n            req.api_environment_id = this.api_environment\r\n            req.api_module_id =  this.api_module_id\r\n            req.api_parameter_extraction = this.apiParameterExtractionData\r\n\r\n            console.log(\"这是获取到的\",req);\r\n            this.$refs.apiTestCaseFormRef.validate((valid) => {\r\n                if (valid) { // 代表校验通过\r\n                    console.log(req);\r\n                    updateSingleApiTestCaseRequest(this.apiTestCaseData.id, req).then(data => {\r\n                        console.log(data)\r\n                        if (true === data.data.success) {\r\n                            this.$message.success(\"编辑Api测试用例成功\")\r\n\r\n                            this.$parent.saveApiTestCase();\r\n\r\n                        } else {\r\n                            this.$message.error(data.data.error.message)\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        // 获取单个API测试用例\r\n        getSingleApiTestCaseFun() {\r\n            getSingleApiTestCaseRequest(this.apiTestCaseForm.api_test_case_id).then(data => {\r\n                if (true === data.data.success) {\r\n                    let apiTestCase = data.data.data;\r\n                    let api_parameter_extraction = data.data.data.api_parameter_extraction\r\n                    this.apiTestCaseForm = {...apiTestCase }\r\n                    this.api_method = data.data.data.api_method\r\n\r\n                    this.assertionsData = [\r\n                        {\r\n                            api_assert_type : apiTestCase.api_assert_type,\r\n                            api_assert_text : apiTestCase.api_assert_text,\r\n                            database_sql : apiTestCase.database_sql,\r\n                            database_options : apiTestCase.dataBase,\r\n\r\n\r\n                        }\r\n                    ]\r\n                    this.database_id = apiTestCase.database,\r\n\r\n                    this.apiParameterExtractionData = JSON.parse(JSON.stringify(api_parameter_extraction));\r\n                    this.database_sql = data.data.data.database_sql\r\n                    this.api_environment = data.data.data.api_environment\r\n                    this.api_module_id = data.data.data.api_module\r\n\r\n\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n        },\r\n\r\n        //获取数据库\r\n        getSelectDatabaseFun(){\r\n            getDatabaseRequest().then(data =>{\r\n                console.log(data);\r\n                if (true === data.data.success) {\r\n                    this.database_options = data.data.data;\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n\r\n\r\n        },\r\n\r\n\r\n        // 获取域名\r\n        getSelectApiEnvironmentFun(){\r\n            getApiEnvironmentRequest().then(data =>{\r\n                console.log(data);\r\n                if (true === data.data.success) {\r\n\r\n                    this.environmentSelect = data.data.data;\r\n\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n\r\n\r\n        },\r\n\r\n        //添加参数提取行\r\n        AddParameterExtractionRow(index, row){\r\n            this.apiParameterExtractionData.push(\r\n                {\r\n                    api_value_variable: \"\",\r\n                    api_key_variable: \"\",\r\n                    api_variable_results: \"\"\r\n                }\r\n            )\r\n\r\n        },\r\n\r\n        //删除参数提取行\r\n        DeleteParameterExtraction(index, rows){\r\n            rows.splice(index, 1);\r\n        },\r\n\r\n        // 发送请求\r\n        SendRequest(){\r\n            let req = JSON.parse(JSON.stringify(this.apiTestCaseForm));\r\n            req.api_method = this.api_method;\r\n            req.api_assert_type = this.assertionsData[0].api_assert_type;\r\n            req.api_assert_text = this.assertionsData[0].api_assert_text;\r\n            req.api_environment_id = this.api_environment\r\n            req.api_parameter_extraction = this.apiParameterExtractionData\r\n            // req.api_value_variable = this.apiParameterExtractionData;\r\n            deBugApiTestCaseRequest(req).then(data =>{\r\n                console.log(data);\r\n                if (true === data.data.success) {\r\n                    this.$message.success(\"调试Api测试用例成功\")\r\n                    console.log(\"这是请求url\",data.data.data.api_url)\r\n                    // this.jsonData = JSON.stringify(data.data.data.response_message, null, 4);\r\n                    this.jsonData = data.data.data.response_message\r\n                    console.log(\"这是请求json\",data.data.data.api_variable_results)\r\n\r\n                    this.requestsForm.requests_url = data.data.data.api_url\r\n                    this.requestsForm.requests_headers = data.data.data.api_header\r\n                    this.requestsForm.requests_payload = data.data.data.api_body\r\n                    this.requestsForm.requests_status_code = data.data.data.api_code\r\n                    this.requestsForm.response_message = this.jsonData\r\n                    this.requestsForm.response_time = data.data.data.response_time\r\n                    this.requestsForm.api_assert = data.data.data.api_assert\r\n                    this.requestsForm.api_variable_results = data.data.data.api_parameter_extraction\r\n                    this.apiParameterExtractionData = this.requestsForm.api_variable_results\r\n\r\n\r\n                }\r\n                if (false === data.data.success){\r\n                    this.$message.error(data.data.error.message)\r\n                }\r\n            })\r\n\r\n\r\n            console.log(\"发送\")\r\n            this.drawer = true\r\n\r\n        },\r\n        handleClose(done) {\r\n            this.$confirm('确认关闭？')\r\n                .then(_ => {\r\n                    done();\r\n                })\r\n                .catch(_ => {});\r\n        },\r\n\r\n    },\r\n\r\n    created() {\r\n        console.log(this.apiTestCaseData)\r\n        if ('edit'===this.type){\r\n            this.getSelectApiEnvironmentFun()\r\n            this.getSelectDatabaseFun()\r\n            this.apiTestCaseForm.api_test_case_id =  this.apiTestCaseData.id\r\n\r\n            this.getSingleApiTestCaseFun()\r\n\r\n\r\n\r\n        }\r\n\r\n        if ('add'===this.type){\r\n            this.getSelectApiEnvironmentFun()\r\n            this.getSelectDatabaseFun()\r\n            console.log(\"这是模块id\", this.apiModuleId)\r\n        }\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_test_case_name{\r\n    width: 215px;\r\n}\r\n.address{\r\n    width: 100px;\r\n}\r\n.input-with-select{\r\n    width: 1000px;\r\n}\r\n.parameter{\r\n    width: 1000px;\r\n}\r\n.assertions{\r\n    width: 300px;\r\n}\r\n.requests_url{\r\n    background: #00d1b2;\r\n}\r\n.pre_json{\r\n    outline: 1px solid #ccc; padding: 5px; margin: 5px;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    width: 500px;\r\n    height: auto;\r\n\r\n\r\n}\r\n.api_documentation{\r\n    width: 500px;\r\n}\r\n\r\n\r\n\r\n\r\n</style>"]}]}