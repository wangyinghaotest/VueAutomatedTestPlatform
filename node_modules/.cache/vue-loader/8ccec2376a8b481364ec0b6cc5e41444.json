{"remainingRequest":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\performanceScript\\newPerformanceReport.vue?vue&type=style&index=0&id=497f09d8&scoped=true&lang=css&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\performanceScript\\newPerformanceReport.vue","mtime":1650875891894},{"path":"E:\\test-platform-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1650008435745},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1650008440985},{"path":"E:\\test-platform-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1650008439497},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sZWdlbmQ6ew0KDQogICAg44CA44CA44CA44CA44CA44CAc2hvdzogdHJ1ZSwNCg0KICAgIOOAgOOAgOOAgOOAgOOAgOOAgHRvcDoiNiUi77yMLy/kuI7kuIrmlrnnmoTot53nprsg5Y+v55m+5YiG5q+UJSDlj6/lg4/ntKBweA0KDQogICAg44CA44CA44CA44CAfSwNCg0K"},{"version":3,"sources":["newPerformanceReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyVA;;AAEA;;AAEA;;AAEA","file":"newPerformanceReport.vue","sourceRoot":"src/components/page/performanceScript","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> 性能测试项目\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试项目</el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试脚本</el-breadcrumb-item>\r\n                <el-breadcrumb-item>性能测试报告</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <el-row>\r\n            <el-button @click=\"performanceReportList\">返回</el-button>\r\n        </el-row>\r\n        <el-row>\r\n            <el-button type=\"primary\" plain @click=reportList style=\"margin-top: 20px;\">报告对比</el-button>\r\n        </el-row>\r\n        <el-dialog title=\"报告列表\" :visible.sync=\"report_dialog\">\r\n            <el-table :data=\"report_data\"  @selection-change=\"check_data_report\">\r\n                <el-table-column\r\n                    type=\"selection\"\r\n                    width=\"55\">\r\n                </el-table-column>\r\n                <el-table-column property=\"performance_report_id\" label=\"id\" width=\"150\"></el-table-column>\r\n                <el-table-column property=\"performance_script_report_name\" label=\"测试报告名称\" width=\"200\"></el-table-column>\r\n                <el-table-column property=\"pressure_test_content\" label=\"压测内容\" width=\"200\"></el-table-column>\r\n            </el-table>\r\n            <el-button  @click=reportCompared >确定</el-button>\r\n            <el-button  @click=cancelReportList >取消</el-button>\r\n        </el-dialog>\r\n\r\n        <div id=\"chartLineBox\" style=\"width: 80%;height: 70vh;\"> </div>\r\n\r\n\r\n        <div v-for=\"item in tableData\">\r\n            <el-table\r\n                :data=\"item.report_list\"\r\n                style=\"width: 83.4%; margin-top: 20px;\"\r\n                :header-cell-style=\"{textAlign: 'center'}\">\r\n                <el-table-column\r\n                    label=\"测试报告内容\"\r\n                    prop=\"test_report_name\"\r\n                    width=\"100\">\r\n                    <el-table-column\r\n                        prop=\"test_report_name\"\r\n                        label=\"测试报告名称\"\r\n                        width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"pressure_test_content\"\r\n                        label=\"压测内容\"\r\n                        width=\"120\">\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Requests\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"requests_label\"\r\n                        label=\"label\"\r\n                        width=\"120\">\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Executions(执行)\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"samples\"\r\n                        label=\"请求数量\"\r\n                        width=\"80\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_error\"\r\n                        label=\"失败率\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_error> 0 + ('%')\" style=\"color:red\">{{ scope.row.api_error }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_error }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"响应时间(ms)\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"api_average\"\r\n                        label=\"平均响应\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_average>=8000\" style=\"color:red\">{{ scope.row.api_average }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_average }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_min\"\r\n                        label=\"最小响应\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_min>=8000\" style=\"color:red\">{{ scope.row.api_min }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_min }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_max\"\r\n                        label=\"最大响应\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_max>=8000\" style=\"color:red\">{{ scope.row.api_max }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_max }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_median\"\r\n                        label=\"中位数\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_median>=8000\" style=\"color:red\">{{ scope.row.api_median }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_median }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_90\"\r\n                        label=\"90%\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_90>=8000\" style=\"color:red\">{{ scope.row.api_90 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_90 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_95\"\r\n                        label=\"95%\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_95>=8000\" style=\"color:red\">{{ scope.row.api_95 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_95 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_99\"\r\n                        label=\"99%\"\r\n                        width=\"80\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_99>=8000\" style=\"color:red\">{{ scope.row.api_99 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_99 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    label=\"Throughput\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"api_transactions\"\r\n                        label=\"吞吐量(s)\"\r\n                        width=\"100\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_transactions<=10\" style=\"color:red\">{{ scope.row.api_transactions }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_transactions }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Network(KB/sec)\"\r\n                    width=\"150\">\r\n                    <el-table-column\r\n                        prop=\"api_received\"\r\n                        label=\"每秒接收数据量\"\r\n                        width=\"120\">\r\n                    </el-table-column>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { newPerformanceScriptReportRequest, performanceScriptReportRequest } from '../../../api/performanceScript';\r\nimport  * as  echarts from 'echarts'\r\nexport default {\r\n    name: 'newPerformanceReport.vue',\r\n    props: ['performanceScriptReportData', 'performanceScriptId'],\r\n    data() {\r\n        return {\r\n            report_dialog: false,\r\n            report_data: [],\r\n            check_data: [],\r\n            tableData: [{\r\n                report_list:[\r\n                    {\r\n                    test_report_name: '',\r\n                    requests_label: '',\r\n                    samples: '',\r\n                    api_error:'',\r\n                    api_min: '',\r\n                    api_max: '',\r\n                    api_median: '',\r\n                    api_90: '',\r\n                    api_95: '',\r\n                    api_99: '',\r\n                    api_transactions: '',\r\n                    api_received: '',\r\n                    api_average: '',\r\n                    pressure_test_content: ''\r\n                }\r\n                ],\r\n\r\n            },\r\n            ],\r\n            performanceReportScriptId: \"\",\r\n            performance_report_id_data: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getPerformanceReportFun();\r\n\r\n        // this.chartLine = echarts.init(document.getElementById('chartLineBox'), 'dark');\r\n        // var myChart = echarts.init(chartDom, 'dark');\r\n\r\n\r\n        // 指定图表的配置项和数据\r\n        // const option = {\r\n        //     title: {\r\n        //         text: '响应时间随时间变化'\r\n        //     },\r\n        //     tooltip: {\r\n        //         trigger: 'axis'\r\n        //     },\r\n        //     legend: {\r\n        //         data: ['产品搜索', '推荐搜索词', '智能搜索', '词联想']\r\n        //     },\r\n        //     grid: {\r\n        //         left: '3%',\r\n        //         right: '4%',\r\n        //         bottom: '3%',\r\n        //         containLabel: true\r\n        //     },\r\n        //     toolbox: {\r\n        //         feature: {\r\n        //             saveAsImage: {}\r\n        //         }\r\n        //     },\r\n        //     xAxis: {\r\n        //         type: 'category',\r\n        //         data: ['33.06', '33.06', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        //     },\r\n        //     yAxis: {\r\n        //         type: 'value'\r\n        //     },\r\n        //     series: [\r\n        //         {\r\n        //             name: '产品搜索',\r\n        //             type: 'line',\r\n        //             data: ['', 132, '', 134, 90, 230, 210]\r\n        //         },\r\n        //         {\r\n        //             name: '推荐搜索词',\r\n        //             type: 'line',\r\n        //             data: [220, 182, 191, 234, 290, 330, 310]\r\n        //         },\r\n        //         {\r\n        //             name: '智能搜索',\r\n        //             type: 'line',\r\n        //             data: [150, 232, 201, 154, 190, 330, 410]\r\n        //         },\r\n        //         {\r\n        //             name: '词联想',\r\n        //             type: 'line',\r\n        //             data: [320, 332, 301, 334, 390, 330, 320]\r\n        //         }\r\n        //     ]\r\n        // };\r\n        //\r\n        // // 使用刚指定的配置项和数据显示图表。\r\n        // this.chartLine.setOption(option);\r\n    },\r\n    methods: {\r\n\r\n        // 获取已选择报告\r\n        check_data_report(val){\r\n          this.check_data = val\r\n        },\r\n\r\n        // 报告对比\r\n        reportCompared(){\r\n            this.report_dialog = false\r\n            newPerformanceScriptReportRequest(this.check_data).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.tableData = data.data.data;\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n\r\n        },\r\n        // 关闭报告列表\r\n        cancelReportList(){\r\n            this.report_dialog = false\r\n        },\r\n        // 报告列表\r\n        reportList(){\r\n            this.report_dialog = true\r\n            performanceScriptReportRequest(this.performanceReportScriptId).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.report_data = data.data.data;\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        // 返回性能脚本列表\r\n        performanceReportList(){\r\n            this.$parent.performanceReportList();\r\n        },\r\n\r\n        // 获取测试报告\r\n        getPerformanceReportFun() {\r\n            newPerformanceScriptReportRequest(this.performanceScriptReportData).then(data => {\r\n                if (true === data.data.success) {\r\n                    console.log(data.data.data)\r\n                    this.tableData = data.data.data;\r\n                    this.chartLine = echarts.init(document.getElementById('chartLineBox'), 'dark');\r\n                    const option = data.data.data[0].response_time_varies_over_time\r\n                    this.chartLine.setOption(option);\r\n\r\n\r\n                } else {\r\n                    this.$message.error(data.data.error.message);\r\n                }\r\n            });\r\n        },\r\n\r\n    },\r\n    created() {\r\n        this.performance_report_id_data = this.performanceScriptReportData\r\n        this.performanceReportScriptId = this.performanceScriptId\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.legend:{\r\n\r\n    　　　　　　show: true,\r\n\r\n    　　　　　　top:\"6%\"，//与上方的距离 可百分比% 可像素px\r\n\r\n    　　　　},\r\n\r\n</style>"]}]}