{"remainingRequest":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiBusinessTest\\addOrEditApiBusinessTest.vue?vue&type=style&index=0&id=0c464361&scoped=true&lang=css&","dependencies":[{"path":"E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiBusinessTest\\addOrEditApiBusinessTest.vue","mtime":1632633660560},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmFwaV9idXNpbmVzc190ZXN0X25hbWV7DQogIHBhZGRpbmctbGVmdDogMHB4Ow0KICBib3JkZXItbGVmdC13aWR0aDogMHB4Ow0KICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQogIHdpZHRoOiA1MDFweDsNCiAgbWFyZ2luLWxlZnQ6IDBweDsNCn0NCg0KLmFwaV9tb2R1bGV7DQogIHdpZHRoOiAxMDAlOw0KfQ0KLmFwaV90ZXN0X2Nhc2V7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQo="},{"version":3,"sources":["addOrEditApiBusinessTest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkVA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"addOrEditApiBusinessTest.vue","sourceRoot":"src/components/page/apiBusinessTest","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> API项目\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>API业务测试</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-form  ref=\"apiBusinessTestFormRef\" :model=\"apiBusinessTestForm\" label-width=\"100px\">\r\n\r\n      <el-form-item label=\"API业务测试名称\" style=\"width: 120px;\">\r\n        <el-input v-model=\"apiBusinessTestForm.api_business_test_name\"  class=\"api_business_test_name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"选择API项目\">\r\n        <el-select  v-model=\"apiBusinessTestForm.api_project_id\"  placeholder=\"请选择项目\"  id=\"selectApiProject\" @change=\"getSelectApiBusinessTestFun\">\r\n          <el-option v-for=\"item in projectSelect\" :key=\"item.project_id\" :value=\"item.project_id\" :label=\"item.api_project_name\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <div>\r\n        <el-table\r\n            :data=\"apiBusinessTestTableData\"\r\n            style=\"width: 66%\">\r\n\r\n          <el-table-column prop=\"api_module_id\" label=\"API模块\" width=\"300\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.api_module_id\" clearable placeholder=\"选择API模块\" @change=\"getSelectApiModule(scope.row)\" class=\"api_module\">\r\n                <el-option v-for=\"item in apiModuleSelect\" :key=\"item.api_module_id\" :value=\"item.api_module_id\"  :label=\"item.api_module_name\">\r\n                </el-option>\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"api_test_case_id\" width=\"300\" label=\"选择API测试用例\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.api_test_case_id\" clearable placeholder=\"选择API测试用例\" @change=\"handleSelectChange\" class=\"api_test_case\">\r\n                <el-option v-for=\"item in scope.row.apiTestCaseSelect\" :key=\"item.api_test_case_id\" :value=\"item.api_test_case_id\"  :label=\"item.api_test_case_name\">\r\n                </el-option>\r\n              </el-select>\r\n            </template>\r\n\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"steps\" label=\"操作步骤\" width=\"300\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.steps\" controls-position=\"right\" style=\"width: 50%\" ></el-input>\r\n            </template>\r\n          </el-table-column>\r\n\r\n\r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"AddForm\">添加行</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" @click=\"Delete(scope.$index, apiBusinessTestTableData)\" style=\"margin-left: 0px; margin-right: 13px; padding-right: 28px; text-align: center; \">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n\r\n        </el-table>\r\n      </div>\r\n\r\n      <div class=\"page-element-class\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveApiBusinessTest\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveApiBusinessTest\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {getSelectApiBusinessTestRequest, addApiBusinessTestRequest, updateBusinessTestRequest, getSingleApiBusinessTestRequest} from '../../../api/apiBusinessTest';\r\n\r\nexport default {\r\n  name: 'addOrEditApiBusinessTest',\r\n  // type 用来标识是编辑还是创建\r\n  props:['type', 'apiBusinessTestId', 'apiBusinessTestData', 'apiProjectId'],\r\n  data() {\r\n    return {\r\n      apiBusinessTestForm: {\r\n        api_business_test_name: \"\",\r\n        api_project_id: \"\",\r\n        api_business_test_id: \"\",\r\n\r\n      },\r\n\r\n      apiBusinessTestTableData:[\r\n        {\r\n          api_module_id: \"\",\r\n          api_test_case_id: \"\",\r\n          steps: \"\",\r\n\r\n        }\r\n\r\n      ],\r\n\r\n      projectSelect: [],\r\n      apiModuleSelect: [],\r\n      apiTestCaseSelect: [],\r\n      indexNum: 0,\r\n      indexNum2: 0,\r\n\r\n      newData: []\r\n\r\n\r\n\r\n    }\r\n  },\r\n  mounted(){\r\n    this.getSelectApiBusinessTestFun()\r\n\r\n  },\r\n\r\n  watch: {\r\n    apiBusinessTestForm: {\r\n      deep: true,\r\n      immediate: true,\r\n      handler(val) {\r\n        if (val.api_project_id) {\r\n\r\n          getSelectApiBusinessTestRequest(this.apiBusinessTestForm.api_project_id).then(data =>{\r\n\r\n            if (true === data.data.success) {\r\n              this.$set(this, 'projectSelect', data.data.data)\r\n\r\n              for (let i = 0;i<this.projectSelect.length; i++) {\r\n                let obj = this.projectSelect[i]\r\n\r\n                if (obj.project_id === this.apiBusinessTestForm.api_project_id){\r\n                  this.apiModuleSelect = obj.module_list;\r\n                  this.apiModuleSelect.forEach((item)=> {\r\n                    this.getSelectApiModule()\r\n                  })\r\n\r\n                }\r\n              }\r\n\r\n            } else {\r\n              this.$message.error(\"获取接口失败\")\r\n            }\r\n          })\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n  methods: {\r\n\r\n    //获取项目--模块下拉框\r\n    getSelectApiBusinessTestFun(value){\r\n      getSelectApiBusinessTestRequest(this.apiBusinessTestForm.api_project_id).then(data =>{\r\n\r\n        if (true === data.data.success) {\r\n          this.$set(this, 'newData', data.data.data)\r\n          this.$set(this, 'projectSelect', data.data.data)\r\n          for (let i = 0;i<this.projectSelect.length; i++) {\r\n            let obj = this.projectSelect[i]\r\n\r\n            if (obj.project_id === this.apiBusinessTestForm.api_project_id){\r\n              this.apiModuleSelect = obj.module_list;\r\n\r\n              break\r\n            }\r\n          }\r\n\r\n        } else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n      })\r\n    },\r\n    // 获取api模块--api测试用例 下拉框\r\n    getSelectApiModule(row){\r\n      this.apiBusinessTestTableData.forEach(utct=>{\r\n        for (let i = 0;i<this.apiModuleSelect.length; i++) {\r\n          var api_module = this.apiModuleSelect[i]\r\n\r\n          if (api_module.api_module_id === utct.api_module_id){\r\n            this.$set(utct, 'apiTestCaseSelect', api_module.api_test_case_list)\r\n          }\r\n        }\r\n      })\r\n\r\n    },\r\n\r\n    handleSelectChange(val){\r\n    },\r\n\r\n    // 保存\r\n    saveApiBusinessTest() {\r\n      if ('add' === this.type){\r\n\r\n        this.addApiBusinessTest()\r\n      }else {\r\n        this.editApiBusinessTest()\r\n      }\r\n    },\r\n\r\n    // 取消\r\n    cancelSaveApiBusinessTest(){\r\n      this.$emit('cancelSaveApiBusinessTest')\r\n\r\n    },\r\n\r\n    //添加业务测试用例\r\n    addApiBusinessTest(){\r\n      let req = JSON.parse(JSON.stringify(this.apiBusinessTestForm));\r\n      req.api_business_test_data=this.apiBusinessTestTableData;\r\n      console.log(\"这是table表单\",this.apiBusinessTestTableData)\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiBusinessTestFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.apiBusinessTestFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addApiBusinessTestRequest(req ).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.$message.success(\"添加Api业务测试成功\")\r\n            } else {\r\n              this.$message.error(\"添加Api业务测试失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n        this.$emit('saveApiBusinessTest')\r\n\r\n      });\r\n\r\n    },\r\n\r\n    //编辑Api业务测试\r\n    editApiBusinessTest(){\r\n      let req = JSON.parse(JSON.stringify(this.apiBusinessTestForm));\r\n      req.api_business_test_data=this.apiBusinessTestTableData;\r\n      console.log(\"这是table表单\",this.apiBusinessTestTableData)\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiBusinessTestFormRef.validate((valid) => {\r\n        if (valid) { // 代表校验通过\r\n          console.log(req);\r\n          updateBusinessTestRequest(this.apiBusinessTestForm.api_business_test_id, req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n\r\n              this.$message.success(\"编辑页面元素成功\")\r\n              this.showAddOrEditApiBusinessTest = false;\r\n\r\n              this.$forceUpdate();\r\n            } else {\r\n              this.$message.error(\"编辑页面元素失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n        this.$emit('saveApiBusinessTest')\r\n      });\r\n    },\r\n\r\n\r\n    //获取单个测试用例列表\r\n    getSingleApiBusinessTestFun() {\r\n      getSingleApiBusinessTestRequest(this.apiBusinessTestForm.api_business_test_id).then(data => {\r\n        if (true === data.data.success) {\r\n          let apiBusinessTest = data.data.data.api_business_test_data;\r\n\r\n          console.log(\"data数据\",data.data.data.api_business_test_data)\r\n          console.log(\"获取单个测试用例数据222\",apiBusinessTest)\r\n\r\n          this.apiBusinessTestTableData=[...apiBusinessTest];\r\n\r\n          console.log(\"apiTestCaseSelect：\", this.apiBusinessTestTableData)\r\n\r\n        } else {\r\n          this.$message.error(\"获取接口失败\")\r\n        }\r\n      })\r\n    },\r\n\r\n\r\n    //添加行\r\n    AddForm (index, row) {\r\n\r\n      //添加新的行数\r\n      // this.apiBusinessTestTableData.splice(index, 0, {})\r\n      this.apiBusinessTestTableData.push( {\r\n        api_module_id: \"\",\r\n        api_test_case_id: \"\",\r\n        steps: \"\",\r\n\r\n      })\r\n\r\n    },\r\n\r\n    //删除行\r\n    Delete(index, rows) {\r\n      rows.splice(index, 1);\r\n\r\n    }\r\n  },\r\n\r\n  created() {\r\n    console.log(this.apiBusinessTestData)\r\n    if ('edit'===this.type){\r\n      this.apiBusinessTestForm = {\r\n        api_project_id: this.apiBusinessTestData.api_project_id,\r\n        api_business_test_name: this.apiBusinessTestData.api_business_test_name,\r\n        api_business_test_id: this.apiBusinessTestData.id\r\n      }\r\n      this.getSingleApiBusinessTestFun()\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      console.log(\"这是id\", this.apiProjectId)\r\n      this.apiBusinessTestForm = {\r\n        api_project_id: this.apiProjectId\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_business_test_name{\r\n  padding-left: 0px;\r\n  border-left-width: 0px;\r\n  padding-right: 0px;\r\n  width: 501px;\r\n  margin-left: 0px;\r\n}\r\n\r\n.api_module{\r\n  width: 100%;\r\n}\r\n.api_test_case{\r\n  width: 100%;\r\n}\r\n\r\n</style>"]}]}