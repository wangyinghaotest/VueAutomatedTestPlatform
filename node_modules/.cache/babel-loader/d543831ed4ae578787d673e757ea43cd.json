{"remainingRequest":"E:\\test-platform-vue\\node_modules\\thread-loader\\dist\\cjs.js!E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\performanceScript\\addOrEditPerformanceProjectScript.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\performanceScript\\addOrEditPerformanceProjectScript.vue","mtime":1650008441730},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1650008440786},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1650008434007},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}