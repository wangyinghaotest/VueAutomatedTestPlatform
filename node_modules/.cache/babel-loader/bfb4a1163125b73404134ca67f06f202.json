{"remainingRequest":"D:\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js!D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueAutomatedTestPlatform\\src\\components\\page\\uiAutomation\\uiTask\\addOrEditUiTestTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VueAutomatedTestPlatform\\src\\components\\page\\uiAutomation\\uiTask\\addOrEditUiTestTask.vue","mtime":1652877133466},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addOrEditUiTestTask.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> UI任务管理\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>UI任务管理</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-form  ref=\"uiTestTaskFormRef\" :model=\"uiTestTaskForm\" label-width=\"100px\">\r\n      <el-form-item label=\"UI测试任务\"  prop=\"ui_test_task_name\">\r\n        <el-input v-model=\"uiTestTaskForm.ui_test_task_name\"  class=\"ui_test_task_name\" ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"描述\" prop=\"describe\">\r\n        <el-input type=\"textarea\" v-model=\"uiTestTaskForm.describe\" style=\"width: 230px;\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"UI测试用例\">\r\n        <el-tree\r\n            :data=\"data\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n\r\n            ref=\"tree\"\r\n            @check-change=\"handleBucketClick\"\r\n            :default-expanded-keys=\"[]\"\r\n            :default-checked-keys=\"defaultTask\"\r\n\r\n            style=\"width: 500px;\">\r\n        </el-tree>\r\n      </el-form-item>\r\n\r\n\r\n      <div class=\"page-element-class\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveUiTestTask\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveUiTestTask\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { addUiTestTaskRequest, getUiCaseTreeRequest, getSingleUiTestTaskRequest,updateSingleUiTestTaskRequest } from '../../../../api/uiAutomation/uiTestTask';\r\n\r\n\r\nexport default {\r\n\r\n  inject:['reload'],\r\n  name: 'addOrEditUiTestTask',\r\n  props: ['type', 'uiTestTaskId', 'uiTestTaskData', 'projectId'],\r\n  data(){\r\n\r\n    return{\r\n      uiTestTaskForm: {\r\n        ui_test_task_name: \"\",\r\n        ui_test_task_id: \"\",\r\n        describe: \"\"\r\n\r\n      },\r\n      count:\"\",//倒计时\r\n\r\n      data: [],\r\n\r\n      defaultProps: {\r\n        label: \"label\",\r\n        children: \"children\"\r\n\r\n      },\r\n\r\n      cases: [],\r\n      defaultTask: [],\r\n      ui_project_id: \"\"\r\n\r\n\r\n    }\r\n\r\n\r\n  },\r\n  mounted() {\r\n\r\n\r\n  },\r\n  methods: {\r\n\r\n\r\n    //保存测试任务\r\n    saveUiTestTask(){\r\n      if ('add'===this.type){\r\n        this.addUiTestTask()\r\n\r\n      }else {\r\n        this.editUiTestTask()\r\n      }\r\n\r\n\r\n    },\r\n\r\n    handleBucketClick(data){\r\n      // console.log(data.ui_test_cases_id)\r\n\r\n    },\r\n\r\n\r\n    //取消保存测试任务\r\n    cancelSaveUiTestTask(){\r\n\r\n      this.$emit('cancelSaveUiTestTask')\r\n\r\n\r\n    },\r\n\r\n    //创建测试任务\r\n    addUiTestTask(){\r\n      this.uiTestTaskForm.ui_test_task_id = 0;\r\n\r\n      let req = JSON.parse(JSON.stringify(this.uiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].ui_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.ui_project_id =  this.ui_project_id\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.uiTestTaskFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.uiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addUiTestTaskRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.$message.success(\"添加UI测试任务成功\")\r\n              this.$forceUpdate();\r\n              this.$emit('saveUiTestTask')\r\n\r\n\r\n            } else {\r\n              this.$message.error(\"添加UI测试任务失败\")\r\n              this.$emit('saveUiTestTask')\r\n\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    //编辑测试任务\r\n    editUiTestTask(){\r\n\r\n      let req = JSON.parse(JSON.stringify(this.uiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].ui_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.ui_project_id =  this.ui_project_id\r\n\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.uiTestTaskFormRef.validate((valid) => {\r\n        console.log(\"这是id：\",this.uiTestTaskForm.ui_test_task_id)\r\n        console.log(this.$refs.uiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          updateSingleUiTestTaskRequest(this.uiTestTaskForm.ui_test_task_id,req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditUiTestCase = false;\r\n              this.$message.success(\"编辑UI测试任务成功\")\r\n\r\n              this.$forceUpdate();\r\n            } else {\r\n              this.$message.error(\"编辑UI测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n        this.$emit('saveUiTestTask')\r\n\r\n\r\n      });\r\n    },\r\n\r\n    //获取测试用例树形结构\r\n    getUiCaseTreeFun(){\r\n      console.log(\"zhesahoidshasd\",this.ui_project_id)\r\n      getUiCaseTreeRequest(this.ui_project_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let uiTestTask = data.data.data;\r\n          let req = JSON.parse(JSON.stringify(uiTestTask));\r\n          console.log(\"uiTestTask：\", req)\r\n          for(var i =0;i<req.length;i++){\r\n            let children = req[i].children\r\n            req[i].label = req[i].ui_project_name\r\n\r\n            for(var j=0;j<children.length;j++){\r\n              console.log(children.length)\r\n              req[i].children[j].label = req[i].children[j].ui_test_case_name\r\n              req[i].children[j].id = req[i].children[j].ui_test_cases_id\r\n            }\r\n          }\r\n          console.log(\"uiTestTask222222222：\", req)\r\n          this.data = req\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n\r\n    },\r\n\r\n    // 获取单独测试任务信息\r\n    getSingleUiTestTaskFun() {\r\n      getSingleUiTestTaskRequest(this.uiTestTaskForm.ui_test_task_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let uiTestTask = data.data.data;\r\n          console.log(uiTestTask)\r\n\r\n\r\n          let req = JSON.parse(JSON.stringify(uiTestTask));\r\n          console.log(\"uiTestTask2333333333333：\", req.cases)\r\n\r\n\r\n          this.defaultTask = JSON.parse(data.data.data.cases)\r\n          console.log(this.defaultTask)\r\n\r\n          console.log(typeof (this.defaultTask))\r\n\r\n\r\n          console.log(\"这是默认选中返回得数据：\", this.defaultTask)\r\n\r\n\r\n\r\n        }else {\r\n          this.$message.error(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n    getCheckedKeys() {\r\n      console.log(this.$refs.tree.getCheckedKeys());\r\n\r\n    },\r\n    setCheckedKeys(){\r\n      this.$refs.tree.setCheckedKeys([]);\r\n    }\r\n\r\n  },\r\n  created() {\r\n\r\n\r\n    if ('edit'===this.type){\r\n      console.log(\"编辑测试任务222222\")\r\n      console.log(this.uiTestTaskData)\r\n      this.ui_project_id = this.projectId\r\n      this.uiTestTaskForm = {\r\n        ui_test_task_name: this.uiTestTaskData.ui_test_task_name,\r\n        ui_test_task_id: this.uiTestTaskData.id,\r\n        describe: this.uiTestTaskData.describe\r\n\r\n      }\r\n      console.log(\"编辑测试任务\")\r\n      console.log(\"编辑测试任务\",this.uiTestTaskForm.ui_test_task_id )\r\n      this.getUiCaseTreeFun()\r\n      this.getSingleUiTestTaskFun()\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      console.log(\"新增测试任务\", this.projectId)\r\n      this.ui_project_id = this.projectId\r\n\r\n      this.getUiCaseTreeFun()\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ui_test_task_name{\r\n  width: 230px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components/page/uiAutomation/uiTask"}]}