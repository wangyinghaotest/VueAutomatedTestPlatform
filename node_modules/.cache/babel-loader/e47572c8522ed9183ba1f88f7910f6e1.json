{"remainingRequest":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiTask\\addOrEditApiTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\VueAutomatedTestPlatform\\src\\components\\page\\apiTask\\addOrEditApiTask.vue","mtime":1632633660567},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addOrEditApiTask.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"crumbs\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item>\r\n          <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n        </el-breadcrumb-item>\r\n        <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n        <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <el-form  ref=\"apiTestTaskFormRef\" :model=\"apiTestTaskForm\" label-width=\"100px\">\r\n      <el-form-item label=\"API测试任务\"  prop=\"api_test_task_name\">\r\n        <el-input v-model=\"apiTestTaskForm.api_test_task_name\"  class=\"api_test_task_name\" ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"描述\" prop=\"describe\">\r\n        <el-input type=\"textarea\" v-model=\"apiTestTaskForm.describe\" style=\"width: 230px;\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"API业务测试\">\r\n        <el-tree\r\n            :data=\"data\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n\r\n            ref=\"tree\"\r\n            @check-change=\"handleBucketClick\"\r\n            :default-expanded-keys=\"[]\"\r\n            :default-checked-keys=\"defaultTask\"\r\n\r\n            style=\"width: 500px;\">\r\n        </el-tree>\r\n      </el-form-item>\r\n\r\n\r\n      <div class=\"page-element-class\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveApiTestTask\">保存</el-button>\r\n          <el-button type=\"default\" @click=\"cancelSaveApiTestTask\">取消</el-button>\r\n        </el-form-item>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getApiCaseTreeRequest, getSingleApiTestTaskRequest, addAPITestTaskRequest, updateSingleApiTestTaskRequest} from '../../../api/apiTestTask';\r\n\r\nexport default {\r\n  inject:['reload'],\r\n  name: 'addOrEditApiTask',\r\n  props: ['type', 'apiTestTaskId', 'apiTestTaskData', 'projectId'],\r\n  data(){\r\n\r\n    return{\r\n      apiTestTaskForm: {\r\n        api_test_task_name: \"\",\r\n        api_test_task_id: \"\",\r\n        describe: \"\"\r\n\r\n      },\r\n      count:\"\",//倒计时\r\n\r\n      data: [],\r\n\r\n      defaultProps: {\r\n        label: \"label\",\r\n        children: \"children\"\r\n\r\n      },\r\n\r\n      cases: [],\r\n      defaultTask: [],\r\n      api_project_id: \"\"\r\n\r\n\r\n    }\r\n\r\n\r\n  },\r\n  mounted() {\r\n\r\n\r\n  },\r\n  methods: {\r\n\r\n\r\n    //保存测试任务\r\n    saveApiTestTask(){\r\n      if ('add'===this.type){\r\n        this.addApiTestTask()\r\n\r\n      }else {\r\n        this.editApiTestTask()\r\n      }\r\n\r\n\r\n    },\r\n\r\n    handleBucketClick(data){\r\n      // console.log(data.api_test_cases_id)\r\n\r\n    },\r\n\r\n\r\n    //取消保存测试任务\r\n    cancelSaveApiTestTask(){\r\n\r\n      this.$emit('cancelSaveApiTestTask')\r\n\r\n\r\n    },\r\n\r\n    //创建测试任务\r\n    addApiTestTask(){\r\n      this.apiTestTaskForm.api_test_task_id = 0;\r\n\r\n      let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.api_project_id =  this.api_project_id\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n\r\n        console.log(this.$refs.apiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          addAPITestTaskRequest(req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditApiTestCase = false;\r\n              this.$message.success(\"添加API测试任务成功\")\r\n              this.$emit('saveApiTestTask')\r\n\r\n            } else {\r\n              this.$message.error(\"添加APi测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n      });\r\n\r\n    },\r\n\r\n    //编辑测试任务\r\n    editApiTestTask(){\r\n\r\n      let req = JSON.parse(JSON.stringify(this.apiTestTaskForm));\r\n\r\n      console.log(this.$refs.tree.getCheckedNodes(true))\r\n      let case_id = this.$refs.tree.getCheckedNodes(true)\r\n      this.cases = []\r\n      for (let i=0; i<case_id.length;i++){\r\n        this.cases[i] = case_id[i].api_test_cases_id\r\n\r\n      }\r\n      console.log(\"这是cases\", this.cases)\r\n\r\n      req.cases = this.cases\r\n      req.api_project_id =  this.api_project_id\r\n\r\n\r\n\r\n      console.log(\"这是获取到的\",req);\r\n      this.$refs.apiTestTaskFormRef.validate((valid) => {\r\n        console.log(\"这是id：\",this.apiTestTaskForm.api_test_task_id)\r\n        console.log(this.$refs.apiTestTaskFormRef.validate((valid)));\r\n        if (valid) { // 代表校验通过\r\n          updateSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id,req).then(data => {\r\n            console.log(data)\r\n            if (true === data.data.success) {\r\n              this.showAddOrEditApiTestCase = false;\r\n              this.$message.success(\"编辑UI测试任务成功\")\r\n              this.$emit('saveApiTestTask')\r\n\r\n            } else {\r\n              this.$message.info(\"编辑UI测试任务失败\")\r\n            }\r\n          })\r\n        } else {  //校验失败\r\n          return false;\r\n        }\r\n\r\n\r\n\r\n      });\r\n    },\r\n\r\n    //获取测试用例树形结构\r\n    getApiCaseTreeFun(){\r\n      console.log(\"API项目ID\",this.api_project_id)\r\n      getApiCaseTreeRequest(this.api_project_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let apiTestTask = data.data.data;\r\n          let req = JSON.parse(JSON.stringify(apiTestTask));\r\n          console.log(\"apiTestTask：\", req)\r\n          for(var i =0;i<req.length;i++){\r\n            let children = req[i].children\r\n            req[i].label = req[i].api_project_name\r\n\r\n            for(var j=0;j<children.length;j++){\r\n              console.log(children.length)\r\n              req[i].children[j].label = req[i].children[j].api_test_case_name\r\n              req[i].children[j].id = req[i].children[j].api_test_cases_id\r\n            }\r\n          }\r\n          console.log(\"uiTestTask222222222：\", req)\r\n          this.data = req\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n\r\n    },\r\n\r\n    // 获取单独Api测试任务信息\r\n    getSingleApiTestTaskFun() {\r\n      getSingleApiTestTaskRequest(this.apiTestTaskForm.api_test_task_id).then(data =>{\r\n        if (true === data.data.success){\r\n          let apiTestTask = data.data.data;\r\n          console.log(apiTestTask)\r\n\r\n\r\n          let req = JSON.parse(JSON.stringify(apiTestTask));\r\n          console.log(\"apiTestTask2333333333333：\", req.cases)\r\n\r\n\r\n          this.defaultTask = JSON.parse(data.data.data.cases)\r\n          console.log(this.defaultTask)\r\n\r\n          console.log(typeof (this.defaultTask))\r\n\r\n\r\n          console.log(\"这是默认选中返回得数据：\", this.defaultTask)\r\n\r\n\r\n\r\n        }else {\r\n          this.$message.info(\"获取接口失败\")\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getCheckedKeys() {\r\n      console.log(this.$refs.tree.getCheckedKeys());\r\n\r\n    },\r\n    setCheckedKeys(){\r\n      this.$refs.tree.setCheckedKeys([]);\r\n    }\r\n\r\n  },\r\n  created() {\r\n\r\n\r\n    if ('edit'===this.type){\r\n      console.log(\"编辑测试任务222222\")\r\n      console.log(this.apiTestTaskData)\r\n      this.api_project_id = this.projectId\r\n      this.apiTestTaskForm = {\r\n        api_test_task_name: this.apiTestTaskData.api_test_task_name,\r\n        api_test_task_id: this.apiTestTaskData.id,\r\n        describe: this.apiTestTaskData.describe\r\n\r\n      }\r\n      console.log(\"编辑测试任务\")\r\n      console.log(\"编辑测试任务\",this.apiTestTaskForm.api_test_task_id )\r\n      this.getApiCaseTreeFun()\r\n      this.getSingleApiTestTaskFun()\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if ('add'===this.type){\r\n      console.log(\"新增测试任务\", this.projectId)\r\n      this.api_project_id = this.projectId\r\n\r\n      this.getApiCaseTreeFun()\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_test_task_name{\r\n  width: 230px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components/page/apiTask"}]}