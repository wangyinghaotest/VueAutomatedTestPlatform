{"remainingRequest":"D:\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js!D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueAutomatedTestPlatform\\src\\components\\page\\apiAutomation\\apiBusinessTest\\addOrEditApiBusinessTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VueAutomatedTestPlatform\\src\\components\\page\\apiAutomation\\apiBusinessTest\\addOrEditApiBusinessTest.vue","mtime":1652877133450},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"D:\\VueAutomatedTestPlatform\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addOrEditApiBusinessTest.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API项目\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API业务测试</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <el-form  ref=\"apiBusinessTestFormRef\" :model=\"apiBusinessTestForm\" label-width=\"100px\">\r\n\r\n            <el-form-item label=\"API业务测试名称\" style=\"width: 120px;\">\r\n                <el-input v-model=\"apiBusinessTestForm.api_business_test_name\"  class=\"api_business_test_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"选择API项目\">\r\n                <el-select  v-model=\"apiBusinessTestForm.api_project_id\"  filterable placeholder=\"请选择项目\"  id=\"selectApiProject\" @change=\"getSelectApiBusinessTestFun\">\r\n                    <el-option v-for=\"item in projectSelect\" :key=\"item.project_id\" :value=\"item.project_id\" :label=\"item.api_project_name\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"业务测试描述\">\r\n                <el-input\r\n                    type=\"textarea\"\r\n                    :rows=\"2\"\r\n                    placeholder=\"请输入内容\"\r\n                    v-model=\"apiBusinessTestForm.api_business_test_describe\"\r\n                    class=\"business_test_describe\">\r\n                </el-input>\r\n            </el-form-item>\r\n                <el-input\r\n                    type=\"textarea\"\r\n                    :rows=\"2\"\r\n                    placeholder=\"API调式结果\"\r\n                    :autosize=\"{ minRows: 3, maxRows: 4}\"\r\n                    :readonly=\"true\"\r\n                    v-model=\"api_business_test_debug\"\r\n                    class=\"api_business_test_debug\">\r\n                </el-input>\r\n\r\n            <el-form-item label=\"调试域名\">\r\n                <el-select  v-model=\"api_environment\"  placeholder=\"请选择域名\"  id=\"selectApiEnvironment\" @change=\"getSelectApiEnvironmentFun\">\r\n                    <el-option v-for=\"item in environmentSelect\" :key=\"item.id\" :value=\"item.id\" :label=\"item.api_environment_name\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"debugApiBusinessTest\">调试</el-button>\r\n            </el-form-item>\r\n\r\n            <div>\r\n                <el-table\r\n                    :data=\"apiBusinessTestTableData\"\r\n                    style=\"width: 66%\"\r\n                    row-key=\"api_test_case_id\"\r\n                >\r\n                    <el-table-column prop=\"api_module_id\" label=\"API模块\" width=\"300\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-select v-model=\"scope.row.api_module_id\" filterable placeholder=\"选择API模块\" @change=\"getSelectApiModule(scope.row)\" class=\"api_module\">\r\n                                <el-option v-for=\"item in apiModuleSelect\" :key=\"item.api_module_id\" :value=\"item.api_module_id\"  :label=\"item.api_module_name\">\r\n                                </el-option>\r\n                            </el-select>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column prop=\"api_test_case_id\" width=\"300\" label=\"选择API测试用例\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-select v-model=\"scope.row.api_test_case_id\" filterable placeholder=\"选择API测试用例\" @change=\"handleSelectChange\" class=\"api_test_case\">\r\n                                <el-option v-for=\"item in scope.row.apiTestCaseSelect\" :key=\"item.api_test_case_id\" :value=\"item.api_test_case_id\"  :label=\"item.api_test_case_name\">\r\n                                </el-option>\r\n                            </el-select>\r\n                        </template>\r\n\r\n                    </el-table-column>\r\n\r\n                    <el-table-column prop=\"steps\" label=\"操作步骤\" width=\"300\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-input v-model=\"scope.row.steps\" controls-position=\"right\" style=\"width: 50%\" ></el-input>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n\r\n                    <el-table-column label=\"操作\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button @click=\"AddForm\">添加行</el-button>\r\n                            <el-button size=\"mini\" type=\"danger\" @click=\"Delete(scope.$index, apiBusinessTestTableData)\" style=\"margin-left: 0px; margin-right: 13px; padding-right: 28px; text-align: center; \">删除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                </el-table>\r\n            </div>\r\n\r\n            <div class=\"page-element-class\">\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"saveApiBusinessTest\">保存</el-button>\r\n                    <el-button type=\"default\" @click=\"cancelSaveApiBusinessTest\">取消</el-button>\r\n                    <el-button type=\"default\" @click=\"sorting(apiBusinessTestTableData)\">自动排序</el-button>\r\n                </el-form-item>\r\n            </div>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    getSelectApiBusinessTestRequest,\r\n    addApiBusinessTestRequest,\r\n    updateBusinessTestRequest,\r\n    getSingleApiBusinessTestRequest,\r\n    postApiBusinessTestDeBugRequest\r\n} from '../../../../api/apiAutomation/apiBusinessTest';\r\nimport Sortable from 'sortablejs';\r\nimport { getApiEnvironmentRequest } from '../../../../api/apiAutomation/apiEnvironment';\r\nexport default {\r\n    name: 'addOrEditApiBusinessTest',\r\n    // type 用来标识是编辑还是创建\r\n    props:['type', 'apiBusinessTestId', 'apiBusinessTestData', 'apiProjectId'],\r\n    data() {\r\n        return {\r\n            apiBusinessTestForm: {\r\n                api_business_test_name: \"\",\r\n                api_project_id: \"\",\r\n                api_business_test_id: \"\",\r\n                api_business_test_describe: \"\",\r\n\r\n            },\r\n            api_business_test_debug: \"\",\r\n\r\n            apiBusinessTestTableData:[\r\n                {\r\n                    api_module_id: \"\",\r\n                    api_test_case_id: \"\",\r\n                    steps: \"\",\r\n                }\r\n\r\n            ],\r\n\r\n            projectSelect: [],\r\n            apiModuleSelect: [],\r\n            apiTestCaseSelect: [],\r\n            indexNum: 0,\r\n            indexNum2: 0,\r\n\r\n            newData: [],\r\n            api_environment: '',\r\n            api_environment_options:[\r\n                {\r\n                    api_environment_describe:'',\r\n                    api_environment_name: '',\r\n                    api_title: '',\r\n                    id: ''\r\n\r\n                }\r\n            ],\r\n            environmentSelect: [],\r\n\r\n\r\n\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getSelectApiBusinessTestFun()\r\n        this.rowDrop()\r\n        this.getSelectApiEnvironmentFun()\r\n\r\n    },\r\n\r\n    watch: {\r\n        apiBusinessTestForm: {\r\n            deep: true,\r\n            immediate: true,\r\n            handler(val) {\r\n                if (val.api_project_id) {\r\n\r\n                    getSelectApiBusinessTestRequest(this.apiBusinessTestForm.api_project_id).then(data =>{\r\n\r\n                        if (true === data.data.success) {\r\n                            this.$set(this, 'projectSelect', data.data.data)\r\n\r\n                            for (let i = 0;i<this.projectSelect.length; i++) {\r\n                                let obj = this.projectSelect[i]\r\n\r\n                                if (obj.project_id === this.apiBusinessTestForm.api_project_id){\r\n                                    this.apiModuleSelect = obj.module_list;\r\n                                    this.apiModuleSelect.forEach((item)=> {\r\n                                        this.getSelectApiModule()\r\n                                    })\r\n\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            this.$message.error(\"获取接口失败\")\r\n                        }\r\n                    })\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    methods: {\r\n        //行拖拽\r\n        rowDrop() {\r\n            const tbody = document.querySelector('.el-table__body-wrapper tbody')\r\n            const _this = this\r\n            Sortable.create(tbody, {\r\n                onEnd({ newIndex, oldIndex }) {\r\n                    const currRow = _this.apiBusinessTestTableData.splice(oldIndex, 1)[0]\r\n                    _this.apiBusinessTestTableData.splice(newIndex, 0, currRow)\r\n                }\r\n            })\r\n        },\r\n        // 获取域名\r\n        getSelectApiEnvironmentFun(){\r\n            getApiEnvironmentRequest().then(data =>{\r\n                if (true === data.data.success) {\r\n\r\n                    this.environmentSelect = data.data.data;\r\n\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n\r\n\r\n        },\r\n\r\n        //获取项目--模块下拉框\r\n        getSelectApiBusinessTestFun(value){\r\n            getSelectApiBusinessTestRequest(this.apiBusinessTestForm.api_project_id).then(data =>{\r\n\r\n                if (true === data.data.success) {\r\n                    this.$set(this, 'newData', data.data.data)\r\n                    this.$set(this, 'projectSelect', data.data.data)\r\n                    for (let i = 0;i<this.projectSelect.length; i++) {\r\n                        let obj = this.projectSelect[i]\r\n\r\n                        if (obj.project_id === this.apiBusinessTestForm.api_project_id){\r\n                            this.apiModuleSelect = obj.module_list;\r\n\r\n                            break\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    this.$message.info(\"获取接口失败\")\r\n                }\r\n            })\r\n        },\r\n        // 获取api模块--api测试用例 下拉框\r\n        getSelectApiModule(row){\r\n            this.apiBusinessTestTableData.forEach(utct=>{\r\n                for (let i = 0;i<this.apiModuleSelect.length; i++) {\r\n                    var api_module = this.apiModuleSelect[i]\r\n\r\n                    if (api_module.api_module_id === utct.api_module_id){\r\n                        this.$set(utct, 'apiTestCaseSelect', api_module.api_test_case_list)\r\n                    }\r\n                }\r\n            })\r\n\r\n        },\r\n\r\n        handleSelectChange(val){\r\n        },\r\n\r\n        // 保存\r\n        saveApiBusinessTest() {\r\n            if ('add' === this.type){\r\n\r\n                this.addApiBusinessTest()\r\n            }else {\r\n                this.editApiBusinessTest()\r\n            }\r\n        },\r\n\r\n        // 调试业务测试 debug\r\n        debugApiBusinessTest() {\r\n            let req = JSON.parse(JSON.stringify(this.apiBusinessTestForm));\r\n            for(let i=0;i<this.apiBusinessTestTableData.length;i++){\r\n                let steps\r\n                steps = this.apiBusinessTestTableData[i]['steps']= i\r\n            }\r\n            console.log(this.apiBusinessTestTableData)\r\n\r\n            req.api_business_test_data=this.apiBusinessTestTableData;\r\n            req.environment = this.api_environment\r\n\r\n            this.$refs.apiBusinessTestFormRef.validate((valid) => {\r\n\r\n                console.log(this.$refs.apiBusinessTestFormRef.validate((valid)));\r\n                if (valid) { // 代表校验通过\r\n                    postApiBusinessTestDeBugRequest(req).then(data => {\r\n                        console.log(data)\r\n                        if (true === data.data.success) {\r\n                            console.log(data.data.data)\r\n                            this.api_business_test_debug = data.data.data\r\n                            this.$message.success(data.data.data)\r\n                        } else {\r\n                            this.api_business_test_debug = data.data.error.message\r\n                            this.$message.error(data.data.error.message)\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n\r\n            });\r\n\r\n        },\r\n\r\n        // 取消\r\n        cancelSaveApiBusinessTest(){\r\n            this.$emit('cancelSaveApiBusinessTest')\r\n\r\n        },\r\n        // 自动排序\r\n        sorting(rows){\r\n            for(let i=0;i<rows.length;i++){\r\n                let steps\r\n                steps = this.apiBusinessTestTableData[i]['steps']= i\r\n                console.log(steps)\r\n                }\r\n            console.log(this.apiBusinessTestTableData)\r\n        },\r\n\r\n        //添加业务测试用例\r\n        addApiBusinessTest(){\r\n            let req = JSON.parse(JSON.stringify(this.apiBusinessTestForm));\r\n            for(let i=0;i<this.apiBusinessTestTableData.length;i++){\r\n                let steps\r\n                steps = this.apiBusinessTestTableData[i]['steps']= i\r\n            }\r\n            console.log(this.apiBusinessTestTableData)\r\n\r\n            req.api_business_test_data=this.apiBusinessTestTableData;\r\n            console.log(\"这是table表单\",this.apiBusinessTestTableData)\r\n            this.$refs.apiBusinessTestFormRef.validate((valid) => {\r\n\r\n                console.log(this.$refs.apiBusinessTestFormRef.validate((valid)));\r\n                if (valid) { // 代表校验通过\r\n                    addApiBusinessTestRequest(req).then(data => {\r\n                        console.log(data)\r\n                        if (true === data.data.success) {\r\n                            this.$message.success(\"添加Api业务测试成功\")\r\n                        } else {\r\n                            this.$message.error(\"添加Api业务测试失败\")\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n\r\n                this.$emit('saveApiBusinessTest')\r\n\r\n            });\r\n\r\n        },\r\n\r\n        //编辑Api业务测试\r\n        editApiBusinessTest(){\r\n            let req = JSON.parse(JSON.stringify(this.apiBusinessTestForm));\r\n            for(let i=0;i<this.apiBusinessTestTableData.length;i++){\r\n                let steps\r\n                steps = this.apiBusinessTestTableData[i]['steps']= i\r\n            }\r\n            req.api_business_test_data=this.apiBusinessTestTableData;\r\n            console.log(\"这是table表单\",this.apiBusinessTestTableData)\r\n            this.$refs.apiBusinessTestFormRef.validate((valid) => {\r\n                if (valid) { // 代表校验通过\r\n                    console.log(req);\r\n                    updateBusinessTestRequest(this.apiBusinessTestForm.api_business_test_id, req).then(data => {\r\n                        console.log(data)\r\n                        if (true === data.data.success) {\r\n\r\n                            this.$message.success(\"编辑页面元素成功\")\r\n                            this.showAddOrEditApiBusinessTest = false;\r\n                            this.$forceUpdate();\r\n                            this.getApiBusinessTestFun()\r\n                        } else {\r\n                            this.$message.error(\"编辑页面元素失败\")\r\n                        }\r\n                    })\r\n                } else {  //校验失败\r\n                    return false;\r\n                }\r\n                this.$emit('saveApiBusinessTest')\r\n            });\r\n        },\r\n\r\n\r\n        //获取单个测试用例列表\r\n        getSingleApiBusinessTestFun() {\r\n            getSingleApiBusinessTestRequest(this.apiBusinessTestForm.api_business_test_id).then(data => {\r\n                if (true === data.data.success) {\r\n                    let apiBusinessTest = data.data.data.api_business_test_data;\r\n\r\n                    console.log(\"data数据\",data.data.data.api_business_test_data)\r\n\r\n                    this.apiBusinessTestTableData=[...apiBusinessTest];\r\n\r\n                    console.log(\"apiTestCaseSelect：\", this.apiBusinessTestTableData)\r\n\r\n                } else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n            })\r\n        },\r\n\r\n\r\n        //添加行\r\n        AddForm () {\r\n            this.apiBusinessTestTableData.push( {\r\n                api_module_id: \"\",\r\n                api_test_case_id: \"\",\r\n                steps: \"\",\r\n\r\n            })\r\n\r\n        },\r\n\r\n        //删除行\r\n        Delete(index, rows) {\r\n            rows.splice(index, 1);\r\n\r\n        }\r\n    },\r\n\r\n    created() {\r\n        console.log(this.apiBusinessTestData)\r\n        if ('edit'===this.type){\r\n            this.apiBusinessTestForm = {\r\n                api_project_id: this.apiBusinessTestData.api_project_id,\r\n                api_business_test_name: this.apiBusinessTestData.api_business_test_name,\r\n                api_business_test_id: this.apiBusinessTestData.id,\r\n                api_business_test_describe: this.apiBusinessTestData.api_business_test_describe\r\n            }\r\n            this.getSingleApiBusinessTestFun()\r\n\r\n\r\n        }\r\n\r\n        if ('add'===this.type){\r\n            console.log(\"这是id\", this.apiProjectId)\r\n            this.apiBusinessTestForm = {\r\n                api_project_id: this.apiProjectId\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.api_business_test_name{\r\n    padding-left: 0px;\r\n    border-left-width: 0px;\r\n    padding-right: 0px;\r\n    width: 501px;\r\n    margin-left: 0px;\r\n}\r\n\r\n.api_module{\r\n    width: 100%;\r\n}\r\n.api_test_case{\r\n    width: 100%;\r\n}\r\n.business_test_describe{\r\n    padding-left: 0px;\r\n    border-left-width: 0px;\r\n    padding-right: 0px;\r\n    width: 501px;\r\n    margin-left: 0px;\r\n}\r\n.api_business_test_debug{\r\n    padding-left: 0px;\r\n    border-left-width: 0px;\r\n    padding-right: 0px;\r\n    width: 501px;\r\n    min-height: 83px;\r\n    height: 77px;\r\n    left: auto;\r\n    margin-left: 99px;\r\n}\r\n</style>"],"sourceRoot":"src/components/page/apiAutomation/apiBusinessTest"}]}