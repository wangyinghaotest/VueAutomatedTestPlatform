{"remainingRequest":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\apiEnvironment\\ApiEnvironment.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\apiEnvironment\\ApiEnvironment.vue","mtime":1650008441725},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1650008434007},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ApiEnvironment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API环境\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API环境</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <el-row>\r\n            <el-button type=\"primary\" @click=\"addEnvironmentPopup\" >创建API环境</el-button>\r\n        </el-row>\r\n\r\n\r\n        <el-dialog title=\"创建API环境\" :visible.sync=\"addApiEnvironmentdialogFormVisible\">\r\n            <el-form :model=\"addApiEnvironmentData\" :rules=\"rules\" ref=\"addApiProjectFormRef\">\r\n                <el-form-item label=\"环境名称\" label-width=\"100px\" prop=\"api_environment_name\">\r\n                    <el-input v-model=\"addApiEnvironmentData.api_environment_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"域名\" label-width=\"100px\" prop=\"api_title\">\r\n                    <el-input v-model=\"addApiEnvironmentData.api_title\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"环境描述\" label-width=\"100px\" prop=\"api_describe\">\r\n                    <el-input type=\"textarea\" v-model=\"addApiEnvironmentData.api_environment_describe\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addApiEnvironmentdialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addApiEnvironment\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"编辑环境\" :visible.sync=\"editApiEnvironmentdialogFormVisible\">\r\n            <el-form :model=\"editApiEnvironmentData\" :rules=\"rules\" ref=\"editEnvironmentFormRef\">\r\n                <el-form-item label=\"环境名称\" label-width=\"100px\" prop=\"api_environment_name\">\r\n                    <el-input v-model=\"editApiEnvironmentData.api_environment_name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"环境标题\" label-width=\"100px\" prop=\"api_title\">\r\n                    <el-input v-model=\"editApiEnvironmentData.api_title\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"项目描述\" label-width=\"100px\" prop=\"api_describe\">\r\n                    <el-input type=\"textarea\" v-model=\"editApiEnvironmentData.api_environment_describe\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editApiEnvironmentdialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editEnvironment\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <div>\r\n            <el-table\r\n                    :data=\"tableData\"\r\n                    style=\"width: 100%\">\r\n                <!--                    :default-sort = \"{prop: 'date', order: 'descending'}\">-->\r\n                <el-table-column\r\n                        prop=\"id\"\r\n                        label=\"id\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_environment_name\"\r\n                        label=\"环境名称\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_title\"\r\n                        label=\"环境标题\"\r\n                        sortable\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"api_environment_describe\"\r\n                        label=\"环境描述\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"updata_time\"\r\n                        label=\"更新时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"create_time\"\r\n                        label=\"创建时间\"\r\n                        width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                @click=\"editApiEnvironmentPopup(scope.row)\">编辑</el-button>\r\n                        <el-button\r\n                                size=\"mini\"\r\n                                type=\"danger\"\r\n                                @click=\"deleteEnvironmentPopup(scope.row)\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import {getApiEnvironmentRequest, addApiEnvironmentRequest,getSingleApiEnvironmentRequest,updateSingleApiEnvironmentRequest, deleteSingleApiEnvironmentRequest} from '../../../api/apiEnvironment';\r\n\r\n    export default {\r\n        name: 'ApiEnvironment',\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n\r\n                page: {\r\n                    page: 1,\r\n                    total: 0,\r\n                    size: 10,\r\n\r\n                },\r\n                addApiEnvironmentdialogFormVisible: false,\r\n                editApiEnvironmentdialogFormVisible: false,\r\n\r\n                addApiEnvironmentData: {\r\n                    api_environment_name: \"\",\r\n                    api_title: \"\",\r\n                    api_describe: \"\"\r\n                },\r\n                editApiEnvironmentData: {\r\n                    api_environment_name: \"\",\r\n                    api_title: \"\",\r\n                    api_environment_describe: \"\",\r\n                    id: 0,\r\n                },\r\n                apiEnvironmentId: \"\",\r\n                apiEnvironmentData: \"\",\r\n\r\n                rules: {\r\n                    api_environment_name: [\r\n                        {required: true, message: '请输入环境名称', trigger: 'blur'},\r\n                    ],\r\n                    api_title: [\r\n                        {required: true, message: '请输入环境标题', trigger: 'blur'},\r\n                    ],\r\n\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n\r\n\r\n            formatter(row, column) {\r\n                return row.address;\r\n            },\r\n            handleEdit(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleDelete(index, row) {\r\n                console.log(index, row);\r\n            },\r\n            handleSizeChange(size) {\r\n                this.page.size = size;\r\n                this.getApiEnvironmentFun()\r\n            },\r\n            handleCurrentChange(index) {\r\n                this.page.page = index;\r\n                this.getApiEnvironmentFun()\r\n            },\r\n\r\n            //获取所有API环境列表\r\n            getApiEnvironmentFun() {\r\n                let req = {\r\n                    page: this.page.page,\r\n                    size: this.page.size,\r\n                };\r\n                getApiEnvironmentRequest(req).then(data => {\r\n                    console.log(data);\r\n                    if (true === data.data.success) {\r\n                        this.tableData = data.data.data;\r\n                        this.page.total = data.data.data.total;\r\n                        this.page.page = data.data.data.page;\r\n                        this.page.size = data.data.data.size;\r\n\r\n                    } else {\r\n                        this.$message.error(\"获取接口失败\")\r\n                    }\r\n                })\r\n            },\r\n\r\n            // 添加API环境\r\n            addApiEnvironment() {\r\n                let req = JSON.parse(JSON.stringify(this.addApiEnvironmentData));\r\n\r\n                this.$refs.addApiProjectFormRef.validate((valid) => {\r\n                    if (valid) { // 代表校验通过\r\n                        addApiEnvironmentRequest(req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getApiEnvironmentFun();\r\n                                this.addApiEnvironmentdialogFormVisible = false;\r\n                                this.$message.success(\"添加API环境成功\")\r\n                            } else {\r\n                                this.$message.error(\"添加API环境失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n\r\n            // 添加API环境 弹窗\r\n            addEnvironmentPopup(){\r\n                this.addApiEnvironmentData = {\r\n                    api_environment_name: \"\",\r\n                    api_title: \"\",\r\n                    api_describe: \"\",\r\n                };\r\n                this.addApiEnvironmentdialogFormVisible=true;\r\n            },\r\n\r\n            handleNodeClick(data) {\r\n                this.currentServiceId = data.id;\r\n            },\r\n\r\n\r\n            //编辑API环境\r\n            editEnvironment(){\r\n                let req = JSON.parse(JSON.stringify(this.editApiEnvironmentData));\r\n\r\n                this.$refs.editEnvironmentFormRef.validate((valid) => {\r\n\r\n                    console.log(this.apiEnvironmentId);\r\n                    if (valid) { // 代表校验通过\r\n                        updateSingleApiEnvironmentRequest(this.apiEnvironmentId, req).then(data => {\r\n                            console.log(data)\r\n                            if (true === data.data.success) {\r\n                                this.getApiEnvironmentFun();\r\n                                this.editApiEnvironmentdialogFormVisible = false;\r\n                                this.$message.success(\"编辑API环境成功\")\r\n                            } else {\r\n                                this.$message.error(\"编辑API环境失败\")\r\n                            }\r\n                        })\r\n                    } else {  //校验失败\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            //编辑API环境弹窗并获取单个API环境\r\n            editApiEnvironmentPopup(data){\r\n\r\n                this.apiEnvironmentId = data.id;\r\n                this.apiEnvironmentData = data;\r\n                this.editApiEnvironmentdialogFormVisible=true;\r\n\r\n                console.log(this.apiEnvironmentId);\r\n                console.log(this.apiEnvironmentData);\r\n\r\n                getSingleApiEnvironmentRequest(this.apiEnvironmentId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.editApiEnvironmentData.api_environment_name = data.data.data.api_environment_name;\r\n                            this.editApiEnvironmentData.api_describe = data.data.data.api_describe;\r\n                            this.editApiEnvironmentData.api_title = data.data.data.api_title;\r\n                        } else {\r\n                            this.$message.error(\"获取接口失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n            //删除单个API环境\r\n            deleteEnvironmentPopup(data){\r\n\r\n                this.apiEnvironmentId = data.id;\r\n                this.apiEnvironmentData = data;\r\n\r\n                console.log(this.apiEnvironmentId);\r\n                console.log(this.apiEnvironmentData);\r\n\r\n                deleteSingleApiEnvironmentRequest(this.apiEnvironmentId).then(data => {\r\n                        console.log(data);\r\n                        if (true === data.data.success) {\r\n                            this.getApiEnvironmentFun();\r\n                            this.$message.success(\"删除API环境成功\")\r\n\r\n                        } else {\r\n                            this.$message.error(\"删除API环境失败\")\r\n                        }\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n\r\n\r\n\r\n\r\n        },\r\n        created() {\r\n            this.getApiEnvironmentFun();\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/page/apiEnvironment"}]}