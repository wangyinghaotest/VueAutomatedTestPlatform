{"remainingRequest":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\VueAutomatedTestPlatform\\src\\api\\apiTestTask.js","dependencies":[{"path":"E:\\VUE\\VueAutomatedTestPlatform\\src\\api\\apiTestTask.js","mtime":1632633660532},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\VueAutomatedTestPlatform\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0UmVxdWVzdCwgcG9zdFJlcXVlc3QsIGRlbGV0ZVJlcXVlc3QsIHB1dFJlcXVlc3QgfSBmcm9tICIuL2NvbW1vbiI7IC8vIOiOt+WPluivpemhueebri0tLUFQSea1i+ivleS7u+WKoeWIl+ihqAoKZXhwb3J0IHZhciBnZXRBcGlUZXN0VGFza1JlcXVlc3QgPSBmdW5jdGlvbiBnZXRBcGlUZXN0VGFza1JlcXVlc3QoYXBpX3Byb2plY3RfaWQpIHsKICByZXR1cm4gZ2V0UmVxdWVzdCgiYXBpL2JhY2tlbmQvYXBpX3Rlc3RfdGFzay9saXN0LyIgKyBhcGlfcHJvamVjdF9pZCArICIvIik7Cn07IC8v5re75YqgQVBJ5rWL6K+V5Lu75YqhCgpleHBvcnQgdmFyIGFkZEFQSVRlc3RUYXNrUmVxdWVzdCA9IGZ1bmN0aW9uIGFkZEFQSVRlc3RUYXNrUmVxdWVzdChkYXRhKSB7CiAgcmV0dXJuIHB1dFJlcXVlc3QoImFwaS9iYWNrZW5kL2FwaV90ZXN0X3Rhc2svIiwgZGF0YSk7Cn07IC8v6I635Y+W5Y2V5LiqQXBp5rWL6K+V5Lu75YqhCgpleHBvcnQgdmFyIGdldFNpbmdsZUFwaVRlc3RUYXNrUmVxdWVzdCA9IGZ1bmN0aW9uIGdldFNpbmdsZUFwaVRlc3RUYXNrUmVxdWVzdChhcGlfdGVzdF90YXNrX2lkKSB7CiAgcmV0dXJuIGdldFJlcXVlc3QoImFwaS9iYWNrZW5kL2FwaV90ZXN0X3Rhc2svIiArIGFwaV90ZXN0X3Rhc2tfaWQgKyAiLyIpOwp9OyAvL+e8lui+keWNleS4qkFwaea1i+ivleS7u+WKoQoKZXhwb3J0IHZhciB1cGRhdGVTaW5nbGVBcGlUZXN0VGFza1JlcXVlc3QgPSBmdW5jdGlvbiB1cGRhdGVTaW5nbGVBcGlUZXN0VGFza1JlcXVlc3QoYXBpX3Rlc3RfdGFza19pZCwgZGF0YSkgewogIHJldHVybiBwb3N0UmVxdWVzdCgiYXBpL2JhY2tlbmQvYXBpX3Rlc3RfdGFzay8iICsgYXBpX3Rlc3RfdGFza19pZCArICIvIiwgZGF0YSk7Cn07IC8v5Yig6Zmk5Y2V5LiqQVBJ5Lu75YqhCgpleHBvcnQgdmFyIGRlbGV0ZVNpbmdsZUFwaVRlc3RUYXNrUmVxdWVzdCA9IGZ1bmN0aW9uIGRlbGV0ZVNpbmdsZUFwaVRlc3RUYXNrUmVxdWVzdChhcGlfdGFza19pZCkgewogIHJldHVybiBkZWxldGVSZXF1ZXN0KCJhcGkvYmFja2VuZC9hcGlfdGVzdF90YXNrLyIgKyBhcGlfdGFza19pZCArICIvIik7Cn07IC8v6I635Y+W5omA5pyJ5Lia5Yqh5rWL6K+V55So5L6L5qCR5b2i57uT5p6ECgpleHBvcnQgdmFyIGdldEFwaUNhc2VUcmVlUmVxdWVzdCA9IGZ1bmN0aW9uIGdldEFwaUNhc2VUcmVlUmVxdWVzdChhcGlfdGFza19pZCkgewogIHJldHVybiBnZXRSZXF1ZXN0KCJhcGkvYmFja2VuZC9hcGlfdGVzdF90YXNrL2dldF9hcGlfY2FzZV90cmVlLyIgKyBhcGlfdGFza19pZCArICIvIik7Cn07IC8v6I635Y+W5Y2V54usQVBJ5rWL6K+V55So5L6L55qE5omA5pyJ5rWL6K+V5oql5ZGKCgpleHBvcnQgdmFyIGdldEFwaUNhc2VSZXN1bHRSZXF1ZXN0ID0gZnVuY3Rpb24gZ2V0QXBpQ2FzZVJlc3VsdFJlcXVlc3QoYXBpX3Rlc3RfdGFza19pZCkgewogIHJldHVybiBnZXRSZXF1ZXN0KCJhcGkvYmFja2VuZC9hcGlfdGVzdF90YXNrL2NoZWNrX3Jlc3VsdF9saXN0LyIgKyBhcGlfdGVzdF90YXNrX2lkICsgIi8iKTsKfTsgLy/liKDpmaTljZXni6xBUEnmtYvor5XnlKjkvovnmoTmiYDmnInmtYvor5XmiqXlkYoKCmV4cG9ydCB2YXIgZGVsZXRlQXBpQ2FzZVJlc3VsdFJlcXVlc3QgPSBmdW5jdGlvbiBkZWxldGVBcGlDYXNlUmVzdWx0UmVxdWVzdChhcGlfdGVzdF9yZXN1bHRfaWQpIHsKICByZXR1cm4gZGVsZXRlUmVxdWVzdCgiYXBpL2JhY2tlbmQvYXBpX3Rlc3RfdGFzay9jaGVja19yZXN1bHQvIiArIGFwaV90ZXN0X3Jlc3VsdF9pZCArICIvIik7Cn07IC8v6I635Y+WQVBJ5rWL6K+V5oql5ZGK5YiX6KGoLUFQSea1i+ivleeUqOS+i+aKpeWRiuWIl+ihqAoKZXhwb3J0IHZhciBnZXRBcGlDYXNlQ2hlY2tSZXN1bHRMaXN0UmVxdWVzdCA9IGZ1bmN0aW9uIGdldEFwaUNhc2VDaGVja1Jlc3VsdExpc3RSZXF1ZXN0KGFwaV90ZXN0X3Jlc3VsdF9pZCwgc2l6ZV9wYWdlLCBwYWdlKSB7CiAgcmV0dXJuIGdldFJlcXVlc3QoImFwaS9iYWNrZW5kL2FwaV90ZXN0X3Rhc2svY2hlY2tfcmVzdWx0LyIgKyBhcGlfdGVzdF9yZXN1bHRfaWQgKyAiLyIgKyBzaXplX3BhZ2UgKyAiLyIgKyBwYWdlICsgIi8iKTsKfTsgLy/ojrflj5ZBUEnmtYvor5XmiqXlkYrliJfooagtQVBJ5rWL6K+V55So5L6L5oql5ZGKLeWksei0peWIl+ihqAoKZXhwb3J0IHZhciBnZXRBcGlDYXNlQ2hlY2tSZXN1bHRFcnJvckxpc3RSZXF1ZXN0ID0gZnVuY3Rpb24gZ2V0QXBpQ2FzZUNoZWNrUmVzdWx0RXJyb3JMaXN0UmVxdWVzdChhcGlfdGVzdF9yZXN1bHRfaWQsIHNpemVfcGFnZSwgcGFnZSkgewogIHJldHVybiBnZXRSZXF1ZXN0KCJhcGkvYmFja2VuZC9hcGlfdGVzdF90YXNrL2NoZWNrX3Jlc3VsdC9lcnJvci8iICsgYXBpX3Rlc3RfcmVzdWx0X2lkICsgIi8iICsgc2l6ZV9wYWdlICsgIi8iICsgcGFnZSArICIvIik7Cn07IC8v6I635Y+WQVBJ5rWL6K+V5oql5ZGK5YiX6KGoLUFQSea1i+ivleeUqOS+i+aKpeWRiuWIl+ihqC3ljZXni6xBUGnmtYvor5XnlKjkvovmiqXlkYrnu5PmnpwKCmV4cG9ydCB2YXIgcG9zdFNpbmdsZUFwaUNhc2VDaGVja1Jlc3VsdFJlcXVlc3QgPSBmdW5jdGlvbiBwb3N0U2luZ2xlQXBpQ2FzZUNoZWNrUmVzdWx0UmVxdWVzdChhcGlfdGVzdF9jYXNlX3Jlc3VsdF9pZCwgZGF0YSkgewogIHJldHVybiBwb3N0UmVxdWVzdCgiYXBpL2JhY2tlbmQvYXBpX3Rlc3RfdGFzay9zaW5nbGVfY2hlY2tfcmVzdWx0LyIgKyBhcGlfdGVzdF9jYXNlX3Jlc3VsdF9pZCArICIvIiwgZGF0YSk7Cn07IC8v5omn6KGMQVBJ5rWL6K+V5Lu75YqhCgpleHBvcnQgdmFyIHBvc3RQZXJmb3JtQXBpVGFza1JlcXVlc3QgPSBmdW5jdGlvbiBwb3N0UGVyZm9ybUFwaVRhc2tSZXF1ZXN0KGFwaV90ZXN0X3Rhc2tfaWQpIHsKICByZXR1cm4gcG9zdFJlcXVlc3QoImFwaS9iYWNrZW5kL2FwaV90ZXN0X3Rhc2svcGVyZm9ybV9hcGlfdGFzay8iICsgYXBpX3Rlc3RfdGFza19pZCArICIvIik7Cn07"},{"version":3,"sources":["E:/VUE/VueAutomatedTestPlatform/src/api/apiTestTask.js"],"names":["getRequest","postRequest","deleteRequest","putRequest","getApiTestTaskRequest","api_project_id","addAPITestTaskRequest","data","getSingleApiTestTaskRequest","api_test_task_id","updateSingleApiTestTaskRequest","deleteSingleApiTestTaskRequest","api_task_id","getApiCaseTreeRequest","getApiCaseResultRequest","deleteApiCaseResultRequest","api_test_result_id","getApiCaseCheckResultListRequest","size_page","page","getApiCaseCheckResultErrorListRequest","postSingleApiCaseCheckResultRequest","api_test_case_result_id","postPerformApiTaskRequest"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,WAApB,EAAiCC,aAAjC,EAA+CC,UAA/C,mB,CAEA;;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,cAAD,EAAmB;AACpD,SAAOL,UAAU,CAAC,oCAAoCK,cAApC,GAAqD,GAAtD,CAAjB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAS;AAC1C,SAAOJ,UAAU,CAAC,4BAAD,EAA+BI,IAA/B,CAAjB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,gBAAD,EAAqB;AAC5D,SAAOT,UAAU,CAAC,+BAA+BS,gBAA/B,GAAkD,GAAnD,CAAjB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACD,gBAAD,EAAmBF,IAAnB,EAA2B;AACrE,SAAON,WAAW,CAAC,+BAA+BQ,gBAA/B,GAAkD,GAAnD,EAAwDF,IAAxD,CAAlB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMI,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,WAAD,EAAgB;AAC1D,SAAOV,aAAa,CAAC,+BAA+BU,WAA/B,GAA6C,GAA9C,CAApB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACD,WAAD,EAAgB;AACjD,SAAOZ,UAAU,CAAC,iDAAiDY,WAAjD,GAA+D,GAAhE,CAAjB;AACH,CAFM,C,CAKP;;AACA,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACL,gBAAD,EAAqB;AACxD,SAAOT,UAAU,CAAC,iDAAiDS,gBAAjD,GAAoE,GAArE,CAAjB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,kBAAD,EAAuB;AAC7D,SAAOd,aAAa,CAAC,4CAA4Cc,kBAA5C,GAAiE,GAAlE,CAApB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACD,kBAAD,EAAqBE,SAArB,EAAgCC,IAAhC,EAAwC;AACpF,SAAOnB,UAAU,CAAC,4CAA4CgB,kBAA5C,GAAgE,GAAhE,GAAsEE,SAAtE,GAAmF,GAAnF,GAAyFC,IAAzF,GAAgG,GAAjG,CAAjB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMC,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACJ,kBAAD,EAAqBE,SAArB,EAAgCC,IAAhC,EAAwC;AACzF,SAAOnB,UAAU,CAAC,kDAAkDgB,kBAAlD,GAAsE,GAAtE,GAA4EE,SAA5E,GAAyF,GAAzF,GAA+FC,IAA/F,GAAsG,GAAvG,CAAjB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAME,mCAAmC,GAAG,SAAtCA,mCAAsC,CAACC,uBAAD,EAA0Bf,IAA1B,EAAkC;AACjF,SAAON,WAAW,CAAC,mDAAmDqB,uBAAnD,GAA6E,GAA9E,EAAmFf,IAAnF,CAAlB;AACH,CAFM,C,CAIP;;AACA,OAAO,IAAMgB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACd,gBAAD,EAAqB;AAC1D,SAAOR,WAAW,CAAC,gDAAkDQ,gBAAlD,GAAqE,GAAtE,CAAlB;AACH,CAFM","sourcesContent":["import {getRequest, postRequest, deleteRequest,putRequest} from \"./common\";\r\n\r\n// 获取该项目---API测试任务列表\r\nexport const getApiTestTaskRequest = (api_project_id) =>{\r\n    return getRequest(\"api/backend/api_test_task/list/\" + api_project_id + \"/\")\r\n};\r\n\r\n//添加API测试任务\r\nexport const addAPITestTaskRequest = (data) =>{\r\n    return putRequest(\"api/backend/api_test_task/\", data)\r\n};\r\n\r\n//获取单个Api测试任务\r\nexport const getSingleApiTestTaskRequest = (api_test_task_id) =>{\r\n    return getRequest(\"api/backend/api_test_task/\" + api_test_task_id + \"/\")\r\n};\r\n\r\n//编辑单个Api测试任务\r\nexport const updateSingleApiTestTaskRequest = (api_test_task_id, data) =>{\r\n    return postRequest(\"api/backend/api_test_task/\" + api_test_task_id + \"/\", data)\r\n};\r\n\r\n//删除单个API任务\r\nexport const deleteSingleApiTestTaskRequest = (api_task_id) =>{\r\n    return deleteRequest(\"api/backend/api_test_task/\" + api_task_id + \"/\")\r\n};\r\n\r\n//获取所有业务测试用例树形结构\r\nexport const getApiCaseTreeRequest = (api_task_id) =>{\r\n    return getRequest(\"api/backend/api_test_task/get_api_case_tree/\" + api_task_id + \"/\")\r\n};\r\n\r\n\r\n//获取单独API测试用例的所有测试报告\r\nexport const getApiCaseResultRequest = (api_test_task_id) =>{\r\n    return getRequest(\"api/backend/api_test_task/check_result_list/\" + api_test_task_id + \"/\")\r\n};\r\n\r\n//删除单独API测试用例的所有测试报告\r\nexport const deleteApiCaseResultRequest = (api_test_result_id) =>{\r\n    return deleteRequest(\"api/backend/api_test_task/check_result/\" + api_test_result_id + \"/\")\r\n};\r\n\r\n//获取API测试报告列表-API测试用例报告列表\r\nexport const getApiCaseCheckResultListRequest = (api_test_result_id, size_page, page) =>{\r\n    return getRequest(\"api/backend/api_test_task/check_result/\" + api_test_result_id +\"/\" + size_page +  \"/\" + page + \"/\")\r\n};\r\n\r\n//获取API测试报告列表-API测试用例报告-失败列表\r\nexport const getApiCaseCheckResultErrorListRequest = (api_test_result_id, size_page, page) =>{\r\n    return getRequest(\"api/backend/api_test_task/check_result/error/\" + api_test_result_id +\"/\" + size_page +  \"/\" + page + \"/\")\r\n};\r\n\r\n//获取API测试报告列表-API测试用例报告列表-单独APi测试用例报告结果\r\nexport const postSingleApiCaseCheckResultRequest = (api_test_case_result_id, data) =>{\r\n    return postRequest(\"api/backend/api_test_task/single_check_result/\" + api_test_case_result_id + \"/\", data)\r\n};\r\n\r\n//执行API测试任务\r\nexport const postPerformApiTaskRequest = (api_test_task_id) =>{\r\n    return postRequest(\"api/backend/api_test_task/perform_api_task/\"  +  api_test_task_id + \"/\")\r\n};"]}]}