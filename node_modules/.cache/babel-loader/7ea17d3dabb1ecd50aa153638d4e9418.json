{"remainingRequest":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\performanceAutomation\\performanceScript\\performanceReportPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\performanceAutomation\\performanceScript\\performanceReportPage.vue","mtime":1652877133461},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG5ld1BlcmZvcm1hbmNlU2NyaXB0UmVwb3J0UmVxdWVzdCwgcGVyZm9ybWFuY2VTY3JpcHRSZXBvcnRHZXRSZXF1ZXN0LCBwZXJmb3JtYW5jZVNjcmlwdFJlcG9ydFJlcXVlc3QgfSBmcm9tICIuLi8uLi8uLi8uLi9hcGkvcGVyZm9ybWFuY2UvcGVyZm9ybWFuY2VTY3JpcHQiOwppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3BlcmZvcm1hbmNlUmVwb3J0UGFnZScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0TGlzdDogW3t9XSwKICAgICAgY2hhcnRMaXN0MjogW3t9XSwKICAgICAgcmVwb3J0X2RpYWxvZzogZmFsc2UsCiAgICAgIHJlcG9ydF9kYXRhOiBbXSwKICAgICAgY2hlY2tfZGF0YTogW10sCiAgICAgIGVycm9yVGFibGVEYXRhOiBbewogICAgICAgIGp0bF9lcnJvcjogW3sKICAgICAgICAgIGp0bF9lcnJvcjogJycKICAgICAgICB9XQogICAgICB9XSwKICAgICAgdGFibGVEYXRhOiBbewogICAgICAgIHJlcG9ydF9saXN0OiBbewogICAgICAgICAgdGVzdF9yZXBvcnRfbmFtZTogJycsCiAgICAgICAgICByZXF1ZXN0c19sYWJlbDogJycsCiAgICAgICAgICBzYW1wbGVzOiAnJywKICAgICAgICAgIGFwaV9lcnJvcjogJycsCiAgICAgICAgICBhcGlfbWluOiAnJywKICAgICAgICAgIGFwaV9tYXg6ICcnLAogICAgICAgICAgYXBpX21lZGlhbjogJycsCiAgICAgICAgICBhcGlfOTA6ICcnLAogICAgICAgICAgYXBpXzk1OiAnJywKICAgICAgICAgIGFwaV85OTogJycsCiAgICAgICAgICBhcGlfdHJhbnNhY3Rpb25zOiAnJywKICAgICAgICAgIGFwaV9yZWNlaXZlZDogJycsCiAgICAgICAgICBhcGlfYXZlcmFnZTogJycsCiAgICAgICAgICBwcmVzc3VyZV90ZXN0X2NvbnRlbnQ6ICcnCiAgICAgICAgfV0KICAgICAgfV0sCiAgICAgIHBlcmZvcm1hbmNlUmVwb3J0U2NyaXB0SWQ6ICIiLAogICAgICBwZXJmb3JtYW5jZV9zY3JpcHRfaWQ6ICIiLAogICAgICBwZXJmb3JtYW5jZV9yZXBvcnRfaWRfZGF0YToge30KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRQZXJmb3JtYW5jZVJlcG9ydEZ1bigpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdENoYXJ0OiBmdW5jdGlvbiBpbml0Q2hhcnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmNoYXJ0TGlzdC5mb3JFYWNoKGZ1bmN0aW9uICh2YWwsIGluZGV4KSB7CiAgICAgICAgdmFyIG15Q2hhcnQgPSBfdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjaGFydCIuY29uY2F0KGluZGV4KSksICdkYXJrJyk7CgogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKF90aGlzLmNoYXJ0TGlzdFtpbmRleF0pOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDojrflj5blt7LpgInmi6nmiqXlkYoKICAgIGNoZWNrX2RhdGFfcmVwb3J0OiBmdW5jdGlvbiBjaGVja19kYXRhX3JlcG9ydCh2YWwpIHsKICAgICAgY29uc29sZS5sb2codmFsKTsKICAgICAgdGhpcy5jaGVja19kYXRhID0gdmFsOwogICAgfSwKICAgIC8vIOaKpeWRiuWvueavlAogICAgcmVwb3J0Q29tcGFyZWQ6IGZ1bmN0aW9uIHJlcG9ydENvbXBhcmVkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMucmVwb3J0X2RpYWxvZyA9IGZhbHNlOwogICAgICB2YXIgbG9hZGluZyA9IHRoaXMuJGxvYWRpbmcoewogICAgICAgIGxvY2s6IHRydWUsCiAgICAgICAgdGV4dDogJ0xvYWRpbmcnLAogICAgICAgIHNwaW5uZXI6ICdlbC1pY29uLWxvYWRpbmcnLAogICAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDAsIDAsIDAsIDAuNyknCiAgICAgIH0pOwogICAgICBuZXdQZXJmb3JtYW5jZVNjcmlwdFJlcG9ydFJlcXVlc3QodGhpcy5jaGVja19kYXRhKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICBfdGhpczIudGFibGVEYXRhID0gZGF0YS5kYXRhLmRhdGE7CiAgICAgICAgICBfdGhpczIuY2hhcnRMaXN0MiA9IGRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMyLmVycm9yVGFibGVEYXRhID0gZGF0YS5kYXRhLmRhdGE7CiAgICAgICAgICB2YXIgcmVzcG9uc2VfdGltZV92YXJpZXNfb3Zlcl90aW1lID0gW107CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpczIuY2hhcnRMaXN0Mi5sZW5ndGg7IGkrKykgewogICAgICAgICAgICByZXNwb25zZV90aW1lX3Zhcmllc19vdmVyX3RpbWUucHVzaChfdGhpczIuY2hhcnRMaXN0MltpXS5yZXNwb25zZV90aW1lX3Zhcmllc19vdmVyX3RpbWUpOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzMi5jaGFydExpc3QgPSByZXNwb25zZV90aW1lX3Zhcmllc19vdmVyX3RpbWU7CgogICAgICAgICAgaWYgKF90aGlzMi5jaGFydExpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgICBfdGhpczIuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBfdGhpczIuaW5pdENoYXJ0KCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGxvYWRpbmcuY2xvc2UoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCfojrflj5bmjqXlj6PlpLHotKUnKTsKCiAgICAgICAgICBsb2FkaW5nLmNsb3NlKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDlhbPpl63miqXlkYrliJfooagKICAgIGNhbmNlbFJlcG9ydExpc3Q6IGZ1bmN0aW9uIGNhbmNlbFJlcG9ydExpc3QoKSB7CiAgICAgIHRoaXMucmVwb3J0X2RpYWxvZyA9IGZhbHNlOwogICAgfSwKICAgIC8vIOaKpeWRiuWIl+ihqAogICAgcmVwb3J0TGlzdDogZnVuY3Rpb24gcmVwb3J0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnJlcG9ydF9kaWFsb2cgPSB0cnVlOwogICAgICBwZXJmb3JtYW5jZVNjcmlwdFJlcG9ydFJlcXVlc3QodGhpcy5wZXJmb3JtYW5jZV9zY3JpcHRfaWQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAodHJ1ZSA9PT0gZGF0YS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgIF90aGlzMy5yZXBvcnRfZGF0YSA9IGRhdGEuZGF0YS5kYXRhOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluaOpeWPo+Wksei0pScpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5rWL6K+V5oql5ZGKCiAgICBnZXRQZXJmb3JtYW5jZVJlcG9ydEZ1bjogZnVuY3Rpb24gZ2V0UGVyZm9ybWFuY2VSZXBvcnRGdW4oKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIGxvYWRpbmcgPSB0aGlzLiRsb2FkaW5nKHsKICAgICAgICBsb2NrOiB0cnVlLAogICAgICAgIHRleHQ6ICdMb2FkaW5nJywKICAgICAgICBzcGlubmVyOiAnZWwtaWNvbi1sb2FkaW5nJywKICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgwLCAwLCAwLCAwLjcpJwogICAgICB9KTsKICAgICAgcGVyZm9ybWFuY2VTY3JpcHRSZXBvcnRHZXRSZXF1ZXN0KHRoaXMucGVyZm9ybWFuY2VSZXBvcnRTY3JpcHRJZCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLmRhdGEpOwogICAgICAgICAgX3RoaXM0LnRhYmxlRGF0YSA9IGRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXM0LmNoYXJ0TGlzdDIgPSBkYXRhLmRhdGEuZGF0YTsKICAgICAgICAgIF90aGlzNC5lcnJvclRhYmxlRGF0YSA9IGRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgdmFyIHJlc3BvbnNlX3RpbWVfdmFyaWVzX292ZXJfdGltZSA9IFtdOwoKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXM0LmNoYXJ0TGlzdDIubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgcmVzcG9uc2VfdGltZV92YXJpZXNfb3Zlcl90aW1lLnB1c2goX3RoaXM0LmNoYXJ0TGlzdDJbaV0ucmVzcG9uc2VfdGltZV92YXJpZXNfb3Zlcl90aW1lKTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczQuY2hhcnRMaXN0ID0gcmVzcG9uc2VfdGltZV92YXJpZXNfb3Zlcl90aW1lOwoKICAgICAgICAgIGlmIChfdGhpczQuY2hhcnRMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgX3RoaXM0LiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgX3RoaXM0LmluaXRDaGFydCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICBsb2FkaW5nLmNsb3NlKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzNC4kbWVzc2FnZS5lcnJvcihkYXRhLmRhdGEuZXJyb3IubWVzc2FnZSk7CgogICAgICAgICAgbG9hZGluZy5jbG9zZSgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5wZXJmb3JtYW5jZV9zY3JpcHRfaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5wZXJmb3JtYW5jZVNjcmlwdElkOwogICAgdGhpcy5wZXJmb3JtYW5jZVJlcG9ydFNjcmlwdElkID0gdGhpcy4kcm91dGUucXVlcnkucGVyZm9ybWFuY2VSZXN1bHRJZDsKICB9Cn07"},{"version":3,"sources":["performanceReportPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div style=\"overflow: auto;height: 100%;\">\r\n<!--        <el-header>性能测试报告</el-header>-->\r\n        <el-row style='left: 100px;'>\r\n            <el-button type=\"primary\" plain @click=reportList style=\"margin-top: 20px;\">报告对比</el-button>\r\n        </el-row>\r\n        <el-dialog title=\"报告列表\" :visible.sync=\"report_dialog\">\r\n            <el-table :data=\"report_data\"  @selection-change=\"check_data_report\">\r\n                <el-table-column\r\n                    type=\"selection\"\r\n                    width=\"55\">\r\n                </el-table-column>\r\n                <el-table-column property=\"performance_report_id\" label=\"id\" width=\"150\"></el-table-column>\r\n                <el-table-column property=\"performance_script_report_name\" label=\"测试报告名称\" width=\"200\"></el-table-column>\r\n                <el-table-column property=\"pressure_test_content\" label=\"压测内容\" width=\"200\"></el-table-column>\r\n            </el-table>\r\n            <el-button  @click=reportCompared >确定</el-button>\r\n            <el-button  @click=cancelReportList >取消</el-button>\r\n        </el-dialog>\r\n\r\n        <div v-for=\"(item,index) in chartList\" :key=\"index\" style=\"top: 20px;margin-top: 20px; \">\r\n            <div :id=\"`chart${index}`\" style=\"width: 90.7%;height: 50vh;left: 100px;\"></div>\r\n        </div>\r\n        <div v-for=\"item in tableData\" style='left: 100px;'>\r\n            <el-table\r\n                :data=\"item.report_list\"\r\n                style=\"width: 90%; margin-top: 20px;left: 100px; margin-bottom: 50px;\"\r\n                :header-cell-style=\"{textAlign: 'center'}\">\r\n                <el-table-column\r\n                    label=\"测试报告内容\"\r\n                    prop=\"test_report_name\"\r\n                >\r\n                    <el-table-column\r\n                        prop=\"test_report_name\"\r\n                        label=\"测试报告名称\"\r\n                    >\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"pressure_test_content\"\r\n                        label=\"压测内容\"\r\n                    >\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Requests\"\r\n                >\r\n                    <el-table-column\r\n                        prop=\"requests_label\"\r\n                        label=\"label\"\r\n                    >\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Executions(执行)\"\r\n                >\r\n                    <el-table-column\r\n                        prop=\"samples\"\r\n                        label=\"请求数量\"\r\n                    >\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_error\"\r\n                        label=\"失败率\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_error> 0 + ('%')\" style=\"color:red\">{{ scope.row.api_error }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_error }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"响应时间(ms)\"\r\n                >\r\n                    <el-table-column\r\n                        prop=\"api_average\"\r\n                        label=\"平均响应\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_average>=8000\" style=\"color:red\">{{ scope.row.api_average }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_average }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_min\"\r\n                        label=\"最小响应\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_min>=8000\" style=\"color:red\">{{ scope.row.api_min }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_min }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_max\"\r\n                        label=\"最大响应\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_max>=8000\" style=\"color:red\">{{ scope.row.api_max }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_max }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_median\"\r\n                        label=\"中位数\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_median>=8000\" style=\"color:red\">{{ scope.row.api_median }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_median }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_90\"\r\n                        label=\"90%\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_90>=8000\" style=\"color:red\">{{ scope.row.api_90 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_90 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_95\"\r\n                        label=\"95%\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_95>=8000\" style=\"color:red\">{{ scope.row.api_95 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_95 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"api_99\"\r\n                        label=\"99%\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_99>=8000\" style=\"color:red\">{{ scope.row.api_99 }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_99 }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    label=\"Throughput\"\r\n                >\r\n                    <el-table-column\r\n                        prop=\"api_transactions\"\r\n                        label=\"吞吐量(s)\"\r\n                    >\r\n                        <template slot-scope=\"scope\">\r\n                            <span v-if=\"scope.row.api_transactions<=10\" style=\"color:red\">{{ scope.row.api_transactions }}</span>\r\n                            <span v-else style=\"color: #37B328\">{{ scope.row.api_transactions }}</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    label=\"Network(KB/sec)\"\r\n                >\r\n                    <el-table-column\r\n                        prop=\"api_received\"\r\n                        label=\"每秒接收数据量\"\r\n                    >\r\n                    </el-table-column>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n        <div v-for=\"item in errorTableData\">\r\n            <el-table\r\n                :data=\"item.jtl_error\"\r\n                style=\"width: 90%; margin-top: 20px;left: 100px; margin-bottom: 50px;\"\r\n                :header-cell-style=\"{textAlign: 'center'}\"\r\n                :cell-style=\"{ textAlign: 'center' }\">\r\n                <el-table-column\r\n                    prop=\"jtl_error\"\r\n                    label=\"是否存在异常\"\r\n                >\r\n                    <template slot-scope=\"scope\">\r\n                        <span v-if=\"scope.row.jtl_error.indexOf('暂无异常') !== -1\" style=\"color: #37B328\">{{ scope.row.jtl_error }}</span>\r\n                        <span v-else style=\"color:red\">{{ scope.row.jtl_error }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {\r\n    newPerformanceScriptReportRequest,\r\n    performanceScriptReportGetRequest,\r\n    performanceScriptReportRequest\r\n} from '../../../../api/performance/performanceScript';\r\nimport  * as  echarts from 'echarts'\r\n\r\nexport default {\r\n    name: 'performanceReportPage',\r\n    data() {\r\n        return {\r\n            chartList: [{}],\r\n            chartList2: [{}],\r\n\r\n            report_dialog: false,\r\n            report_data: [],\r\n            check_data: [],\r\n            errorTableData: [\r\n                {\r\n                    jtl_error:[\r\n                        {\r\n\r\n                            jtl_error: '',\r\n                        }\r\n                    ],\r\n\r\n                }\r\n\r\n            ],\r\n            tableData: [{\r\n                report_list:[\r\n                    {\r\n                        test_report_name: '',\r\n                        requests_label: '',\r\n                        samples: '',\r\n                        api_error:'',\r\n                        api_min: '',\r\n                        api_max: '',\r\n                        api_median: '',\r\n                        api_90: '',\r\n                        api_95: '',\r\n                        api_99: '',\r\n                        api_transactions: '',\r\n                        api_received: '',\r\n                        api_average: '',\r\n                        pressure_test_content: ''\r\n                    }\r\n                ],\r\n\r\n            },\r\n            ],\r\n            performanceReportScriptId: \"\",\r\n            performance_script_id: \"\",\r\n            performance_report_id_data: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getPerformanceReportFun();\r\n    },\r\n    methods: {\r\n        initChart() {\r\n            this.chartList.forEach((val, index) => {\r\n                const myChart = this.$echarts.init( document.getElementById(`chart${index}`), 'dark')\r\n                myChart.setOption(this.chartList[index])\r\n            })\r\n        },\r\n\r\n        // 获取已选择报告\r\n        check_data_report(val){\r\n            console.log(val)\r\n            this.check_data = val\r\n        },\r\n\r\n        // 报告对比\r\n        reportCompared(){\r\n            this.report_dialog = false\r\n            const loading = this.$loading({\r\n                lock: true,\r\n                text: 'Loading',\r\n                spinner: 'el-icon-loading',\r\n                background: 'rgba(0, 0, 0, 0.7)'\r\n            });\r\n\r\n            newPerformanceScriptReportRequest(this.check_data).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.tableData = data.data.data;\r\n                    this.chartList2 = data.data.data\r\n                    this.errorTableData = data.data.data;\r\n\r\n\r\n                    const response_time_varies_over_time = []\r\n\r\n                    for (var i = 0; i < this.chartList2.length; i++) {\r\n                        response_time_varies_over_time.push(this.chartList2[i].response_time_varies_over_time)\r\n                    }\r\n                    this.chartList = response_time_varies_over_time\r\n                    if (this.chartList.length > 0) {\r\n                        this.$nextTick(() => {\r\n                            this.initChart()\r\n                        })\r\n                    }\r\n                    loading.close();\r\n\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                    loading.close();\r\n\r\n                }\r\n            });\r\n\r\n        },\r\n        // 关闭报告列表\r\n        cancelReportList(){\r\n            this.report_dialog = false\r\n        },\r\n        // 报告列表\r\n        reportList(){\r\n            this.report_dialog = true\r\n            performanceScriptReportRequest(this.performance_script_id).then(data => {\r\n                if (true === data.data.success) {\r\n                    this.report_data = data.data.data;\r\n                } else {\r\n                    this.$message.error('获取接口失败');\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        // 获取测试报告\r\n        getPerformanceReportFun() {\r\n            const loading = this.$loading({\r\n                lock: true,\r\n                text: 'Loading',\r\n                spinner: 'el-icon-loading',\r\n                background: 'rgba(0, 0, 0, 0.7)'\r\n            });\r\n            performanceScriptReportGetRequest(this.performanceReportScriptId).then(data => {\r\n                if (true === data.data.success) {\r\n                    console.log(data.data.data)\r\n                    this.tableData = data.data.data;\r\n                    this.chartList2 = data.data.data\r\n                    this.errorTableData = data.data.data;\r\n\r\n                    const response_time_varies_over_time = []\r\n\r\n                    for (var i = 0; i < this.chartList2.length; i++) {\r\n                        response_time_varies_over_time.push(this.chartList2[i].response_time_varies_over_time)\r\n                    }\r\n                    this.chartList = response_time_varies_over_time\r\n                    if (this.chartList.length > 0) {\r\n                        this.$nextTick(() => {\r\n                            this.initChart()\r\n                        })\r\n                    }\r\n                    loading.close();\r\n\r\n\r\n                } else {\r\n                    this.$message.error(data.data.error.message);\r\n                    loading.close();\r\n\r\n                }\r\n            });\r\n        },\r\n\r\n    },\r\n    created() {\r\n        this.performance_script_id = this.$route.query.performanceScriptId\r\n        this.performanceReportScriptId = this.$route.query.performanceResultId\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-header{\r\n    background-color: #b4bccc;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 60px;\r\n    font-weight: 100;\r\n}\r\n</style>"],"sourceRoot":"src/components/page/performanceAutomation/performanceScript"}]}