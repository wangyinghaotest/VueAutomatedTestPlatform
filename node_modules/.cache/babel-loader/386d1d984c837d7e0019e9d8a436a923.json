{"remainingRequest":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\apiAutomation\\apiTask\\APITestTaskResultDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\apiAutomation\\apiTask\\APITestTaskResultDetails.vue","mtime":1652877133453},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1652877125945},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652877126456},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1652877132787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiRTovdGVzdC1wbGF0Zm9ybS12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGdldEFwaUNhc2VDaGVja1Jlc3VsdExpc3RSZXF1ZXN0LCBwb3N0U2luZ2xlQXBpQ2FzZUNoZWNrUmVzdWx0UmVxdWVzdCwgZ2V0QXBpQ2FzZUNoZWNrUmVzdWx0RXJyb3JMaXN0UmVxdWVzdCB9IGZyb20gIi4uLy4uLy4uLy4uL2FwaS9hcGlBdXRvbWF0aW9uL2FwaVRlc3RUYXNrIjsKaW1wb3J0IFNjaGFydCBmcm9tICd2dWUtc2NoYXJ0JzsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgSnNvblZpZXdlciBmcm9tICd2dWUtanNvbi12aWV3ZXInOwpWdWUudXNlKEpzb25WaWV3ZXIpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FQSVRlc3RUYXNrUmVzdWx0RGV0YWlscycsCiAgcHJvcHM6IFsnYXBpUmVzdWx0SWQnXSwKICBjb21wb25lbnRzOiB7CiAgICBTY2hhcnQ6IFNjaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFwaVBhcmFtZXRlckV4dHJhY3Rpb25EYXRhOiBbewogICAgICAgIGFwaV92YWx1ZV92YXJpYWJsZTogIiIsCiAgICAgICAgYXBpX2tleV92YXJpYWJsZTogIiIsCiAgICAgICAgYXBpX3ZhcmlhYmxlX3Jlc3VsdHM6ICIiCiAgICAgIH1dLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgdG90YWxfY2FzZTogMCwKICAgICAgc2l6ZV9wYWdlOiAxMCwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgYXBpX3N0YXRlOiAwLAogICAgICB0ZXN0VGFza0lkOiAiIiwKICAgICAgYXBpX1Jlc3VsdDogIiIsCiAgICAgIGFwaV9yZXN1bHRfaWQ6ICIiLAogICAgICBhcGlfdGVzdF9yZXN1bHRfaWQ6ICIiLAogICAgICBkaWFsb2dUYWJsZVZpc2libGU6IGZhbHNlLAogICAgICBncmlkRGF0YTogW10sCiAgICAgIGFwaUNhc2VSZXN1bHQ6ICdzZWNvbmQnLAogICAgICBhcGlDYXNlUmVzdWx0Rm9ybTogewogICAgICAgIGFwaV9lcnJvcjogIiIsCiAgICAgICAgYXBpX3N1Y2Nlc3NmdWw6ICIiLAogICAgICAgIGFibm9ybWFsOiAiIiwKICAgICAgICBqc29uX2V4dHJhY3RfdmFyaWFibGVfY29udmVyc2lvbjogIiIsCiAgICAgICAgYXBpX2Fzc2VydGlvbl9yZXN1bHRzOiAiIiwKICAgICAgICBhcGlfcmVxdWVzdF9yZXN1bHRzOiAiIiwKICAgICAgICBhcGlfdmFyaWFibGVfcmVzdWx0czogIiIsCiAgICAgICAgYXBpX3VybDogIiIsCiAgICAgICAgYXBpX2hlYWRlcjogIiIsCiAgICAgICAgYXBpX2JvZHk6ICIiCiAgICAgIH0sCiAgICAgIGFjdGl2ZU5hbWVzOiAiIiwKICAgICAgb3B0aW9uczM6IHsKICAgICAgICB0eXBlOiAncGllJywKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+a1i+ivlee7k+aenCcKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgcG9zaXRpb246ICdsZWZ0JwogICAgICAgIH0sCiAgICAgICAgYmdDb2xvcjogJyNmYmZiZmInLAogICAgICAgIGxhYmVsczogWyfmiJDlip8nLCAn5aSx6LSlJ10sCiAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICBkYXRhOiBbMCwgMF0KICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QXBpQ2FzZVJlc3VsdExpc3RGdW4oKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOmhteetvi3mnaEv6aG1IOi3s+i9rAogICAgaGFuZGxlU2l6ZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2l6ZUNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5zaXplX3BhZ2UgPSB2YWw7CgogICAgICBpZiAodGhpcy5hcGlfc3RhdGUgPT09IDApIHsKICAgICAgICB0aGlzLmdldEFwaUNhc2VSZXN1bHRMaXN0RnVuKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5nZXRBcGlDYXNlUmVzdWx0RXJyb3JMaXN0RnVuKCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDlupXpg6jpobXnrb7ot7PovawKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB2YWw7CgogICAgICBpZiAodGhpcy5hcGlfc3RhdGUgPT09IDApIHsKICAgICAgICB0aGlzLmdldEFwaUNhc2VSZXN1bHRMaXN0RnVuKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5nZXRBcGlDYXNlUmVzdWx0RXJyb3JMaXN0RnVuKCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDojrflj5ZBUEnmtYvor5XnlKjkvovnu5PmnpzliJfooagKICAgIGdldEFwaUNhc2VSZXN1bHRMaXN0RnVuOiBmdW5jdGlvbiBnZXRBcGlDYXNlUmVzdWx0TGlzdEZ1bigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGdldEFwaUNhc2VDaGVja1Jlc3VsdExpc3RSZXF1ZXN0KHRoaXMuYXBpX3Jlc3VsdF9pZCwgdGhpcy5zaXplX3BhZ2UsIHRoaXMuY3VycmVudFBhZ2UpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAodHJ1ZSA9PT0gZGF0YS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgIF90aGlzLmFwaV9zdGF0ZSA9IDA7CiAgICAgICAgICBfdGhpcy50YWJsZURhdGEgPSBkYXRhLmRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMub3B0aW9uczMuZGF0YXNldHNbMF0uZGF0YSA9IGRhdGEuZGF0YS5kYXRhLmNhc2VfcmVzdWx0X3RvdGFsOwogICAgICAgICAgX3RoaXMudG90YWxfY2FzZSA9IGRhdGEuZGF0YS5kYXRhLmNhc2VfcmVzdWx0X3RvdGFsWzBdICsgZGF0YS5kYXRhLmRhdGEuY2FzZV9yZXN1bHRfdG90YWxbMV07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCLojrflj5bmjqXlj6PlpLHotKUiKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPlkFQSea1i+ivleeUqOS+i+e7k+aenC3lpLHotKXliJfooagKICAgIGdldEFwaUNhc2VSZXN1bHRFcnJvckxpc3RGdW46IGZ1bmN0aW9uIGdldEFwaUNhc2VSZXN1bHRFcnJvckxpc3RGdW4oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZ2V0QXBpQ2FzZUNoZWNrUmVzdWx0RXJyb3JMaXN0UmVxdWVzdCh0aGlzLmFwaV9yZXN1bHRfaWQsIHRoaXMuc2l6ZV9wYWdlLCB0aGlzLmN1cnJlbnRQYWdlKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICBfdGhpczIuYXBpX3N0YXRlID0gMTsKICAgICAgICAgIF90aGlzMi50YWJsZURhdGEgPSBkYXRhLmRhdGEuZGF0YS5kYXRhOwogICAgICAgICAgX3RoaXMyLnRvdGFsX2Nhc2UgPSBkYXRhLmRhdGEuZGF0YS5jYXNlX3Jlc3VsdF90b3RhbFsxXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCLojrflj5bmjqXlj6PlpLHotKUiKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPluWNleeLrOa1i+ivleeUqOS+i+a1i+ivleaKpeWRigogICAgU2luZ2xlQXBpQ2FzZVJlcG9ydDogZnVuY3Rpb24gU2luZ2xlQXBpQ2FzZVJlcG9ydChkYXRhKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coIui/meaYr+WNleeLrGlkIiwgZGF0YS5pZCk7CiAgICAgIHRoaXMuYXBpX3Rlc3RfcmVzdWx0X2lkID0gZGF0YS5pZDsKICAgICAgcG9zdFNpbmdsZUFwaUNhc2VDaGVja1Jlc3VsdFJlcXVlc3QodGhpcy5hcGlfdGVzdF9yZXN1bHRfaWQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZygiemhlc2hpc2h1anUiLCBkYXRhLmRhdGEuZGF0YS5kYXRhKTsKCiAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICB2YXIgc2luZ2xlX3Jlc3VsdCA9IGRhdGEuZGF0YS5kYXRhLmRhdGFbMF07CiAgICAgICAgICBfdGhpczMuZGlhbG9nVGFibGVWaXNpYmxlID0gdHJ1ZTsKICAgICAgICAgIF90aGlzMy5hcGlDYXNlUmVzdWx0Rm9ybSA9IF9vYmplY3RTcHJlYWQoe30sIHNpbmdsZV9yZXN1bHQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UuZXJyb3IoIuiOt+WPluaOpeWPo+Wksei0pSIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g6L+U5ZueQVBJ5oql5ZGK5YiX6KGoCiAgICByZXR1cm5SZXBvcnRMaXN0OiBmdW5jdGlvbiByZXR1cm5SZXBvcnRMaXN0KCkgewogICAgICB0aGlzLiRwYXJlbnQucmV0dXJuQVBJUmVwb3J0TGlzdCgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKHRoaXMuYXBpUmVzdWx0SWQpOwogICAgdGhpcy5hcGlfcmVzdWx0X2lkID0gdGhpcy5hcGlSZXN1bHRJZDsKICB9Cn07"},{"version":3,"sources":["APITestTaskResultDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item>\r\n                    <i class=\"el-icon-lx-calendar\"></i> API任务管理\r\n                </el-breadcrumb-item>\r\n                <el-breadcrumb-item>API项目</el-breadcrumb-item>\r\n                <el-breadcrumb-item>API任务</el-breadcrumb-item>\r\n                <el-breadcrumb-item>API测试报告</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <el-row>\r\n            <el-button @click=\"returnReportList\">返回</el-button>\r\n            <el-button type=\"primary\" @click=\"getApiCaseResultListFun\">全部</el-button>\r\n            <el-button type=\"danger\" @click=\"getApiCaseResultErrorListFun\">失败</el-button>\r\n        </el-row>\r\n        <div class=\"schart-box\">\r\n            <schart class=\"schart\" canvasId=\"pie\" :options=\"options3\"></schart>\r\n        </div>\r\n        <div>\r\n            <el-table\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\"\r\n            >\r\n                <!--                    :default-sort = \"{prop: 'date', order: 'descending'}\">-->\r\n                <el-table-column\r\n                    prop=\"id\"\r\n                    label=\"id\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_task_name\"\r\n                    label=\"任务名称\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_business_test_name\"\r\n                    label=\"API业务测试名称\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_test_case_name\"\r\n                    label=\"测试用例名称\"\r\n                    sortable\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"api_successful\"\r\n                    label=\"成功\"\r\n                    width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    prop=\"api_error\"\r\n                    label=\"失败\"\r\n                    width=\"180\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                    prop=\"create_time\"\r\n                    label=\"时间\"\r\n                    width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button\r\n                            size=\"mini\"\r\n                            type=\"danger\"\r\n                            @click=\"SingleApiCaseReport(scope.row)\">查看详情</el-button>\r\n\r\n                        <el-dialog title=\"测试报告详情\" :visible.sync=\"dialogTableVisible\" :fullscreen=false>\r\n                            <el-tabs :model=\"apiCaseResultForm\">\r\n                                <el-tab-pane label=\"异常\" name=\"1\">\r\n                                    <p>{{ apiCaseResultForm.abnormal }}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"json提取变量转换\" name=\"2\">\r\n                                    <p>{{apiCaseResultForm.json_extract_variable_conversion}}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"断言结果\" name=\"3\">\r\n                                    <p>{{apiCaseResultForm.api_assertion_results}}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"参数提取\" name=\"4\">\r\n                                    <!--                  <p>{{apiCaseResultForm.api_variable_results}}</p>-->\r\n                                    <json-viewer :value=\"apiCaseResultForm.api_variable_results\" :expand-depth=5></json-viewer>\r\n\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"API请求结果\" name=\"5\">\r\n                                    <!--                  <pre>{{JSON.stringify(apiCaseResultForm.api_request_results,  null, 4)}}</pre>-->\r\n                                    <json-viewer :value=\"apiCaseResultForm.api_request_results\" :expand-depth=5></json-viewer>\r\n\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"请求URL\" name=\"6\">\r\n                                    <p>{{ apiCaseResultForm.api_url }}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"请求Header\" name=\"7\">\r\n                                    <p>{{ apiCaseResultForm.api_header }}</p>\r\n                                </el-tab-pane>\r\n                                <el-tab-pane label=\"请求Body\" name=\"8\">\r\n                                    <!--                  <pre>{{JSON.stringify(apiCaseResultForm.api_body ,  null, 4)}}</pre>-->\r\n                                    <p>{{ apiCaseResultForm.api_body }}</p>\r\n                                </el-tab-pane>\r\n                            </el-tabs>\r\n                        </el-dialog>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <el-pagination\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\"\r\n                :page-sizes=\"[10, 20, 30, 40, 50]\"\r\n                :page-size=\"size_page\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"total_case\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getApiCaseCheckResultListRequest, postSingleApiCaseCheckResultRequest, getApiCaseCheckResultErrorListRequest} from '../../../../api/apiAutomation/apiTestTask';\r\nimport Schart from 'vue-schart';\r\nimport Vue from 'vue'\r\nimport JsonViewer from 'vue-json-viewer'\r\nVue.use(JsonViewer)\r\n\r\nexport default {\r\n    name: 'APITestTaskResultDetails',\r\n    props: ['apiResultId'],\r\n    components: {\r\n        Schart\r\n    },\r\n    data(){\r\n\r\n        return{\r\n\r\n            apiParameterExtractionData:[\r\n                {\r\n                    api_value_variable: \"\",\r\n                    api_key_variable: \"\",\r\n                    api_variable_results: \"\"\r\n\r\n                }\r\n            ],\r\n\r\n            currentPage: 1,\r\n            total_case: 0,\r\n            size_page: 10,\r\n            tableData: [],\r\n            api_state: 0,\r\n            testTaskId: \"\",\r\n            api_Result: \"\",\r\n            api_result_id: \"\",\r\n            api_test_result_id: \"\",\r\n            dialogTableVisible: false,\r\n            gridData: [],\r\n            apiCaseResult: 'second',\r\n            apiCaseResultForm: {\r\n                api_error: \"\",\r\n                api_successful : \"\",\r\n                abnormal: \"\",\r\n                json_extract_variable_conversion: \"\",\r\n                api_assertion_results: \"\",\r\n                api_request_results: \"\",\r\n                api_variable_results: \"\",\r\n                api_url: \"\",\r\n                api_header: \"\",\r\n                api_body: \"\",\r\n\r\n\r\n\r\n            },\r\n            activeNames: \"\",\r\n            options3: {\r\n                type: 'pie',\r\n                title: {\r\n                    text: '测试结果'\r\n                },\r\n                legend: {\r\n                    position: 'left'\r\n                },\r\n                bgColor: '#fbfbfb',\r\n                labels: ['成功', '失败'],\r\n                datasets: [\r\n                    {\r\n                        data: [0,0]\r\n                    },\r\n                ]\r\n            },\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.getApiCaseResultListFun()\r\n\r\n\r\n    },\r\n    methods: {\r\n\r\n        // 页签-条/页 跳转\r\n        handleSizeChange(val) {\r\n            this.size_page = val\r\n            if (this.api_state === 0){\r\n                this.getApiCaseResultListFun()\r\n            }\r\n            else {\r\n                this.getApiCaseResultErrorListFun()\r\n            }\r\n        },\r\n        // 底部页签跳转\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val\r\n            if (this.api_state === 0){\r\n                this.getApiCaseResultListFun()\r\n            }\r\n            else {\r\n                this.getApiCaseResultErrorListFun()\r\n            }\r\n        },\r\n\r\n        // 获取API测试用例结果列表\r\n        getApiCaseResultListFun() {\r\n            getApiCaseCheckResultListRequest(this.api_result_id, this.size_page, this.currentPage).then(data =>{\r\n                if (true === data.data.success){\r\n                    this.api_state = 0\r\n                    this.tableData = data.data.data.data;\r\n                    this.options3.datasets[0].data = data.data.data.case_result_total\r\n                    this.total_case = data.data.data.case_result_total[0] + data.data.data.case_result_total[1]\r\n\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n        // 获取API测试用例结果-失败列表\r\n        getApiCaseResultErrorListFun() {\r\n            getApiCaseCheckResultErrorListRequest(this.api_result_id, this.size_page, this.currentPage).then(data =>{\r\n                if (true === data.data.success){\r\n                    this.api_state = 1\r\n                    this.tableData = data.data.data.data;\r\n                    this.total_case = data.data.data.case_result_total[1]\r\n\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n        },\r\n\r\n\r\n        // 获取单独测试用例测试报告\r\n        SingleApiCaseReport(data){\r\n            console.log(\"这是单独id\",data.id)\r\n            this.api_test_result_id = data.id\r\n\r\n\r\n            postSingleApiCaseCheckResultRequest(this.api_test_result_id).then(data =>{\r\n                console.log(\"zheshishuju\", data.data.data.data)\r\n\r\n                if (true === data.data.success){\r\n                    let single_result = data.data.data.data[0]\r\n                    this.dialogTableVisible = true\r\n                    this.apiCaseResultForm = {...single_result }\r\n\r\n\r\n                }else {\r\n                    this.$message.error(\"获取接口失败\")\r\n                }\r\n\r\n            })\r\n\r\n        },\r\n\r\n        // 返回API报告列表\r\n        returnReportList(){\r\n            this.$parent.returnAPIReportList();\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n    created() {\r\n        console.log(this.apiResultId)\r\n        this.api_result_id = this.apiResultId\r\n\r\n    }\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.schart{\r\n    height: 300px;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components/page/apiAutomation/apiTask"}]}