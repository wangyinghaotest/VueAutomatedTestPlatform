{"remainingRequest":"E:\\test-platform-vue\\node_modules\\thread-loader\\dist\\cjs.js!E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\test-platform-vue\\src\\components\\page\\uiPage\\UiPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\test-platform-vue\\src\\components\\page\\uiPage\\UiPage.vue","mtime":1650008441733},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1650008440786},{"path":"E:\\test-platform-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1650008434007},{"path":"E:\\test-platform-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650008434508},{"path":"E:\\test-platform-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1650008440984}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgYWRkVWlQYWdlUmVxdWVzdCwgZGVsZXRlU2luZ2xlVWlQYWdlUmVxdWVzdCwgdXBkYXRlU2luZ2xlVWlQYWdlUmVxdWVzdCwgZ2V0U2luZ2xlVWlQYWdlUmVxdWVzdCwgZ2V0U2luZ2xlVWlQcm9qZWN0UGFnZVJlcXVlc3QgfSBmcm9tICIuLi8uLi8uLi9hcGkvdWlQYWdlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdVaVBhZ2UnLAogIHByb3BzOiBbJ3R5cGUnLCAndWlQcm9qZWN0SWQnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgcGFnZTogewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgdG90YWw6IDAsCiAgICAgICAgc2l6ZTogMTAKICAgICAgfSwKICAgICAgYWRkUGFnZWRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgZWRpdFBhZ2VkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsCiAgICAgIGFkZFBhZ2VEYXRhOiB7CiAgICAgICAgdWlfcGFnZV9uYW1lOiAiIiwKICAgICAgICB1aV9wYWdlX2Rlc2NyaWJlOiAiIiwKICAgICAgICB1aV9wcm9qZWN0X2lkOiB0aGlzLnByb2plY3RJZAogICAgICB9LAogICAgICBwcm9qZWN0U2VsZWN0OiBbXSwKICAgICAgcHJvamVjdFNlbGVjdElkOiAiIiwKICAgICAgZWRpdFBhZ2VEYXRhOiB7CiAgICAgICAgdWlfcGFnZV9uYW1lOiAiIiwKICAgICAgICB1aV9wYWdlX2Rlc2NyaWJlOiAiIiwKICAgICAgICB1aV9wcm9qZWN0X2lkOiB0aGlzLnByb2plY3RJZCwKICAgICAgICBpZDogMAogICAgICB9LAogICAgICBwYWdlSWQ6ICIiLAogICAgICBwcm9qZWN0SWQ6ICIiLAogICAgICBydWxlczogewogICAgICAgIHVpX3BhZ2VfbmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpemhtemdouWQjeensCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICB1aV9wYWdlX2Rlc2NyaWJlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6aG16Z2i5o+P6L+wJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gcm93LmFkZHJlc3M7CiAgICB9LAogICAgaGFuZGxlRWRpdDogZnVuY3Rpb24gaGFuZGxlRWRpdChpbmRleCwgcm93KSB7CiAgICAgIGNvbnNvbGUubG9nKGluZGV4LCByb3cpOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKGluZGV4LCByb3cpIHsKICAgICAgY29uc29sZS5sb2coaW5kZXgsIHJvdyk7CiAgICB9LAogICAgaGFuZGxlU2l6ZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2l6ZUNoYW5nZShzaXplKSB7CiAgICAgIHRoaXMucGFnZS5zaXplID0gc2l6ZTsKICAgICAgdGhpcy5nZXRVaVBhZ2VGdW4oKTsKICAgIH0sCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKGluZGV4KSB7CiAgICAgIHRoaXMucGFnZS5wYWdlID0gaW5kZXg7CiAgICAgIHRoaXMuZ2V0VWlQYWdlRnVuKCk7CiAgICB9LAogICAgLy8g5re75YqgVUnpobXpnaIKICAgIGFkZFBhZ2U6IGZ1bmN0aW9uIGFkZFBhZ2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcmVxID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmFkZFBhZ2VEYXRhKSk7CiAgICAgIGNvbnNvbGUubG9nKHJlcSk7CiAgICAgIHRoaXMuJHJlZnMuYWRkUGFnZUZvcm1SZWYudmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICAvLyDku6PooajmoKHpqozpgJrov4cKICAgICAgICAgIGFkZFVpUGFnZVJlcXVlc3QocmVxKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgICAgaWYgKHRydWUgPT09IGRhdGEuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgX3RoaXMuYWRkUGFnZWRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgIF90aGlzLmdldFNpbmdsZVVpUHJvamVjdFBhZ2UoKTsKCiAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5Yib5bu66aG16Z2i5oiQ5YqfIik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoIuWIm+W7uumhtemdouWksei0pSIpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy/moKHpqozlpLHotKUKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOa3u+WKoOmhtemdoiDlvLnnqpcKICAgIGFkZFBhZ2VQb3B1cDogZnVuY3Rpb24gYWRkUGFnZVBvcHVwKCkgewogICAgICB0aGlzLmFkZFBhZ2VEYXRhID0gewogICAgICAgIHVpX3BhZ2VfbmFtZTogIiIsCiAgICAgICAgdWlfcGFnZV9kZXNjcmliZTogIiIsCiAgICAgICAgdWlfcHJvamVjdF9pZDogdGhpcy5wcm9qZWN0SWQKICAgICAgfTsKICAgICAgdGhpcy5hZGRQYWdlZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZU5vZGVDbGljazogZnVuY3Rpb24gaGFuZGxlTm9kZUNsaWNrKGRhdGEpIHsKICAgICAgdGhpcy5jdXJyZW50U2VydmljZUlkID0gZGF0YS5pZDsKICAgIH0sCiAgICAvL+e8lui+kemhtemdogogICAgZWRpdFBhZ2U6IGZ1bmN0aW9uIGVkaXRQYWdlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciByZXEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZWRpdFBhZ2VEYXRhKSk7CiAgICAgIHRoaXMuJHJlZnMuZWRpdFBhZ2VGb3JtUmVmLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5wcm9qZWN0SWQpOwoKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIC8vIOS7o+ihqOagoemqjOmAmui/hwogICAgICAgICAgdXBkYXRlU2luZ2xlVWlQYWdlUmVxdWVzdChfdGhpczIucGFnZUlkLCByZXEpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICBpZiAodHJ1ZSA9PT0gZGF0YS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICBfdGhpczIuZ2V0U2luZ2xlVWlQcm9qZWN0UGFnZSgpOwoKICAgICAgICAgICAgICBfdGhpczIuZWRpdFBhZ2VkaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygi57yW6L6R6aG16Z2i5oiQ5YqfIik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLmVycm9yKCLnvJbovpHpobXpnaLlpLHotKUiKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8v5qCh6aqM5aSx6LSlCiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvL+e8lui+kemhtemdouW8ueeql+W5tuiOt+WPluWNleS4qumhueebrgogICAgZWRpdFBhZ2VQb3B1cDogZnVuY3Rpb24gZWRpdFBhZ2VQb3B1cChkYXRhKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5wYWdlSWQgPSBkYXRhLmlkOwogICAgICB0aGlzLmVkaXRQYWdlRGF0YSA9IGRhdGE7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMucGFnZUlkKTsgLy8g6I635Y+W5Y2V5Liq6aG16Z2i5L+h5oGvCgogICAgICBnZXRTaW5nbGVVaVBhZ2VSZXF1ZXN0KHRoaXMucGFnZUlkKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgX3RoaXMzLmVkaXRQYWdlRGF0YS51aV9wYWdlX25hbWUgPSBkYXRhLmRhdGEuZGF0YS51aV9wYWdlX25hbWU7CiAgICAgICAgICBfdGhpczMuZWRpdFBhZ2VEYXRhLnVpX3BhZ2VfZGVzY3JpYmUgPSBkYXRhLmRhdGEuZGF0YS51aV9wYWdlX2Rlc2NyaWJlOwogICAgICAgICAgX3RoaXMzLmVkaXRQYWdlRGF0YS51aV9wcm9qZWN0X2lkID0gZGF0YS5kYXRhLmRhdGEudWlfcHJvamVjdDsKICAgICAgICAgIF90aGlzMy5lZGl0UGFnZWRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLmVycm9yKCLojrflj5bmjqXlj6PlpLHotKUiKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v5Yig6Zmk5Y2V5Liq6aG555uuCiAgICBkZWxldGVQYWdlUG9wdXA6IGZ1bmN0aW9uIGRlbGV0ZVBhZ2VQb3B1cChkYXRhKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy5wYWdlSWQgPSBkYXRhLmlkOwogICAgICBkZWxldGVTaW5nbGVVaVBhZ2VSZXF1ZXN0KHRoaXMucGFnZUlkKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgX3RoaXM0LmdldFNpbmdsZVVpUHJvamVjdFBhZ2UoKTsKCiAgICAgICAgICBfdGhpczQuJG1lc3NhZ2Uuc3VjY2Vzcygi5Yig6Zmk6aG16Z2i5oiQ5YqfIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzNC4kbWVzc2FnZS5lcnJvcigi5Yig6Zmk6aG16Z2i5aSx6LSlIik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvL+iOt+WPliDljZXkuKpVSemhueebruS4reWMheWQq+W+l+aJgOaciemhtemdogogICAgZ2V0U2luZ2xlVWlQcm9qZWN0UGFnZTogZnVuY3Rpb24gZ2V0U2luZ2xlVWlQcm9qZWN0UGFnZSgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBnZXRTaW5nbGVVaVByb2plY3RQYWdlUmVxdWVzdCh0aGlzLnByb2plY3RJZCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmICh0cnVlID09PSBkYXRhLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLmRhdGEpOwogICAgICAgICAgX3RoaXM1LnRhYmxlRGF0YSA9IGRhdGEuZGF0YS5kYXRhOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczUuJG1lc3NhZ2UuZXJyb3IoIuiOt+WPluaOpeWPo+Wksei0pSIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy/ov5Tlm57pobnnm67liJfooagKICAgIHJldHVyblByb2plY3RMaXN0OiBmdW5jdGlvbiByZXR1cm5Qcm9qZWN0TGlzdCgpIHsKICAgICAgdGhpcy4kcGFyZW50LnByb2plY3RMaXN0KCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2codGhpcy51aVByb2plY3RJZCk7CgogICAgaWYgKCdlbnRlcicgPT09IHRoaXMudHlwZSkgewogICAgICB0aGlzLnByb2plY3RJZCA9IHRoaXMudWlQcm9qZWN0SWQ7CiAgICAgIHRoaXMuZ2V0U2luZ2xlVWlQcm9qZWN0UGFnZSgpOwogICAgfQogIH0KfTs="},null]}